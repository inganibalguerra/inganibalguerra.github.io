{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/components/footer/footer.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/sidebar/sidebar.component.html","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/layouts/auth-layout/auth-layout.component.html","./src/app/pages/account-control/account-control-list-budgets/account-control-list-budgets.component.html","./src/app/pages/account-control/account-control-list-transactions/account-control-list-transactions.component.html","./src/app/pages/account-control/account-control-management-account/account-control-management-account.component.html","./src/app/pages/account-control/account-control-management-categories/account-control-management-categories.component.html","./src/app/pages/account-control/account-control-management-transaction/account-control-management-transaction.component.html","./src/app/pages/account-control/account-control-transaction-card/account-control-transaction-card.component.html","./src/app/pages/account-control/account-control.component.html","./src/app/pages/briefcases/briefcases.component.html","./src/app/pages/business-control-settings/business-control-settings.component.html","./src/app/pages/business-control-verify/business-control-verify.component.html","./src/app/pages/business-control-voucher/business-control-voucher.component.html","./src/app/pages/business-control/business-control.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/components.module.ts","./src/app/components/footer/footer.component.scss","./src/app/components/footer/footer.component.ts","./src/app/components/navbar/navbar.component.scss","./src/app/components/navbar/navbar.component.ts","./src/app/components/sidebar/sidebar.component.scss","./src/app/components/sidebar/sidebar.component.ts","./src/app/entities/account-control.ts","./src/app/layouts/admin-layout/admin-layout.component.scss","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/layouts/auth-layout/auth-layout.component.scss","./src/app/layouts/auth-layout/auth-layout.component.ts","./src/app/pages/account-control/account-control-list-budgets/account-control-list-budgets.component.css","./src/app/pages/account-control/account-control-list-budgets/account-control-list-budgets.component.ts","./src/app/pages/account-control/account-control-list-transactions/account-control-list-transactions.component.css","./src/app/pages/account-control/account-control-list-transactions/account-control-list-transactions.component.ts","./src/app/pages/account-control/account-control-management-account/account-control-management-account.component.css","./src/app/pages/account-control/account-control-management-account/account-control-management-account.component.ts","./src/app/pages/account-control/account-control-management-categories/account-control-management-categories.component.css","./src/app/pages/account-control/account-control-management-categories/account-control-management-categories.component.ts","./src/app/pages/account-control/account-control-management-transaction/account-control-management-transaction.component.css","./src/app/pages/account-control/account-control-management-transaction/account-control-management-transaction.component.ts","./src/app/pages/account-control/account-control-transaction-card/account-control-transaction-card.component.css","./src/app/pages/account-control/account-control-transaction-card/account-control-transaction-card.component.ts","./src/app/pages/account-control/account-control.component.css","./src/app/pages/account-control/account-control.component.ts","./src/app/pages/briefcases/briefcases.component.css","./src/app/pages/briefcases/briefcases.component.ts","./src/app/pages/business-control-settings/business-control-settings.component.css","./src/app/pages/business-control-settings/business-control-settings.component.ts","./src/app/pages/business-control-verify/business-control-verify.component.css","./src/app/pages/business-control-verify/business-control-verify.component.ts","./src/app/pages/business-control-voucher/business-control-voucher.component.css","./src/app/pages/business-control-voucher/business-control-voucher.component.ts","./src/app/pages/business-control/business-control.component.css","./src/app/pages/business-control/business-control.component.ts","./src/app/pages/common/base-component.ts","./src/app/services/account-control/account-control.service.ts","./src/app/services/business-control/business-control.service.ts","./src/app/services/credit/credit.service.ts","./src/app/services/crypt/crypt.service.ts","./src/app/services/google-services/google.service.ts","./src/app/services/load-data/load-data.service.ts","./src/app/services/pdf/pdf.service.ts","./src/app/services/qr-code/qr-code.service.ts","./src/app/services/summary-resume/summary-resume.service.ts","./src/app/services/utils/transaction-operation.ts","./src/environments/environment.ts","./src/main.ts","crypto (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<router-outlet></router-outlet>\\n\"","export default \"<footer class=\\\"footer\\\" *ngIf=\\\"Summary && !Summary.HideCopyright\\\">\\n  <div class=\\\"row align-items-center justify-content-xl-between\\\">\\n    <div class=\\\"col-xl-6\\\">\\n      <div class=\\\"copyright text-center text-xl-left text-muted\\\">\\n        &copy; {{ test | date: \\\"yyyy\\\" }} <a href=\\\"https://inganibalguerra.github.io\\\" class=\\\"font-weight-bold ml-1\\\" target=\\\"_blank\\\">Anibal Guerra</a>\\n      </div>\\n    </div>\\n    <!-- <div class=\\\"col-xl-6\\\">\\n      <ul class=\\\"nav nav-footer justify-content-center justify-content-xl-end\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"https://www.creative-tim.com?ref=ada-footer-admin-layout\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">Creative Tim</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"https://www.creative-tim.com/presentation?ref=ada-footer-admin-layout\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">About Us</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"http://blog.creative-tim.com?ref=ada-footer-admin-layout\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">Blog</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"https://github.com/creativetimofficial/argon-dashboard-angular/blob/master/LICENSE.md\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">MIT License</a>\\n        </li>\\n      </ul>\\n    </div> -->\\n  </div>\\n</footer>\\n\"","export default \"<nav class=\\\"navbar navbar-top navbar-expand-md navbar-dark\\\" id=\\\"navbar-main\\\" *ngIf=\\\"Summary\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand -->\\n    <a class=\\\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\">{{getTitle()}}</a>\\n    <!-- Form -->\\n    <!-- <form class=\\\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\\\">\\n      <div class=\\\"form-group mb-0\\\" [ngClass]=\\\"{ 'focused': focus === true }\\\">\\n        <div class=\\\"input-group input-group-alternative\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-search\\\"></i></span>\\n          </div>\\n          <input class=\\\"form-control\\\" placeholder=\\\"Search\\\" type=\\\"text\\\" (focus)=\\\"focus = true\\\"\\n          (blur)=\\\"focus = false\\\">\\n        </div>\\n      </div>\\n    </form> -->\\n    <!-- User -->\\n    <ul class=\\\"navbar-nav align-items-center d-none d-md-flex\\\">\\n      <li class=\\\"nav-item\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n        <a class=\\\"nav-link pr-0\\\" role=\\\"button\\\" ngbDropdownToggle>\\n          <div class=\\\"media align-items-center\\\">\\n            <span class=\\\"avatar avatar-sm rounded-circle\\\">\\n              <img alt=\\\"Image placeholder\\\" src=\\\"config/profile.png\\\">\\n            </span>\\n            <div class=\\\"media-body ml-2 d-none d-lg-block\\\">\\n              <span class=\\\"mb-0 text-sm  font-weight-bold\\\">{{Summary.ShortName}}</span>\\n            </div>\\n          </div>\\n        </a>\\n        <div class=\\\"dropdown-menu-arrow dropdown-menu-right\\\" ngbDropdownMenu>\\n          <div class=\\\" dropdown-header noti-title\\\">\\n            <h6 class=\\\"text-overflow m-0\\\">Bienvenido!</h6>\\n          </div>\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-single-02\\\"></i>\\n            <span>Mi Perfil</span>\\n          </a>\\n          <!-- <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-settings-gear-65\\\"></i>\\n            <span>Settings</span>\\n          </a>\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-calendar-grid-58\\\"></i>\\n            <span>Activity</span>\\n          </a>\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-support-16\\\"></i>\\n            <span>Support</span>\\n          </a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a href=\\\"#!\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-user-run\\\"></i>\\n            <span>Logout</span>\\n          </a> -->\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","export default \"<nav class=\\\"navbar navbar-vertical navbar-expand-md navbar-light bg-white\\\" id=\\\"sidenav-main\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Toggler -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed=!isCollapsed\\\"\\n       aria-controls=\\\"sidenav-collapse-main\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <!-- Brand -->\\n    <a class=\\\"navbar-brand pt-0\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\">\\n      <img src=\\\"./assets/img/icono.png\\\" class=\\\"navbar-brand-img\\\" style=\\\"max-height: 6.5rem;\\\" alt=\\\"...\\\">\\n    </a>\\n    <!-- User -->\\n    <ul class=\\\"nav align-items-center d-md-none\\\">\\n      <!-- <li class=\\\"nav-item\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n        <a class=\\\"nav-link nav-link-icon\\\" role=\\\"button\\\" ngbDropdownToggle>\\n          <i class=\\\"ni ni-bell-55\\\"></i>\\n        </a>\\n        <div class=\\\"dropdown-menu-arrow dropdown-menu-right\\\" ngbDropdownMenu>\\n          <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another action</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Something else here</a>\\n        </div>\\n      </li> -->\\n      <li class=\\\"nav-item\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n        <a class=\\\"nav-link\\\" role=\\\"button\\\" ngbDropdownToggle>\\n          <div class=\\\"media align-items-center\\\">\\n            <span class=\\\"avatar avatar-sm rounded-circle\\\">\\n              <img alt=\\\"Image placeholder\\\" src=\\\"./config/profile.png\\\">\\n            </span>\\n          </div>\\n        </a>\\n        <div class=\\\"dropdown-menu-arrow dropdown-menu-right\\\" ngbDropdownMenu>\\n          <div class=\\\" dropdown-header noti-title\\\">\\n            <h6 class=\\\"text-overflow m-0\\\">Bienvenido!</h6>\\n          </div>\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-single-02\\\"></i>\\n            <span>Mi Perfil</span>\\n          </a>\\n          <!-- <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-settings-gear-65\\\"></i>\\n            <span>Settings</span>\\n          </a>\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-calendar-grid-58\\\"></i>\\n            <span>Activity</span>\\n          </a>\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-support-16\\\"></i>\\n            <span>Support</span>\\n          </a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a href=\\\"#!\\\" class=\\\"dropdown-item\\\">\\n            <i class=\\\"ni ni-user-run\\\"></i>\\n            <span>Logout</span>\\n          </a> -->\\n        </div>\\n      </li>\\n    </ul>\\n    <!-- Collapse -->\\n    <div class=\\\"collapse navbar-collapse\\\"  [ngbCollapse]=\\\"isCollapsed\\\" id=\\\"sidenav-collapse-main\\\">\\n      <!-- Collapse header -->\\n      <div class=\\\"navbar-collapse-header d-md-none\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6 collapse-brand\\\">\\n            <a  routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\">\\n              <img src=\\\"./assets/img/icono.png\\\">\\n            </a>\\n          </div>\\n          <div class=\\\"col-6 collapse-close\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggler\\\" (click)=\\\"isCollapsed=!isCollapsed\\\">\\n              <span></span>\\n              <span></span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- Form -->\\n      <form class=\\\"mt-4 mb-3 d-md-none\\\">\\n        <div class=\\\"input-group input-group-rounded input-group-merge\\\">\\n          <input type=\\\"search\\\" class=\\\"form-control form-control-rounded form-control-prepended\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text\\\">\\n              <span class=\\\"fa fa-search\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n      <!-- Navigation -->\\n      <ul class=\\\"navbar-nav\\\">\\n          <li *ngFor=\\\"let menuItem of menuItems\\\" class=\\\"{{menuItem.class}} nav-item\\\">\\n              <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"[menuItem.path]\\\" class=\\\"nav-link\\\">\\n                  <i class=\\\"ni {{menuItem.icon}}\\\"></i>\\n                  {{menuItem.title}}\\n              </a>\\n          </li>\\n      </ul>\\n      <!-- Divider \\n      <hr class=\\\"my-3\\\">\\n      Heading\\n      <h6 class=\\\"navbar-heading text-muted\\\">Documentation</h6>\\n      Navigation \\n      <ul class=\\\"navbar-nav mb-md-3\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"https://demos.creative-tim.com/argon-dashboard-angular/documentation/tutorial\\\">\\n            <i class=\\\"ni ni-spaceship\\\"></i> Getting started\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"https://demos.creative-tim.com/argon-dashboard-angular/documentation/colors\\\">\\n            <i class=\\\"ni ni-palette\\\"></i> Foundation\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"https://demos.creative-tim.com/argon-dashboard-angular/documentation/alerts\\\">\\n            <i class=\\\"ni ni-ui-04\\\"></i> Components\\n          </a>\\n        </li>\\n      </ul>-->\\n    </div>\\n  </div>\\n</nav>\\n\"","export default \"<!-- Sidenav -->\\n<app-sidebar></app-sidebar>\\n<div class=\\\"main-content\\\">\\n  <!-- Top navbar -->\\n  <app-navbar></app-navbar>\\n  <!-- Pages -->\\n  <router-outlet></router-outlet>\\n  <div class=\\\"container-fluid\\\">\\n    <app-footer></app-footer>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"main-content\\\">\\n  <nav class=\\\"navbar navbar-top navbar-horizontal navbar-expand-md navbar-dark\\\">\\n    <div class=\\\"container px-4\\\">\\n      <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">\\n        <img src=\\\"assets/img/brand/argon-white.png\\\" />\\n      </a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed=!isCollapsed\\\"\\n         aria-controls=\\\"sidenav-collapse-main\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\"  [ngbCollapse]=\\\"isCollapsed\\\" id=\\\"sidenav-collapse-main\\\">\\n        <!-- Collapse header -->\\n        <div class=\\\"navbar-collapse-header d-md-none\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6 collapse-brand\\\">\\n              <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">\\n                <img src=\\\"assets/img/brand/blue.png\\\">\\n              </a>\\n            </div>\\n            <div class=\\\"col-6 collapse-close\\\">\\n              <button type=\\\"button\\\" class=\\\"navbar-toggler\\\" (click)=\\\"isCollapsed=!isCollapsed\\\" >\\n                <span></span>\\n                <span></span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Navbar items -->\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link nav-link-icon\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">\\n              <i class=\\\"ni ni-planet\\\"></i>\\n              <span class=\\\"nav-link-inner--text\\\">Dashboard</span>\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link nav-link-icon\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/register']\\\">\\n              <i class=\\\"ni ni-circle-08\\\"></i>\\n              <span class=\\\"nav-link-inner--text\\\">Register</span>\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link nav-link-icon\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/login']\\\">\\n              <i class=\\\"ni ni-key-25\\\"></i>\\n              <span class=\\\"nav-link-inner--text\\\">Login</span>\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link nav-link-icon\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user-profile']\\\">\\n              <i class=\\\"ni ni-single-02\\\"></i>\\n              <span class=\\\"nav-link-inner--text\\\">Profile</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\\n<footer class=\\\"py-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row align-items-center justify-content-xl-between\\\">\\n      <div class=\\\"col-xl-6\\\">\\n        <div class=\\\"copyright text-center text-xl-left text-muted\\\">\\n          &copy; {{ test | date: \\\"yyyy\\\" }} <a href=\\\"https://www.creative-tim.com?ref=ada-footer-auth-layout\\\" class=\\\"font-weight-bold ml-1\\\" target=\\\"_blank\\\">Creative Tim</a>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xl-6\\\">\\n        <ul class=\\\"nav nav-footer justify-content-center justify-content-xl-end\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a href=\\\"https://www.creative-tim.com?ref=ada-footer-auth-layout\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">Creative Tim</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a href=\\\"https://www.creative-tim.com/presentation?ref=ada-footer-auth-layout\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">About Us</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a href=\\\"http://blog.creative-tim.com?ref=ada-footer-auth-layout\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">Blog</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a href=\\\"https://github.com/creativetimofficial/argon-dashboard-angular/blob/master/LICENSE.md\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">MIT License</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\\n\"","export default \"<div class=\\\"card card-stats mb-4 mb-lg-0\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"\\\">\\n            <div *ngIf=\\\"budgetSettings\\\" class=\\\"card-profile-stats d-flex justify-content-center\\\">\\n                <div>\\n                    <span class=\\\"heading text-success\\\">\\n                        <i class=\\\"fas fa-arrow-circle-up\\\"></i>\\n                        {{ budgetSettings.totalIncome | currency }}\\n                    </span>\\n                    <span class=\\\"description\\\">Total Ingresos</span>\\n                </div>\\n                <div>\\n                    <span class=\\\"heading text-danger\\\">\\n                        <i class=\\\"fas fa-arrow-circle-down\\\"></i>\\n                        {{ budgetSettings.totalExpense | currency }}\\n                    </span>\\n                    <span class=\\\"description\\\">Total Gastos</span>\\n                </div>\\n                <div>\\n                    <span class=\\\"heading text-info\\\">\\n                        <i class=\\\"fas fa-piggy-bank\\\"></i>\\n                        {{ budgetSettings.savingsGoal | currency }}\\n                    </span>\\n                    <span class=\\\"description\\\">Ahorro Mensual</span>\\n                </div>\\n            </div>\\n\\n\\n            <!-- Tabs para ingresos y gastos -->\\n            <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link active\\\" (click)=\\\"setActiveTab('income')\\\"\\n                        [class.active]=\\\"activeTab === 'income'\\\">Ingresos <span\\n                            class=\\\"badge badge-success\\\">{{getCategoriesByType(\\\"income\\\").length}}</span></a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" (click)=\\\"setActiveTab('expense')\\\"\\n                        [class.active]=\\\"activeTab === 'expense'\\\">Gastos <span\\n                            class=\\\"badge badge-danger\\\">{{getCategoriesByType(\\\"expense\\\").length}}</span></a>\\n                </li>\\n            </ul>\\n\\n            <!-- Contenedor responsivo de la tabla -->\\n            <div class=\\\"table-responsive table-container\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                        <tr>\\n                            <th scope=\\\"col\\\">Categoría</th>\\n                            <th scope=\\\"col\\\">Actual</th>\\n                            <th scope=\\\"col\\\">Porcentaje Utilizado</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let category of getCategoriesByType(activeTab); let i = index\\\">\\n                            <th scope=\\\"row\\\">\\n                                {{ category.name }}\\n                                <br />\\n                                <small>{{ category.budget | currency }}</small>\\n                            </th>\\n                            <td>{{ category.currentAmmount | currency }}</td>\\n                            <td>\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                                    <span class=\\\"mr-2\\\">{{ calculatePercentage(category.currentAmmount, category.budget)\\n                                        }}%</span>\\n                                    <div class=\\\"progress\\\">\\n                                        <div class=\\\"progress-bar bg-gradient-danger\\\" role=\\\"progressbar\\\"\\n                                            [style.width.%]=\\\"calculatePercentage(category.currentAmmount, category.budget)\\\"\\n                                            aria-valuenow=\\\"{{ calculatePercentage(category.currentAmmount, category.budget) }}\\\"\\n                                            aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card card-stats mb-4 mb-lg-0\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"mb-2\\\">\\n            <!-- Input de búsqueda -->\\n            <input type=\\\"text\\\" placeholder=\\\"Buscar transacción...\\\" class=\\\"form-control form-control-alternative mb-2\\\"\\n                (input)=\\\"onSearch($event)\\\" />\\n\\n            <!-- Mostrar conteo de registros -->\\n            <small class=\\\"text-muted\\\">Total registros:\\n                <span *ngIf=\\\"filteredTransactions.length == transactions.length\\\">\\n                    {{ visibleTransactions.length }}/{{ transactions.length }}\\n                </span>\\n                <span *ngIf=\\\"filteredTransactions.length != transactions.length\\\">\\n                    {{ transactions.length }} | {{ visibleTransactions.length }}/{{ filteredTransactions.length }}\\n                    coincidencias\\n                </span>\\n            </small>\\n        </div>\\n\\n        <!-- Mostrar métricas al estar filtrando -->\\n        <div *ngIf=\\\"isFiltering\\\" class=\\\"card-profile-stats d-flex justify-content-center mb-3\\\">\\n            <div>\\n                <span class=\\\"heading text-success\\\">\\n                    <i class=\\\"fas fa-arrow-circle-up\\\"></i>\\n                    {{ totalIncome | currency }}\\n                </span>\\n                <span class=\\\"description\\\">Total Ingresos</span>\\n            </div>\\n            <div>\\n                <span class=\\\"heading text-danger\\\">\\n                    <i class=\\\"fas fa-arrow-circle-down\\\"></i>\\n                    {{ totalExpense | currency }}\\n                </span>\\n                <span class=\\\"description\\\">Total Gastos</span>\\n            </div>\\n            <div *ngIf=\\\"savingsGoal>0\\\">\\n                <span class=\\\"heading text-info\\\">\\n                    <i class=\\\"fas fa-piggy-bank\\\"></i>\\n                    {{ savingsGoal | currency }}\\n                </span>\\n                <span class=\\\"description\\\">Ahorro</span>\\n            </div>\\n        </div>\\n\\n        <!-- Contenedor con scroll que incluye las transacciones -->\\n        <div class=\\\"scroll-container\\\" style=\\\"max-height: 680px; overflow-y: auto;\\\" (scroll)=\\\"onScroll($event)\\\">\\n\\n            <div class=\\\"pb-1\\\" *ngFor=\\\"let transaction of visibleTransactions\\\">\\n                <app-account-control-transaction-card [transaction]=\\\"transaction\\\"\\n                    (onRegisterAccount)=\\\"openCreateAccount(transaction)\\\"\\n                    (onRegisterCategory)=\\\"openManagementCategories(transaction)\\\"\\n                    (onEditTransaction)=\\\"openEditTransaction(transaction)\\\">\\n                </app-account-control-transaction-card>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card card-stats mb-4 mb-lg-0\\\">\\n    <div class=\\\"card-body\\\">\\n        <h6 class=\\\"heading-small text-muted mb-4\\\">Datos de la cuenta</h6>\\n        <form [formGroup]=\\\"configuracionForm\\\" (ngSubmit)=\\\"onSubmitInitial()\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n\\n                        <ng-container *ngIf=\\\"!disableAccountId; else elseNoDisableAccountIdInput\\\">\\n                            <label placement=\\\"right\\\"\\n                                ngbTooltip=\\\"Recuerda que en base a este identificador, el sistema registrara automaticamente las transacciones desde tu correo electrónico\\\"\\n                                class=\\\"form-control-label\\\" for=\\\"accountId\\\">\\n                                Identificador de la Cuenta\\n                            </label>\\n                            <input class=\\\"form-control form-control-alternative\\\" id=\\\"accountId\\\"\\n                                formControlName=\\\"accountId\\\" placeholder=\\\"0\\\" type=\\\"text\\\">\\n                            <p class=\\\"text-warning\\\">\\n                                <span\\n                                    *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.accountId.errors?.required\\\">Campo\\n                                    Requerido</span>\\n                            </p>\\n                        </ng-container>\\n                        <ng-template #elseNoDisableAccountIdInput>\\n                            <strong>\\n                                Cuenta Nro: {{ accountToEdit.id }}\\n                            </strong>\\n                        </ng-template>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\" col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"accountName\\\">\\n                            Nombre\\n                        </label>\\n                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"accountName\\\"\\n                            formControlName=\\\"accountName\\\" placeholder=\\\"\\\" type=\\\"text\\\">\\n                        <p class=\\\"text-warning\\\">\\n                            <span\\n                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.accountName.errors?.required\\\">Campo\\n                                Requerido</span>\\n                        </p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n\\n                        <label class=\\\"form-control-label\\\" for=\\\"accountDescription\\\">\\n                            Descripción\\n                        </label>\\n                        <textarea class=\\\"form-control form-control-alternative\\\" formControlName=\\\"accountDescription\\\"\\n                            placeholder=\\\"\\\"></textarea>\\n                        <p class=\\\"text-warning\\\">\\n                            <span\\n                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.accountDescription.errors?.required\\\">Campo\\n                                Requerido</span>\\n                        </p>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"accountBalance\\\">\\n                            Saldo actual\\n                        </label>\\n                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"accountBalance\\\"\\n                            formControlName=\\\"accountBalance\\\" placeholder=\\\"\\\" type=\\\"number\\\">\\n                        <p class=\\\"text-warning\\\">\\n                            <span\\n                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.accountBalance.errors?.required\\\">Campo\\n                                Requerido</span>\\n                        </p>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"custom-control custom-control-alternative custom-checkbox pb-3 pt-0\\\">\\n                            <input class=\\\"custom-control-input\\\" formControlName=\\\"accountIsPrincipal\\\"\\n                                id=\\\"accountIsPrincipal\\\" type=\\\"checkbox\\\"><label class=\\\"custom-control-label\\\"\\n                                for=\\\"accountIsPrincipal\\\"><span class=\\\"text-muted\\\">Principal</span></label>\\n                        </div>\\n                        <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Saldra en el panel general</h6>\\n                    </div>\\n                </div>\\n            </div>\\n            <button [disabled]=\\\"!configuracionForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Guardar</button>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card card-stats mb-4 mb-lg-0\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"\\\">\\n            <h2>Gestión de Categorías y Presupuesto Mensual</h2>\\n\\n            <div *ngIf=\\\"budgetSettings\\\" class=\\\"card-profile-stats d-flex justify-content-center\\\">\\n                <div>\\n                    <span class=\\\"heading text-success\\\">\\n                        <i class=\\\"fas fa-arrow-circle-up\\\"></i>\\n                        {{ budgetSettings.totalIncome | currency }}\\n                    </span>\\n                    <span class=\\\"description\\\">Total Ingresos</span>\\n                </div>\\n                <div>\\n                    <span class=\\\"heading text-danger\\\">\\n                        <i class=\\\"fas fa-arrow-circle-down\\\"></i>\\n                        {{ budgetSettings.totalExpense | currency }}\\n                    </span>\\n                    <span class=\\\"description\\\">Total Gastos</span>\\n                </div>\\n                <div>\\n                    <span class=\\\"heading text-info\\\">\\n                        <i class=\\\"fas fa-piggy-bank\\\"></i>\\n                        {{ budgetSettings.savingsGoal | currency }}\\n                    </span>\\n                    <span class=\\\"description\\\">Ahorro Mensual</span>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"transaction\\\">\\n                <app-account-control-transaction-card [showOriginalBody]=\\\"true\\\" [showButtons]=\\\"false\\\"\\n                    [transaction]=\\\"transaction\\\">\\n                </app-account-control-transaction-card>\\n                <br />\\n            </div>\\n\\n\\n            <!-- Tabs para ingresos y gastos -->\\n            <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link active\\\" (click)=\\\"setActiveTab('income')\\\"\\n                        [class.active]=\\\"activeTab === 'income'\\\">Ingresos <span\\n                            class=\\\"badge badge-success\\\">{{getCategoriesByType(\\\"income\\\").length}}</span></a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" (click)=\\\"setActiveTab('expense')\\\"\\n                        [class.active]=\\\"activeTab === 'expense'\\\">Gastos <span\\n                            class=\\\"badge badge-danger\\\">{{getCategoriesByType(\\\"expense\\\").length}}</span></a>\\n                </li>\\n            </ul>\\n\\n            <!-- Botón Nuevo para agregar categoría -->\\n            <button (click)=\\\"addNewCategory()\\\" [disabled]=\\\"!isFormValidForCurrentTab(activeTab)\\\"\\n                class=\\\"btn btn-outline-primary my-3\\\">Nuevo</button>\\n\\n            <!-- Contenedor responsivo de la tabla -->\\n            <div class=\\\"table-responsive table-container\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                        <tr>\\n                            <th scope=\\\"col\\\">ID</th>\\n                            <th scope=\\\"col\\\" class=\\\"table-col-nombre\\\">Orden</th>\\n                            <th scope=\\\"col\\\" class=\\\"table-col-nombre\\\">Categoria</th>\\n                            <th scope=\\\"col\\\">Palabras Clave</th>\\n                            <th scope=\\\"col\\\">Presupuesto</th>\\n                            <th scope=\\\"col\\\">Cuenta de Destino</th>\\n                            <th scope=\\\"col\\\">Acciones</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let category of categoriesOfCurrentTab; let i = index\\\">\\n                            <td>{{ category.id }}</td>\\n                            <!-- <td>\\n                                <input [(ngModel)]=\\\"category.order\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"Orden de prioridad\\\" [ngClass]=\\\"{'is-invalid': !category.order}\\\" />\\n                                <div *ngIf=\\\"!category.order\\\" class=\\\"text-danger small\\\">Requerido</div>\\n                                <small>Order de prioridad: {{category.order}}</small>\\n                            </td> -->\\n                            <td>\\n                                <button (click)=\\\"moveCategoryUp(i)\\\" [disabled]=\\\"i === 0\\\" class=\\\"btn btn-sm\\\">\\n                                    ▲\\n                                </button>\\n                                <button (click)=\\\"moveCategoryDown(i)\\\"\\n                                    [disabled]=\\\"i === getCategoriesByType(activeTab).length - 1\\\" class=\\\"btn btn-sm\\\">\\n                                    ▼\\n                                </button>\\n                                <br />\\n                                <small>Order de prioridad: {{category.order}}</small>\\n                            </td>\\n                            <td>\\n                                <input [(ngModel)]=\\\"category.name\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"Nombre de la categoría\\\" [ngClass]=\\\"{'is-invalid': !category.name}\\\" />\\n                                <div *ngIf=\\\"!category.name\\\" class=\\\"text-danger small\\\">Requerido</div>\\n                                <small>Nombre: {{category.name}}</small>\\n                            </td>\\n                            <td>\\n                                <div class=\\\"keywords-container\\\">\\n                                    <button *ngFor=\\\"let keyword of category.keyWords\\\" type=\\\"button\\\"\\n                                        class=\\\"btn text-white btn-sm bg-gradient-dark\\\">\\n                                        <span>{{ keyword }} </span>\\n                                        <span (click)=\\\"removeKeyword(category, keyword)\\\"\\n                                            class=\\\"badge badge-md  bg-gradient-danger border-white\\\">x</span>\\n                                    </button>\\n                                </div>\\n                                <input [(ngModel)]=\\\"category.newKeyword\\\" placeholder=\\\"Nueva palabra clave\\\"\\n                                    class=\\\"form-control mt-1\\\" [ngClass]=\\\"{'is-invalid': category.keyWords.length === 0}\\\"\\n                                    (keyup.enter)=\\\"addKeyword(category)\\\" />\\n                                <div *ngIf=\\\"category.keyWords.length === 0\\\" class=\\\"text-danger small\\\">Agregar al menos\\n                                    una palabra clave</div>\\n                                <button (click)=\\\"addKeyword(category)\\\"\\n                                    class=\\\"btn btn-primary btn-sm mt-1\\\">Agregar</button>\\n                            </td>\\n                            <td>\\n                                <input (change)=\\\"updateBudgetSummary()\\\" [(ngModel)]=\\\"category.budget\\\" type=\\\"number\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"Presupuesto\\\" />\\n                                <small>Presupuesto: {{category.budget|currency}}</small>\\n                            </td>\\n                            <td>\\n                                <select id=\\\"accountId{{i}}\\\" [(ngModel)]=\\\"category.accountId\\\" class=\\\"form-control\\\">\\n                                    <option *ngFor=\\\"let accountId of accountsId()\\\" [value]=\\\"accountId\\\">\\n                                        {{accountId}}\\n                                    </option>\\n                                </select>\\n                                <small>Cuenta de destino: {{category.accountId}}</small>\\n                            </td>\\n                            <td>\\n                                <button class=\\\"btn btn-icon btn-3 btn-sm btn-danger\\\" type=\\\"button\\\"\\n                                    (click)=\\\"removeCategory(category)\\\">\\n                                    <span class=\\\"btn-inner--icon\\\">\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\n                                    </span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <!-- Botón para guardar todos los cambios, habilitado solo si todas las categorías están completas -->\\n            <button (click)=\\\"saveAllCategories()\\\" [disabled]=\\\"!isFormValid()\\\" class=\\\"btn btn-primary mt-3\\\">Guardar\\n                Cambios</button>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card card-stats mb-4 mb-lg-0\\\">\\n    <div class=\\\"card-body\\\">\\n        <h6 class=\\\"heading-small text-muted mb-4\\\">Datos de la Transacción</h6>\\n        <form [formGroup]=\\\"transactionForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <!-- Categoría y Tipo -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"type\\\">Tipo de Transacción</label>\\n                        <select class=\\\"form-control\\\" id=\\\"type\\\" formControlName=\\\"type\\\">\\n                            <option [value]=\\\"incomeType\\\">Ingreso</option>\\n                            <option [value]=\\\"expenseType\\\">Gasto</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"categoryId\\\">Categoria</label>\\n                        <select class=\\\"form-control\\\" id=\\\"categoryId\\\" formControlName=\\\"categoryId\\\">\\n                            <option value=\\\"\\\">Seleccione una opcion</option>\\n                            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n                                {{ category.name }}\\n                            </option>\\n                        </select>\\n                        <p class=\\\"text-warning\\\"\\n                            *ngIf=\\\"isSubmitted && transactionForm.controls.categoryId.errors?.required\\\">Campo Requerido\\n                        </p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <!-- Selección de Cuenta -->\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"originalAccount\\\">Cuenta Origen</label>\\n                        <select class=\\\"form-control\\\" id=\\\"originalAccount\\\" formControlName=\\\"originalAccount\\\">\\n                            <option *ngFor=\\\"let account of settingsData.accounts\\\" [value]=\\\"account.id\\\">\\n                                {{ account.name }}\\n                            </option>\\n                        </select>\\n                        <p class=\\\"text-warning\\\"\\n                            *ngIf=\\\"isSubmitted && transactionForm.controls.originalAccount.errors?.required\\\">Campo\\n                            Requerido\\n                        </p>\\n                    </div>\\n                </div>\\n\\n                <!-- Selección de Cuenta -->\\n                <div class=\\\"col-lg-6\\\" *ngIf=\\\"transactionForm.value.type=='expense' && !transaction\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"targetAccountId\\\">Cuenta Destino (opcional)</label>\\n                        <select class=\\\"form-control\\\" id=\\\"targetAccountId\\\" formControlName=\\\"targetAccountId\\\">\\n                            <option *ngFor=\\\"let account of settingsData.accounts\\\" [value]=\\\"account.id\\\">\\n                                {{ account.name }}\\n                            </option>\\n                        </select>\\n                        <p class=\\\"text-warning\\\"\\n                            *ngIf=\\\"isSubmitted && transactionForm.controls.targetAccountId.errors?.required\\\">Campo\\n                            Requerido\\n                        </p>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n\\n            <!-- Fecha y Monto -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"date\\\">Fecha</label>\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" formControlName=\\\"date\\\">\\n                        <p class=\\\"text-warning\\\" *ngIf=\\\"isSubmitted && transactionForm.controls.date.errors?.required\\\">\\n                            Campo Requerido</p>\\n                    </div>\\n                </div>\\n\\n                <!-- Monto de la Transacción -->\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"amount\\\">Monto</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"amount\\\" formControlName=\\\"amount\\\"\\n                            placeholder=\\\"Monto\\\">\\n                        <p class=\\\"text-warning\\\" *ngIf=\\\"isSubmitted && transactionForm.controls.amount.errors?.required\\\">\\n                            Campo Requerido</p>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n\\n            <!-- Descripción -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                    <div class=\\\"form-group\\\">\\n\\n                        <label class=\\\"form-control-label\\\" for=\\\"description\\\">\\n                            Descripción\\n                        </label>\\n                        <textarea class=\\\"form-control form-control-alternative\\\" formControlName=\\\"description\\\"\\n                            placeholder=\\\"\\\"></textarea>\\n                        <p class=\\\"text-warning\\\">\\n                            <span *ngIf=\\\"isSubmitted && transactionForm.controls.description.errors?.required\\\">Campo\\n                                Requerido</span>\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!transactionForm.valid\\\">Guardar\\n                Transacción</button>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card card-stats mb-4 mb-lg-0 \\\" [ngClass]=\\\"{ 'bg-gradient-default': !transaction.categoryId }\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngIf=\\\"transaction.canProcessed\\\" class=\\\"col\\\">\\n                <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">\\n                    {{transaction.description}}</h5>\\n                <span *ngIf=\\\"transaction.type=='income'; else elseUnrecognizedTransactions\\\">\\n                    <span class=\\\"text-success mr-2\\\"><i class=\\\"fa fa-arrow-up\\\"></i></span>\\n                </span>\\n                <ng-template #elseUnrecognizedTransactions>\\n                    <span class=\\\"text-danger mr-2\\\"><i class=\\\"fa fa-arrow-down\\\"></i></span>\\n                </ng-template>\\n\\n                <span class=\\\"h2 font-weight-bold mb-0\\\"\\n                    [ngClass]=\\\"{ 'text-white': !transaction.categoryId }\\\">{{transaction.amount|currency}}</span>\\n            </div>\\n            <div class=\\\"col-auto\\\">\\n                <button placement=\\\"left\\\" ngbTooltip=\\\"Configurar nueva cuenta\\\"\\n                    *ngIf=\\\"showButtons && !transaction.isProcessed && transaction.canProcessed\\\"\\n                    (click)=\\\"openCreateAccount(transaction)\\\" type=\\\"button\\\"\\n                    class=\\\"btn text-white btn-sm bg-gradient-dark\\\">\\n                    <span>Registrar </span>\\n                    <span\\n                        class=\\\"badge badge-md  bg-gradient-warning border-white\\\">{{transaction.originalAccount}}</span>\\n                </button>\\n\\n                <button placement=\\\"left\\\" ngbTooltip=\\\"Configurar palabras clave para detectar la categoria\\\"\\n                    *ngIf=\\\"showButtons && !transaction.categoryId\\\" (click)=\\\"openManagementCategories(transaction)\\\"\\n                    type=\\\"button\\\" class=\\\"btn text-white btn-sm bg-gradient-warning\\\">\\n                    <span>Categoria </span>\\n                </button>\\n\\n                <button *ngIf=\\\"showButtons && transaction.canProcessed\\\" (click)=\\\"openEditTransaction(transaction)\\\"\\n                    type=\\\"button\\\" class=\\\"btn text-white btn-sm bg-gradient-primary\\\">\\n                    <span>Editar </span>\\n                </button>\\n\\n                <div *ngIf=\\\"transaction.transactionId\\\" [ngClass]=\\\"transaction.type=='income'?'bg-success':'bg-danger'\\\"\\n                    class=\\\"icon icon-shape text-white rounded-circle shadow\\\">\\n                    <i class=\\\"ni ni-spaceship\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <p *ngIf=\\\"transaction.canProcessed\\\" class=\\\"mb-0 text-muted text-sm\\\">\\n            <span class=\\\"mt-1\\\">\\n                <i class=\\\"ni ni-credit-card\\\"></i>\\n            </span>\\n            {{transaction.accountId ? transaction.accountId : transaction.originalAccount}} |\\n            <span class=\\\"text-nowrap\\\">\\n                {{ transaction.date | date: 'dd/MM/yyyy HH:mm': '-0500'}}\\n            </span>\\n        </p>\\n\\n        <p *ngIf=\\\"showOriginalBody || !transaction.canProcessed\\\" class=\\\"mb-0 text-muted text-sm\\\"\\n            [ngClass]=\\\"{ 'text-white': !transaction.categoryId }\\\">\\n            <strong>Cuerpo Original: </strong>\\n            <span class=\\\"card-title mb-0\\\">{{ transaction.originalBody}}</span>\\n        </p>\\n        <div *ngIf=\\\"!transaction.canProcessed\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            <span class=\\\"alert-inner--icon\\\"><i class=\\\"ni ni-like-2\\\"></i></span>\\n            <strong> Advertencia!</strong> Comunicate con el desarrollador para configurar este nuevo escenario no\\n            contemplado!\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"header pb-6 pt-5 pt-md-8 bg-gradient-dark\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <p class=\\\"float-right\\\" *ngIf=\\\"!configFromGoogle\\\">\\n                        <a href=\\\"javascript:void(0)\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Autenticación\\\" (click)=\\\"Login()\\\"\\n                            class=\\\"btn btn-neutral btn-icon\\\">\\n                            <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\n                            <span class=\\\"btn-inner--text\\\">Iniciar Con Google</span>\\n                        </a>\\n                    </p>\\n                    <p class=\\\"float-right\\\" *ngIf=\\\"configFromGoogle\\\">\\n                        <a href=\\\"javascript:void(0)\\\" placement=\\\"left\\\"\\n                            [ngbTooltip]=\\\"'Cerrar sesión: '+configFromGoogle.user?.email || 'Email no encontrado'\\\"\\n                            (click)=\\\"Logout()\\\" class=\\\"btn btn-neutral btn-icon\\\">\\n                            <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\n                            <span class=\\\"btn-inner--text\\\">Sync: {{configFromGoogle.user?.username}}</span>\\n                        </a>\\n                    </p>\\n                    <h1 class=\\\"display-2 text-white\\\">Account Control</h1>\\n                    <p class=\\\"text-white\\\">\\n                        <strong>\\n                            Aquí podras administrar todos tus ingresos y gastos de todas tus\\n                            cuentas, para mayor experiencia sincronizate con tu cuenta de google\\n                        </strong>\\n                    </p>\\n                    <span class=\\\"custom-control custom-control-alternative custom-checkbox pb-3 pt-0\\\">\\n                        <input class=\\\"custom-control-input\\\" id=\\\"showAccountIsPrincipal\\\" [(ngModel)]=\\\"showAllAccounts\\\"\\n                            (change)=\\\"filterAccounts()\\\" type=\\\"checkbox\\\"><label class=\\\"custom-control-label\\\"\\n                            for=\\\"showAccountIsPrincipal\\\"><span class=\\\"text-muted\\\">Mostrar\\n                                todo?</span></label>\\n                    </span>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"row\\\" *ngIf=\\\"settionsData\\\">\\n                <div class=\\\"col-xl-3 col-lg-6 mb-3\\\" *ngFor=\\\"let account of accounts\\\">\\n                    <div class=\\\"card card-stats mb-1 mb-xl-0\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n\\n                                    <small class=\\\"card-title text-muted\\\">Cuenta Nro: {{account.id}}</small>\\n                                    <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">{{ account.name }}</h5>\\n                                    <span class=\\\"h2 font-weight-bold mb-0\\\">{{ account.balance | currency }}</span>\\n                                </div>\\n                                <div class=\\\"col-auto\\\">\\n                                    <button (click)=\\\"openEditAccount(account)\\\" type=\\\"button\\\"\\n                                        class=\\\"btn text-white btn-sm bg-gradient-dark\\\">\\n                                        <span>Editar</span>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                            <p class=\\\"mt-1 mb-0 text-muted text-sm\\\">\\n                                <!-- Condición para aumento, sin cambio y disminución -->\\n                                <ng-container *ngIf=\\\"getPercentageChange(account) > 0; else noChange\\\">\\n                                    <span class=\\\"text-success mr-2\\\">\\n                                        <i class=\\\"fa fa-arrow-up\\\"></i> {{ getPercentageChange(account) | number:\\n                                        '1.2-2' }}%\\n                                    </span>\\n                                </ng-container>\\n                                <ng-template #noChange>\\n                                    <ng-container *ngIf=\\\"getPercentageChange(account) < 0; else sameBalance\\\">\\n                                        <span class=\\\"text-danger mr-2\\\">\\n                                            <i class=\\\"fa fa-arrow-down\\\"></i> {{ getPercentageChange(account) |\\n                                            number: '1.2-2' }}%\\n                                        </span>\\n                                    </ng-container>\\n                                    <ng-template #sameBalance>\\n                                        <span class=\\\"text-info mr-2\\\">\\n                                            <i class=\\\"fa fa-minus\\\"></i> 0%\\n                                        </span>\\n                                    </ng-template>\\n                                </ng-template>\\n                                <span class=\\\"text-nowrap\\\">Último mes: {{ account.lastBalance | currency }}</span>\\n                            </p>\\n                            <p class=\\\"mt-1 mb-0 text-muted text-sm\\\">\\n                                {{account.description}}\\n                            </p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col col-lg-12\\\">\\n                    <div class=\\\"d-flex text-white justify-content-between\\\">\\n                        <p class=\\\"mr-4\\\">\\n                            <ng-container *ngIf=\\\"heritage > 0; else noChange\\\">\\n                                <span class=\\\"text-success mr-2\\\">\\n                                    <i class=\\\"fa fa-arrow-up\\\"></i>\\n                                    <strong>\\n                                        Patrimonio {{ heritage |currency}}\\n                                    </strong>\\n                                </span>\\n                            </ng-container>\\n                            <ng-template #noChange>\\n                                <ng-container *ngIf=\\\"heritage < 0; else sameBalance\\\">\\n                                    <span class=\\\"text-danger mr-2\\\">\\n                                        <i class=\\\"fa fa-arrow-down\\\"></i>\\n                                        <strong>\\n                                            Patrimonio {{ heritage |currency}}\\n                                        </strong>\\n                                    </span>\\n                                </ng-container>\\n                                <ng-template #sameBalance>\\n                                    <span class=\\\"text-info mr-2\\\">\\n                                        <i class=\\\"fa fa-minus\\\"></i>\\n                                        <strong>\\n                                            Patrimonio {{ heritage |currency}}\\n                                        </strong>\\n                                    </span>\\n                                </ng-template>\\n                            </ng-template>\\n                        </p>\\n                        <div class=\\\"float-right\\\">\\n                            <button placement=\\\"top\\\" ngbTooltip=\\\"Crear cuenta\\\" (click)=\\\"openCreateAccount()\\\"\\n                                class=\\\"btn btn-icon btn-3 btn-sm btn-success\\\" type=\\\"button\\\">\\n                                <span class=\\\"btn-inner--icon\\\">\\n                                    <i class=\\\"ni ni-fat-add\\\"></i>\\n                                </span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\">\\n    <div class=\\\"row mt-4\\\">\\n        <div class=\\\"col-lg-7 mb-lg-0 mb-4\\\">\\n            <div class=\\\"card shadow\\\">\\n                <div class=\\\"card-header bg-white border-0\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <div class=\\\"col-8\\\">\\n                            <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">\\n                                <span>\\n                                    Mi Presupuesto\\n                                </span>\\n                            </h6>\\n                        </div>\\n                        <div class=\\\"col-4 text-right\\\">\\n                            <button class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!settionsData\\\"\\n                                (click)=\\\"openManagementCategories()\\\">Categorias</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body p-3 \\\">\\n                    <div class=\\\"scroll-container\\\" style=\\\"min-height: 800px; max-height: 800px; overflow-y: auto;\\\">\\n                        <app-account-control-list-budgets [settionsData]=\\\"settionsData\\\">\\n\\n                        </app-account-control-list-budgets>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-5\\\">\\n            <div class=\\\"card bg-secondary shadow\\\">\\n                <div class=\\\"card-header bg-white border-0\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <div class=\\\"col-6\\\">\\n                            <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">\\n                                <span>\\n                                    Mis Cuentas\\n                                </span>\\n                            </h6>\\n                        </div>\\n                        <div class=\\\"col-6 text-right\\\">\\n                            <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"openCreateTransaction()\\\">Nueva\\n                                transaccion</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body p-3 \\\">\\n                    <div class=\\\"scroll-container\\\" style=\\\"min-height: 800px;  overflow-y: auto;\\\">\\n                        <app-account-control-list-transactions (onFinish)=\\\"initialiceComponent()\\\"\\n                            [settionsData]=\\\"settionsData\\\"\\n                            [transactions]=\\\"transactions\\\"></app-account-control-list-transactions>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n    <button placement=\\\"top\\\" ngbTooltip=\\\"Elimina toda la información del sistema, estas seguro?\\\" *ngIf=\\\"settionsData\\\"\\n        (click)=\\\"deleteData()\\\" class=\\\"btn btn-icon btn-3 btn-sm btn-secondary text-warning float-right\\\" type=\\\"button\\\">\\n        <span class=\\\"btn-inner--icon\\\">\\n            <i class=\\\"fas fa-trash\\\"></i> Eliminar datos\\n        </span>\\n    </button>\\n    <small *ngIf=\\\"settionsData && settionsData.lastSync\\\"><strong>Ultima actualización:\\n        </strong>{{settionsData.lastSync.toISOString()}}</small>\\n</div>\"","export default \"<div class=\\\"header bg-gradient-primary pb-8 pt-5 pt-md-8\\\" *ngIf=\\\"Summary\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-7 col-md-10\\\">\\n                    <h1 class=\\\"display-2 text-white\\\">{{Summary.ShortName}}</h1>\\n                    <p class=\\\"text-white\\\"><strong>PORTAFOLIO PERSONAL</strong></p>\\n                    <p class=\\\"text-white\\\">{{Summary.About.Title}}</p>\\n                    <p>\\n                        <span class=\\\"ml-1\\\" *ngFor=\\\"let socialNetwork of Summary.SocialNetworks\\\">\\n                            <a target=\\\"_blank\\\" href=\\\"{{socialNetwork.ProfileUrl}}\\\" title=\\\"{{socialNetwork.Name}}\\\"><img\\n                                    class=\\\"rounded-circle\\\" height=\\\"25px\\\" src=\\\"{{socialNetwork.Icon}}\\\"> </a>\\n                        </span>\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\" *ngIf=\\\"Summary\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12 mb-4\\\" *ngFor=\\\"let briefcase of Summary.Briefcases\\\">\\n            <div class=\\\"card shadow\\\">\\n                <div class=\\\"card-header bg-transparent\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <div class=\\\"col\\\">\\n                            <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">{{briefcase.Name}}</h6>\\n                            <h2 class=\\\"mb-0\\\"><a target=\\\"_blank\\\" href=\\\"{{briefcase.Url}}\\\">{{briefcase.Tittle}}</a></h2>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"card-text Justify\\\">{{briefcase.Description}}</p>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-4 col-md-6 col-xs-12\\\" *ngFor=\\\"let image of briefcase.Images\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"card\\\">\\n                                <img class=\\\"card-img-top\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"openGallery(image.Index-1)\\\"\\n                                    src=\\\"config/{{image.Path}}\\\" alt=\\\"Card image cap\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <!-- <h5 class=\\\"card-title\\\">{{image.}}</h5> -->\\n                                    <p class=\\\"card-text Justify\\\">{{image.Description}}</p>\\n                                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a> -->\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ngx-image-gallery [images]=\\\"images\\\" [conf]=\\\"conf\\\" (onDelete)=\\\"deleteImage($event)\\\"></ngx-image-gallery>\"","export default \"<div class=\\\"header  pb-7 pt-5 pt-md-8\\\"\\n    [ngClass]=\\\"selectedBien && selectedBien.tipo=='Arrendamiento'?'bg-gradient-info':'bg-gradient-indigo'\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <p class=\\\"float-right\\\" *ngIf=\\\"!userLogger\\\">\\n                        <a href=\\\"javascript:void(0)\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Autenticación\\\" (click)=\\\"Login()\\\"\\n                            class=\\\"btn btn-neutral btn-icon\\\">\\n                            <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\n                            <span class=\\\"btn-inner--text\\\">Iniciar Con Google</span>\\n                        </a>\\n                    </p>\\n                    <p class=\\\"float-right\\\" *ngIf=\\\"userLogger\\\">\\n                        <a href=\\\"javascript:void(0)\\\" placement=\\\"left\\\"\\n                            [ngbTooltip]=\\\"'Cerrar sesión: '+userLogger?.email || 'Email no encontrado'\\\"\\n                            (click)=\\\"Logout()\\\" class=\\\"btn btn-neutral btn-icon\\\">\\n                            <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\n                            <span class=\\\"btn-inner--text\\\">Sync: {{userLogger?.username}}</span>\\n                        </a>\\n                    </p>\\n                    <h1 class=\\\"display-2 text-white\\\">Configuración: Business Control</h1>\\n                    <p class=\\\"text-white\\\"><strong>Administre aquí sus bienes, si desea generar comprobantes de pago o\\n                            visualizar reportes de sus bienes de clic <a href=\\\"#/business-control\\\"\\n                                class=\\\"text-white\\\"><strong>aquí</strong></a></strong></p>\\n                    <div class=\\\"p-0 col-lg-4\\\">\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"bienes.length>1\\\">\\n                            <label for=\\\"bien\\\" class=\\\"text-white\\\">Selecciona tu bien</label>\\n                            <select id=\\\"bien\\\" [(ngModel)]=\\\"selectedBienId\\\" (change)=\\\"onBienSelect($event.target.value)\\\"\\n                                class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let bien of bienes\\\" [value]=\\\"bien.id\\\">\\n                                    <span *ngIf=\\\"bien.tipo=='Arrendamiento'; else elseArrendamientoSelect\\\">\\n                                        Vivienda en arriendo:\\n                                    </span>\\n                                    <ng-template #elseArrendamientoSelect>\\n                                        <span>Crédito:</span>\\n                                    </ng-template>\\n                                    {{bien.direccion}}\\n                                </option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"d-flex text-white justify-content-between\\\">\\n                        <p class=\\\"mr-4 \\\" *ngIf=\\\"selectedBien\\\">\\n                            <i class=\\\" fa fa-arrow-up\\\"></i>\\n                            <span class=\\\"text-nowrap\\\"> Total ingresos </span><span class=\\\"mr-2\\\">\\n                                {{selectedBien.totalIngresos|\\n                                currency}}\\n                            </span>\\n                        </p>\\n                        <p class=\\\"float-right\\\">\\n\\n                            <i class=\\\" fa fa-lock\\\" *ngIf=\\\"config\\\"></i>\\n                            <span *ngIf=\\\"config\\\" placement=\\\"top\\\"\\n                                ngbTooltip=\\\"Utilice esta firma digital para verificar los comprobantes de pago\\\"\\n                                class=\\\"text-nowrap\\\"> Firma digital: </span>\\n                            <span *ngIf=\\\"config\\\" class=\\\"mr-2\\\">\\n                                {{config.contratante.firmaDigital}}\\n                            </span>\\n                            <button placement=\\\"top\\\" ngbTooltip=\\\"Exportar datos\\\" *ngIf=\\\"config\\\"\\n                                (click)=\\\"downloadConfig()\\\" class=\\\"btn btn-icon btn-3 btn-sm btn-dark\\\" type=\\\"button\\\">\\n                                <span class=\\\"btn-inner--icon\\\">\\n                                    <i class=\\\"ni ni-cloud-download-95\\\"></i>\\n                                </span>\\n                            </button>\\n                            <button placement=\\\"top\\\" ngbTooltip=\\\"Importar datos\\\" (click)=\\\"fileInput.click()\\\"\\n                                class=\\\"btn btn-icon btn-3 btn-sm btn-dark\\\" type=\\\"button\\\">\\n                                <span class=\\\"btn-inner--icon\\\">\\n                                    <i class=\\\"ni ni-cloud-upload-96\\\"></i>\\n                                </span>\\n                            </button>\\n                            <input type=\\\"file\\\" #fileInput (input)=\\\"onFileChange($event)\\\" style=\\\"display: none;\\\"\\n                                accept=\\\".json\\\">\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12 mb-4\\\">\\n            <div class=\\\"card shadow\\\">\\n                <div class=\\\"card-header bg-transparent\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <div class=\\\"col\\\" *ngIf=\\\"selectedBien\\\">\\n                            <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">\\n                                <span *ngIf=\\\"selectedBien.tipo=='Arrendamiento'; else elseArrendamiento\\\">\\n                                    Vivienda en arriendo\\n                                </span>\\n                                <ng-template #elseArrendamiento>\\n                                    <span>Crédito</span>\\n                                </ng-template>\\n                                |\\n                                {{selectedBien.ciudad}}\\n                            </h6>\\n                            <h2 class=\\\"mb-0 text-primary\\\">{{selectedBien.direccion}}, {{selectedBien.barrio}}\\n\\n                            </h2>\\n                        </div>\\n                        <div class=\\\"col\\\" *ngIf=\\\"!selectedBien\\\">\\n                            <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Verifique bien la información</h6>\\n                            <h2 class=\\\"mb-0 text-primary\\\">Configuración\\n                                Inicial Del Sistema\\n                            </h2>\\n                        </div>\\n                        <div *ngIf=\\\"isConfigured\\\" class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                            <input class=\\\"custom-control-input\\\" id=\\\"checkRegistrarNuevaBien\\\" type=\\\"checkbox\\\"\\n                                [(ngModel)]=\\\"registrarNuevaBien\\\"><label class=\\\"custom-control-label\\\"\\n                                for=\\\"checkRegistrarNuevaBien\\\"><span class=\\\"text-muted\\\">Registrar\\n                                    nuevo bien?</span></label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div *ngIf=\\\"!isConfigured\\\">\\n                        <h6 class=\\\"heading-small text-muted mb-4\\\">Datos del Contratante</h6>\\n                        <form [formGroup]=\\\"configuracionForm\\\" (ngSubmit)=\\\"onSubmitInitial()\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratanteCedula\\\">\\n                                            Cédula\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratanteCedula\\\"\\n                                            formControlName=\\\"contratanteCedula\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.contratanteCedula.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratanteNombre\\\">\\n                                            Nombre\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratanteNombre\\\"\\n                                            formControlName=\\\"contratanteNombre\\\" placeholder=\\\"jesse doe\\\" type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.contratanteNombre.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratanteTelefono\\\">\\n                                            Teléfono\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratanteTelefono\\\"\\n                                            formControlName=\\\"contratanteTelefono\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.contratanteTelefono.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratanteDireccion\\\">\\n                                            Dirección\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratanteDireccion\\\"\\n                                            formControlName=\\\"contratanteDireccion\\\" placeholder=\\\"Carrera 1 23 44\\\"\\n                                            type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.contratanteDireccion.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratanteEmail\\\">\\n                                            Correo Electrónico\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratanteEmail\\\"\\n                                            formControlName=\\\"contratanteEmail\\\" placeholder=\\\"jesse@example.com\\\"\\n                                            type=\\\"email\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"configuracionForm.controls.submitted.value && configuracionForm.controls.contratanteEmail.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <div\\n                                            class=\\\"custom-control custom-control-alternative custom-checkbox pb-3 pt-0\\\">\\n                                            <input class=\\\"custom-control-input\\\"\\n                                                formControlName=\\\"contratanteMostrarDatosPersonales\\\"\\n                                                id=\\\"contratanteMostrarDatosPersonales\\\" type=\\\"checkbox\\\"><label\\n                                                class=\\\"custom-control-label\\\"\\n                                                for=\\\"contratanteMostrarDatosPersonales\\\"><span class=\\\"text-muted\\\">Mostrar\\n                                                    datos personales?</span></label>\\n                                        </div>\\n                                        <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Visualizara datos personales en\\n                                            los comprobantes de pago</h6>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Guardar Configuración</button>\\n                        </form>\\n                    </div>\\n\\n                    <div *ngIf=\\\"isConfigured && registrarNuevaBien\\\">\\n                        <h6 class=\\\"heading-small text-muted mb-4\\\">Datos {{tipoBien=='Arrendamiento'?'de la vivienda':\\n                            'del crédito'}}</h6>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-lg-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"form-control-label\\\" for=\\\"tipoBien\\\">Tipo de bien</label>\\n                                    <select id=\\\"tipoBien\\\" [(ngModel)]=\\\"tipoBien\\\" class=\\\"form-control\\\">\\n                                        <option *ngFor=\\\"let tipo of ['Arrendamiento','Credito']\\\" [value]=\\\"tipo\\\">\\n                                            {{tipo}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <form [formGroup]=\\\"bienform\\\" (ngSubmit)=\\\"onSubmitBien()\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"direccion\\\">\\n                                            Dirección\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"direccion\\\"\\n                                            formControlName=\\\"direccion\\\" placeholder=\\\"Carrera 0 1 34\\\" type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"bienform.controls.submitted.value && bienform.controls.direccion.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"barrio\\\">\\n                                            Barrio\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"barrio\\\"\\n                                            formControlName=\\\"barrio\\\" placeholder=\\\"jesse doe\\\" type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"bienform.controls.submitted.value && bienform.controls.barrio.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"ciudad\\\">\\n                                            Ciudad\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"ciudad\\\"\\n                                            formControlName=\\\"ciudad\\\" placeholder=\\\"jesse doe\\\" type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"bienform.controls.submitted.value && bienform.controls.ciudad.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Guardar Configuración</button>\\n\\n                        </form>\\n                    </div>\\n                    <div *ngIf=\\\"isConfigured && selectedBien  && !registrarNuevaBien\\\"\\n                        class=\\\"custom-control custom-control-alternative custom-checkbox pb-3 pt-0\\\">\\n                        <input class=\\\"custom-control-input\\\" id=\\\"checkRegistrarContrato\\\" type=\\\"checkbox\\\"\\n                            [(ngModel)]=\\\"registrarNuevoContrato\\\"><label class=\\\"custom-control-label\\\"\\n                            for=\\\"checkRegistrarContrato\\\"><span class=\\\"text-muted\\\">Registrar\\n                                nuevo contrato?</span></label>\\n                    </div>\\n\\n                    <div *ngIf=\\\"isConfigured && selectedBien && !registrarNuevaBien && registrarNuevoContrato\\\">\\n                        <h6 class=\\\"heading-small text-muted mb-4\\\">Datos Del Contrato</h6>\\n                        <form [formGroup]=\\\"contratoForm\\\" (ngSubmit)=\\\"onSubmitContrato()\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoCedula\\\">\\n                                            Cédula\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoCedula\\\"\\n                                            formControlName=\\\"contratoCedula\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoCedula.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoNombre\\\">\\n                                            Nombre\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoNombre\\\"\\n                                            formControlName=\\\"contratoNombre\\\" placeholder=\\\"jesse doe\\\" type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoNombre.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoTelefono\\\">\\n                                            Teléfono\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoTelefono\\\"\\n                                            formControlName=\\\"contratoTelefono\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoTelefono.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-lg-4\\\" *ngIf=\\\"tipoBien=='Arrendamiento'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoMensualidad\\\">\\n                                            Valor {{tipoBien=='Arrendamiento'?'del arriendo':\\n                                            'del crédito'}}\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoMensualidad\\\"\\n                                            formControlName=\\\"contratoMensualidad\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoMensualidad.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\" *ngIf=\\\"tipoBien=='Arrendamiento'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoValorDeposito\\\">\\n                                            Valor del deposito\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoValorDeposito\\\"\\n                                            formControlName=\\\"contratoValorDeposito\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoValorDeposito.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\" *ngIf=\\\"tipoBien!='Arrendamiento'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label placement=\\\"bottom\\\"\\n                                            ngbTooltip=\\\"Especificar en porcentaje, no en decimales, ejemplo: 1.1 equivale a 1.1%\\\"\\n                                            class=\\\"form-control-label\\\" for=\\\"contratoTasaEM\\\">\\n                                            Tasa Efectivo Mensual\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoTasaEM\\\"\\n                                            formControlName=\\\"contratoTasaEM\\\" placeholder=\\\"6\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoTasaEM.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\" *ngIf=\\\"tipoBien!='Arrendamiento'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoValorCredito\\\">\\n                                            Valor del credito\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoValorCredito\\\"\\n                                            formControlName=\\\"contratoValorCredito\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoValorCredito.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\" *ngIf=\\\"tipoBien!='Arrendamiento'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoPlazoMeses\\\">\\n                                            Plazo en meses\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoPlazoMeses\\\"\\n                                            formControlName=\\\"contratoPlazoMeses\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoPlazoMeses.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\" *ngIf=\\\"tipoBien!='Arrendamiento'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label placement=\\\"bottom\\\"\\n                                            ngbTooltip=\\\"Suma total de conceptos o seguros fijos que se desean adicionar en el credito, el caso mas comun seria un seguro de vida que se cobra con un valor fijo por cada cuota: [=(ValorCredito/1000000)*1290] donde 1290 varia dependiendo el seguro\\\"\\n                                            class=\\\"form-control-label\\\" for=\\\"contratoTarifaFija\\\">\\n                                            Tarifa fija\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoTarifaFija\\\"\\n                                            formControlName=\\\"contratoTarifaFija\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoTarifaFija.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\" col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoFechaInicio\\\">\\n                                            Fecha de inicio\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"contratoFechaInicio\\\"\\n                                            formControlName=\\\"contratoFechaInicio\\\" placeholder=\\\"0\\\" type=\\\"date\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoFechaInicio.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\" col-lg-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"contratoObservacion\\\">\\n                                            Observaciones\\n                                        </label>\\n                                        <textarea rows=\\\"4\\\" class=\\\"form-control form-control-alternative\\\"\\n                                            id=\\\"contratoObservacion\\\" formControlName=\\\"contratoObservacion\\\"\\n                                            placeholder=\\\"datos de contacto de familiar u otra cosa de interes\\\"\\n                                            type=\\\"text\\\"></textarea>\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"contratoForm.controls.submitted.value && contratoForm.controls.contratoObservacion.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Guardar Configuración</button>\\n\\n                        </form>\\n                    </div>\\n\\n                    <div *ngIf=\\\"isConfigured && selectedBien && selectedBien.contratos.length>0 && !registrarNuevaBien\\\"\\n                        class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"card shadow\\\">\\n                                <div class=\\\"card-header border-0\\\">\\n                                    <h3 class=\\\"mb-0\\\">Contratos</h3>\\n                                </div>\\n                                <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table align-items-center table-flush\\\">\\n                                        <thead class=\\\"thead-light\\\">\\n                                            <tr>\\n                                                <th scope=\\\"col\\\">Cédula</th>\\n                                                <th scope=\\\"col\\\">Nombre</th>\\n                                                <th scope=\\\"col\\\">Teléfono</th>\\n                                                <th scope=\\\"col\\\">Mensualidad</th>\\n                                                <th scope=\\\"col\\\">Total Ingresos</th>\\n                                                <th scope=\\\"col\\\">Numero Meses</th>\\n                                                <th scope=\\\"col\\\">Observaciones</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let contrato of selectedBien.contratos\\\">\\n                                                <td scope=\\\"row\\\">\\n                                                    <div\\n                                                        class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                                                        <input class=\\\"custom-control-input\\\"\\n                                                            id=\\\"checkContratoActivo{{contrato.id}}\\\" type=\\\"checkbox\\\"\\n                                                            [(ngModel)]=\\\"contrato.activo\\\"\\n                                                            (click)=\\\"setContratoActivo(contrato)\\\">\\n                                                        <label class=\\\"custom-control-label\\\"\\n                                                            for=\\\"checkContratoActivo{{contrato.id}}\\\">\\n                                                            <span class=\\\"badge badge-dot\\\"><i\\n                                                                    [ngClass]=\\\"contrato.activo?'bg-success':'bg-info'\\\"></i>\\n                                                                {{contrato.identificacion}}</span>\\n                                                        </label>\\n                                                    </div>\\n\\n                                                </td>\\n                                                <td>{{contrato.nombre}}</td>\\n                                                <td>{{contrato.telefono}}</td>\\n                                                <td>\\n                                                    {{contrato.mensualidad | number}}\\n                                                </td>\\n                                                <td>\\n                                                    <div class=\\\"d-flex align-items-center\\\"\\n                                                        *ngIf=\\\"selectedBien.totalIngresos>0\\\">\\n                                                        <span class=\\\"mr-2\\\"> $ {{contrato.totalIngresos | number :\\n                                                            '1.2-2'}}</span>\\n                                                        <div class=\\\"progress ProgressByAnibal\\\">\\n                                                            <!-- \\\"bg-gradient-danger\\\", \\\"bg-gradient-success\\\", \\\"bg-gradient-primary\\\", \\\"bg-gradient-info\\\", \\\"bg-gradient-warning\\\" -->\\n                                                            <div class=\\\"progress-bar \\\"\\n                                                                [ngClass]=\\\"{'bg-gradient-danger': contrato.porcentajeIngresos< 10, 'bg-gradient-warning' :contrato.porcentajeIngresos> 10 && contrato.porcentajeIngresos< 30, 'bg-gradient-info' :contrato.porcentajeIngresos> 30 && contrato.porcentajeIngresos< 60, 'bg-gradient-success' :contrato.porcentajeIngresos> 60 }\\\"\\n                                                                role=\\\"progressbar\\\"\\n                                                                aria-valuenow=\\\"{{contrato.porcentajeIngresos}}\\\"\\n                                                                aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n                                                                style=\\\"width: {{contrato.porcentajeIngresos}}%;\\\">\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <span *ngIf=\\\"selectedBien.totalIngresos==0\\\">0</span>\\n                                                </td>\\n                                                <td>\\n                                                    {{contrato.comprobantesGenerados| number}}\\n                                                </td>\\n                                                <td>\\n                                                    {{contrato.observacion}}\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"isConfigured && selectedBien && selectedBien.contratoActivo && selectedBien.contratoActivo.tipo=='Credito' && !registrarNuevaBien\\\"\\n                        class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"card-profile-stats d-flex justify-content-center\\\">\\n                                <div>\\n                                    <span class=\\\"heading\\\">\\n                                        <i class=\\\"fas fa-dollar-sign\\\"></i>\\n                                        {{selectedBien.contratoActivo.valorCredito | number}}</span>\\n                                    <span class=\\\"description\\\">Valor del credito</span>\\n                                </div>\\n                                <div>\\n                                    <span class=\\\"heading\\\">\\n                                        <i class=\\\"fas fa-percent\\\"></i>\\n                                        {{selectedBien.contratoActivo.tasaEM | number}}</span>\\n                                    <span class=\\\"description\\\">Tasa efectivo mensual</span>\\n                                </div>\\n                                <div>\\n                                    <span class=\\\"heading\\\">\\n                                        <i class=\\\"fas fa-calendar-alt\\\"></i>\\n                                        {{selectedBien.contratoActivo.plazoMeses | number}}</span>\\n                                    <span class=\\\"description\\\">Plazo en meses</span>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"card-profile-stats d-flex justify-content-center\\\">\\n                                <div *ngIf=\\\"responseAmortizacion && responseAmortizacion.ahorroIntereses>0\\\">\\n                                    <span class=\\\"heading\\\">\\n                                        <i class=\\\"fas fa-dollar-sign\\\"></i>\\n                                        {{responseAmortizacion.ahorroIntereses | number}}</span>\\n                                    <span class=\\\"description\\\">Ahorro intereses</span>\\n                                </div>\\n                                <div *ngIf=\\\"responseAmortizacion && responseAmortizacion.plazoReducido>0\\\">\\n                                    <span class=\\\"heading\\\">\\n                                        <i class=\\\"fas fa-calendar-alt\\\"></i>\\n                                        {{responseAmortizacion.plazoReducido}} Meses</span>\\n                                    <span class=\\\"description\\\">Reduccion de plazo</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col\\\" *ngIf=\\\"responseAmortizacion\\\">\\n                            <div class=\\\"card shadow\\\">\\n\\n                                <div class=\\\"card-header border-0\\\">\\n                                    <h3 class=\\\"mb-0\\\">Tabla de amortizacion para el contrato Nro\\n                                        {{selectedBien.contratoActivo.id|\\n                                        slice:0:20}}</h3>\\n                                </div>\\n                                <div class=\\\"table-responsive\\\" id=\\\"amortizacion\\\">\\n                                    <table class=\\\"table align-items-center table-flush\\\">\\n                                        <thead class=\\\"thead-light\\\">\\n                                            <tr>\\n                                                <th scope=\\\"col\\\">Nro</th>\\n                                                <th scope=\\\"col\\\">Cuota</th>\\n                                                <th scope=\\\"col\\\">Intereses</th>\\n                                                <th scope=\\\"col\\\">Tarifa fija</th>\\n                                                <th scope=\\\"col\\\">Capital</th>\\n                                                <th scope=\\\"col\\\">Abono Adicional Capital</th>\\n                                                <th scope=\\\"col\\\">Total</th>\\n                                                <th scope=\\\"col\\\">Saldo</th>\\n                                                <th scope=\\\"col\\\"></th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let cuota of responseAmortizacion.amortizaciones\\\">\\n                                                <td scope=\\\"row\\\">\\n                                                    {{cuota.index| number}} - {{cuota.fechaCuota| date}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.cuota| number}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.interes| number}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.tarifaFija | number}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.abonoCapital | number}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.abonoAdicionalCapital | number}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.total | number}}\\n                                                </td>\\n                                                <td>\\n                                                    $ {{cuota.saldoRestante | number}}\\n                                                </td>\\n                                                <td>\\n                                                    <button *ngIf=\\\"cuota.comprobante\\\" placement=\\\"top\\\"\\n                                                        ngbTooltip=\\\"Ver comprobante\\\"\\n                                                        (click)=\\\"redireccionarAlComprobante(cuota);\\\"\\n                                                        class=\\\"btn btn-icon btn-3 btn-sm btn-info\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-inner--icon\\\">\\n                                                            <i class=\\\"fas fa-eye\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                    <button *ngIf=\\\"!cuota.comprobante\\\" placement=\\\"top\\\"\\n                                                        ngbTooltip=\\\"Generar comprobante\\\"\\n                                                        (click)=\\\"redireccionarGeneracionComprobante(cuota);\\\"\\n                                                        class=\\\"btn btn-icon btn-3 btn-sm btn-neutral\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-inner--icon\\\">\\n                                                            <i class=\\\"fas fa-share-square\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <button placement=\\\"top\\\" ngbTooltip=\\\"Elimina toda la información del sistema, estas seguro?\\\" *ngIf=\\\"config\\\"\\n        (click)=\\\"deleteData()\\\" class=\\\"btn btn-icon btn-3 btn-sm btn-secondary text-warning float-right\\\" type=\\\"button\\\">\\n        <span class=\\\"btn-inner--icon\\\">\\n            <i class=\\\"fas fa-trash\\\"></i> Eliminar datos\\n        </span>\\n    </button>\\n    <small *ngIf=\\\"config\\\"><strong>Ultima actualización: </strong>{{config.ultimaModificacion.toISOString()}}</small>\\n</div>\"","export default \"<div class=\\\"header bg-gradient-dark pb-7 pt-5 pt-md-8\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <h1 class=\\\"display-2 text-white\\\">Business Control</h1>\\n                    <p class=\\\"text-white\\\">Bienvenido a la página de verificación de comprobantes de pago.\\n                        <br>\\n                        Aquí\\n                        podrá confirmar la autenticidad del comprobante que ha recibido, revise los detalles a\\n                        continuación para asegurarse de que todo esté en orden.\\n\\n                    </p>\\n                    <div class=\\\"d-flex text-white justify-content-between\\\">\\n\\n                    </div>\\n                    <div class=\\\"d-flex text-white justify-content-between\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12 mb-4\\\">\\n            <div class=\\\"card shadow\\\">\\n                <div class=\\\"card-header bg-transparent\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <div class=\\\"col\\\">\\n                            <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">Verifique bien la información</h6>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div *ngIf=\\\"comprobante\\\">\\n                        <app-business-control-voucher [comprobante]=\\\"comprobante\\\"\\n                            [isVerify]=\\\"true\\\"></app-business-control-voucher>\\n                    </div>\\n                    <div *ngIf=\\\"!comprobante\\\">\\n                        <div class=\\\"row container\\\">\\n\\n                            <div class=\\\"col-lg-12\\\">\\n\\n                                <div class=\\\"card card-profile shadow\\\">\\n                                    <span class=\\\"badge badge-danger\\\"><i class=\\\"fa fa-star\\\"></i>\\n                                        EL DOCUMENTO NO SE VERIFICÓ O NO SE ENCONTRÓ</span>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row container\\\" *ngIf=\\\"comprobante\\\">\\n    <div class=\\\"col-lg-12\\\">\\n\\n        <div class=\\\"card card-profile shadow\\\" [ngClass]=\\\"isVerify?'':'pt-8'\\\">\\n            <span class=\\\"badge badge-success\\\" *ngIf=\\\"isVerify\\\"><i class=\\\"fa fa-star\\\"></i>\\n                VERIFICADO</span>\\n\\n            <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-lg-3 order-lg-2\\\">\\n                    <div class=\\\"card-profile-image center \\\" [ngClass]=\\\"isVerify?'pt-6 pb-6':'ml-7'\\\"><a\\n                            href=\\\"javascript:void(0)\\\">\\n                            <img [ngClass]=\\\"isVerify?'rounded-circle':''\\\" *ngIf=\\\"qrCodeDataUrl\\\" [src]=\\\"qrCodeDataUrl\\\"\\n                                alt=\\\"Código QR\\\" /></a>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-header text-center border-0 pt-8 pt-md-4 pb-0\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                    <span class=\\\"mr-4 badge badge-pill badge-info\\\">Desde:\\n                        {{darFormatoCol(comprobante.periodo.inicio)}}</span>\\n                    <span class=\\\" float-right badge badge-pill badge-success\\\">Hasta:\\n                        {{darFormatoCol(comprobante.periodo.fin)}}</span>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body pt-0 pt-md-4\\\">\\n\\n                <div class=\\\"text-center\\\">\\n\\n                    <h3>\\n                        <i class=\\\"ni ni-square-pin\\\"></i> {{comprobante.bien.direccion}}<span class=\\\"font-weight-light\\\">,\\n                            {{comprobante.bien.barrio}} -\\n                            {{comprobante.bien.ciudad}}</span>\\n                    </h3>\\n                    <div class=\\\"h5 font-weight-300\\\">\\n                        <i class=\\\"ni ni-single-02\\\"></i> {{comprobante?.contratante?.nombre}}\\n                    </div>\\n                    <hr class=\\\"my-4\\\">\\n                    <div class=\\\"h5 mt-4\\\">\\n                        <i class=\\\"ni ni-badge\\\"> </i> {{contrato.tipoDocumento}}: {{contrato.identificacion}} | <i\\n                            class=\\\"ni ni-paper-diploma\\\">\\n                        </i> {{contrato.nombre}} | <i class=\\\"ni ni-mobile-button\\\"> </i> {{contrato.telefono}}\\n                    </div>\\n                    <div class=\\\"h5 mt-4\\\" *ngIf=\\\"contrato.tipo=='Credito'\\\">\\n                        <i class=\\\"fas fa-dollar-sign\\\"></i> {{contrato.valorCredito | number }}\\n                        | <i class=\\\"fas fa-percent\\\"></i> {{contrato.tasaEM}} E.M\\n                        | <i class=\\\"fas fa-calendar-alt\\\"></i> {{contrato.plazoMeses}} Meses\\n                    </div>\\n                    <div><i class=\\\"ni education_hat mr-2\\\"></i>\\n                        <span class=\\\"badge badge-dot\\\">\\n                            <i [ngClass]=\\\"contratoID?'bg-success':'bg-danger'\\\"></i>\\n\\n\\n                            <!-- <span *ngIf=\\\"contratoID; else elseContratoInvalido\\\">\\n                                {{contratoID.id| slice:0:20}}\\n                            </span>\\n                            <ng-template #elseContratoInvalido>\\n                                <span>{{contrato.id| slice:0:20}}</span>\\n                            </ng-template> -->\\n                        </span>\\n                        Nro Contrato:\\n                        <span>{{contrato.id| slice:0:20}}</span>\\n                    </div>\\n                    <hr class=\\\"my-4\\\">\\n                    <div class=\\\"card shadow\\\">\\n                        <div class=\\\"card-header border-0\\\">\\n                            <h3 class=\\\"mb-0\\\">Conceptos\\n                                <span *ngIf=\\\"contrato.tipo=='Arrendamiento'; else elseContratoArrendamiento\\\">\\n                                    del arriendo\\n                                </span>\\n                                <ng-template #elseContratoArrendamiento>\\n                                    <span>del crédito</span>\\n                                </ng-template>\\n                            </h3>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table align-items-center table-flush\\\">\\n                                <thead class=\\\"thead-light\\\">\\n                                    <tr>\\n                                        <th scope=\\\"col\\\">#</th>\\n                                        <th scope=\\\"col\\\">Descripción</th>\\n                                        <th scope=\\\"col\\\">Valor</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let concepto of comprobante.conceptos; let i = index\\\">\\n                                        <td>{{i + 1}}</td>\\n                                        <td>{{concepto.descripcion}}</td>\\n                                        <td>{{concepto.valor | currency}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <th colspan=\\\"4\\\" class=\\\"text-right\\\" scope=\\\"row\\\">\\n                                            Total: {{comprobante.total | currency}}\\n                                            <br />\\n                                            <small><strong>Médio de pago: </strong>{{comprobante.medioPago}}</small>\\n                                        </th>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"footer p-0 mt-2 text-center\\\">\\n                    <small class=\\\"text-muted mb-4\\\" *ngIf=\\\"comprobante.observacion\\\">\\n                        Observacion: {{comprobante.observacion}}\\n                    </small><br />\\n                    <small *ngIf=\\\"!isVerify\\\"><a target=\\\"_blank\\\" href=\\\"{{comprobanteUrl}}\\\">Verificar la\\n                            autenticidad del\\n                            comprobante</a><br /></small>\\n\\n                    <small>\\n                        <i class=\\\" fa fa-lock\\\"></i>\\n                        <span class=\\\"text-nowrap\\\"> Firma digital: </span>\\n                        <span class=\\\"mr-2\\\">\\n                            <span *ngIf=\\\"contratoID; else elseContratoInvalido\\\">\\n                                {{contratoID.firmaDigital}}\\n                            </span>\\n                            <ng-template #elseContratoInvalido>\\n                                <span> <span class=\\\"badge badge-danger\\\" *ngIf=\\\"isVerify\\\"><i class=\\\"fa fa-star\\\"></i>\\n                                        Desconocido</span></span>\\n                            </ng-template>\\n                        </span>\\n                    </small>\\n                </div>\\n            </div>\\n        </div>\\n        <small style=\\\"color: #afafaf\\\">ID: {{comprobante.id}} - Fecha de generación:\\n            {{comprobante.fechaGeneracion.toISOString()}}, Fecha de impresión: {{date.toISOString()}}</small>\\n    </div>\\n</div>\"","export default \"<div class=\\\"header pb-6 pt-5 pt-md-8\\\" *ngIf=\\\"selectedBien\\\"\\n    [ngClass]=\\\"selectedBien.tipo=='Arrendamiento'?'bg-gradient-success':'bg-gradient-indigo'\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <p class=\\\"float-right\\\" *ngIf=\\\"!userLogger\\\">\\n                        <a href=\\\"javascript:void(0)\\\" placement=\\\"bottom\\\" ngbTooltip=\\\"Autenticación\\\" (click)=\\\"Login()\\\"\\n                            class=\\\"btn btn-neutral btn-icon\\\">\\n                            <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\n                            <span class=\\\"btn-inner--text\\\">Iniciar Con Google</span>\\n                        </a>\\n                    </p>\\n                    <p class=\\\"float-right\\\" *ngIf=\\\"userLogger\\\">\\n                        <a href=\\\"javascript:void(0)\\\" placement=\\\"left\\\"\\n                            [ngbTooltip]=\\\"'Cerrar sesión: '+userLogger?.email || 'Email no encontrado'\\\"\\n                            (click)=\\\"Logout()\\\" class=\\\"btn btn-neutral btn-icon\\\">\\n                            <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\n                            <span class=\\\"btn-inner--text\\\">Sync: {{userLogger?.username}}</span>\\n                        </a>\\n                    </p>\\n                    <h1 class=\\\"display-2 text-white\\\">Business Control</h1>\\n                    <p class=\\\"text-white\\\"><strong>Genere comprobantes de pago y mucho mas, si desea generar administrar\\n                            sus bienes de clic <a href=\\\"#/business-control-settings\\\"\\n                                class=\\\"text-white\\\"><strong>aquí</strong></a></strong></p>\\n                    <div class=\\\"p-0 col-lg-4\\\" *ngIf=\\\"this.config && this.config.bienes.length>1\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"bien\\\" class=\\\"text-white\\\">Selecciona tu bien</label>\\n                            <select id=\\\"bien\\\" [(ngModel)]=\\\"selectedBienId\\\" (change)=\\\"onBienSelect($event.target.value)\\\"\\n                                class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let bien of this.config.bienes\\\" [value]=\\\"bien.id\\\">\\n                                    <span *ngIf=\\\"bien.tipo=='Arrendamiento'; else elseArrendamientoSelect\\\">\\n                                        Vivienda en arriendo:\\n                                    </span>\\n                                    <ng-template #elseArrendamientoSelect>\\n                                        <span>Crédito:</span>\\n                                    </ng-template>\\n                                    {{bien.direccion}}\\n                                </option>\\n                            </select>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"d-flex text-white justify-content-between\\\">\\n                        <p class=\\\"mr-4 \\\" *ngIf=\\\"selectedBien\\\">\\n                            <i class=\\\" fa fa-arrow-up\\\"></i>\\n                            <span class=\\\"text-nowrap\\\"> Total ingresos </span><span class=\\\"mr-2\\\">\\n                                {{selectedBien.totalIngresos|\\n                                currency}}\\n                            </span>\\n                        </p>\\n                        <p class=\\\"float-right\\\" *ngIf=\\\"config\\\" placement=\\\"top\\\"\\n                            ngbTooltip=\\\"Utilice esta firma digital para verificar los comprobantes de pago\\\">\\n                            <i class=\\\" fa fa-lock\\\"></i>\\n                            <span class=\\\"text-nowrap\\\"> Firma digital: </span><span class=\\\"mr-2\\\">\\n                                {{firmaDigital}}\\n                            </span>\\n                        </p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <!-- <div class=\\\"col-xl-3 col-lg-6\\\">\\n                    <div class=\\\"card card-stats h-95\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">Ingresos</h5>\\n                                    <span class=\\\"h2 font-weight-bold mb-0\\\">{{selectedBien.totalIngresos|\\n                                        currency}}</span>\\n                                </div>\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"icon icon-shape bg-danger text-white rounded-circle shadow\\\"><i\\n                                            class=\\\"fas fa-chart-bar\\\"></i></div>\\n                                </div>\\n                            </div>\\n                            <p class=\\\"mt-3 mb-0 text-muted text-sm\\\"><span class=\\\"text-success mr-2\\\"><i\\n                                        class=\\\"fa fa-arrow-up\\\"></i>\\n                                    3.48%</span><span class=\\\"text-nowrap\\\">Since last month</span></p>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                <!-- <div class=\\\"col-xl-4 col-lg-6 col-md-12\\\">\\n                    <div class=\\\"card card-stats h-100\\\">\\n                        <canvas id=\\\"canvas\\\" class=\\\"position-relative w-100 h-100\\\"></canvas>\\n                        <p class=\\\"mt-3 mb-0 text-muted text-sm\\\"><i class=\\\"text-success fa fa-arrow-up\\\"></i>\\n                            <span class=\\\"text-nowrap\\\"> Total ingresos </span><span class=\\\"text-success mr-2\\\">\\n                                {{selectedBien.totalIngresos|\\n                                currency}}</span>\\n                        </p>\\n                    </div>\\n                </div> -->\\n\\n\\n\\n                <!-- <div class=\\\"col-xl-3 col-lg-6\\\">\\n                    <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">Sales</h5>\\n                                    <span class=\\\"h2 font-weight-bold mb-0\\\">924</span>\\n                                </div>\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"icon icon-shape bg-yellow text-white rounded-circle shadow\\\"><i\\n                                            class=\\\"fas fa-users\\\"></i></div>\\n                                </div>\\n                            </div>\\n                            <p class=\\\"mt-3 mb-0 text-muted text-sm\\\"><span class=\\\"text-warning mr-2\\\"><i\\n                                        class=\\\"fas fa-arrow-down\\\"></i>\\n                                    1.10%</span><span class=\\\"text-nowrap\\\">Since yesterday</span></p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-xl-3 col-lg-6\\\">\\n                    <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">Performance\\n                                    </h5><span class=\\\"h2 font-weight-bold mb-0\\\">49,65%</span>\\n                                </div>\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"icon icon-shape bg-info text-white rounded-circle shadow\\\"><i\\n                                            class=\\\"fas fa-percent\\\"></i></div>\\n                                </div>\\n                            </div>\\n                            <p class=\\\"mt-3 mb-0 text-muted text-sm\\\"><span class=\\\"text-success mr-2\\\"><i\\n                                        class=\\\"fas fa-arrow-up\\\"></i>\\n                                    12%</span><span class=\\\"text-nowrap\\\">Since last month</span></p>\\n                        </div>\\n                    </div>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n        <p class=\\\"text-warning mt-0 mb-5 pt-4\\\" *ngIf=\\\"selectedBien && !selectedBien.contratoActivo\\\"><strong>Debe\\n                configurar al\\n                menos\\n                un\\n                contrato para el bien, por favor configurelo <a href=\\\"#/business-control-settings\\\">aquí</a></strong></p>\\n    </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\" *ngIf=\\\"config && selectedBien && selectedBien.contratoActivo\\\">\\n    <div class=\\\"row mt-4\\\">\\n        <div class=\\\"col-lg-7 mb-lg-0 mb-4\\\">\\n            <div class=\\\"card shadow\\\">\\n                <div class=\\\"card-header pb-0 pt-3 bg-transparent\\\">\\n                    <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">\\n                        <span *ngIf=\\\"selectedBien.tipo=='Arrendamiento'; else elseArrendamiento\\\">\\n                            Vivienda en arriendo\\n                        </span>\\n                        <ng-template #elseArrendamiento>\\n                            <span>Crédito</span>\\n                        </ng-template>\\n                        |\\n                        {{selectedBien.ciudad}}\\n                    </h6>\\n                    <h2 class=\\\"mb-0 text-primary\\\">{{selectedBien.direccion}}, {{selectedBien.barrio}}\\n\\n                    </h2>\\n                </div>\\n                <div class=\\\"card-body p-3\\\">\\n                    <div class=\\\"pb-3\\\">\\n                        <h6 class=\\\"heading-small text-muted\\\">Comprobantes de pago</h6>\\n                        <h6 class=\\\"text-muted\\\">Contrato Nro:\\n                            {{selectedBien.contratoActivo.id| slice:0:20}}\\n                        </h6>\\n                        <h6 class=\\\"text-muted\\\">\\n                            <i class=\\\"ni ni-badge\\\"> </i> {{selectedBien.contratoActivo.tipoDocumento}}:\\n                            {{selectedBien.contratoActivo.identificacion}} | <i class=\\\"ni ni-paper-diploma\\\">\\n                            </i> {{selectedBien.contratoActivo.nombre}} | <i class=\\\"ni ni-mobile-button\\\"> </i>\\n                            {{selectedBien.contratoActivo.telefono}}\\n                        </h6>\\n                        <h6 class=\\\"text-muted mb-4\\\" *ngIf=\\\"selectedBien.contratoActivo.observacion\\\">\\n                            <i class=\\\"ni ni-bullet-list-67\\\"> </i> {{selectedBien.contratoActivo.observacion}}\\n                        </h6>\\n                        <form [formGroup]=\\\"comprobanteForm\\\" (ngSubmit)=\\\"addConcepto()\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-6 col-md-6\\\" *ngIf=\\\"this.config && this.config.bienes.length>0\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"seleccionarConcepto\\\">Conceptos</label>\\n                                        <select id=\\\"seleccionarConcepto\\\"\\n                                            (change)=\\\"onConceptoSelected($event.target.value)\\\" class=\\\"form-control\\\">\\n                                            <option *ngFor=\\\"let concepto of conceptosByContrato\\\"\\n                                                [value]=\\\"concepto.descripcion\\\">\\n                                                {{concepto.descripcion}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-6 col-md-6\\\"\\n                                    *ngIf=\\\"comprobanteForm.controls.descripcionTemp.value=='Otro'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"descripcion\\\">\\n                                            Descripción del concepto\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"descripcion\\\"\\n                                            formControlName=\\\"descripcion\\\" placeholder=\\\"\\\" type=\\\"text\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"comprobanteForm.controls.submitted.value && comprobanteForm.controls.descripcion.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-6 col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"valor\\\">\\n                                            Valor\\n                                        </label>\\n                                        <input class=\\\"form-control form-control-alternative\\\" id=\\\"valor\\\"\\n                                            formControlName=\\\"valor\\\" placeholder=\\\"\\\" type=\\\"number\\\">\\n                                        <p class=\\\"text-warning\\\">\\n                                            <span\\n                                                *ngIf=\\\"comprobanteForm.controls.submitted.value && comprobanteForm.controls.valor.errors?.required\\\">Campo\\n                                                Requerido</span>\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-6 col-md-6 pb-2\\\">\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-md btn-primary\\\">Agregar Concepto</button>\\n\\n                                </div>\\n                            </div>\\n\\n\\n                        </form>\\n                        <div *ngIf=\\\"newComprobante.conceptos.length > 0\\\">\\n                            <div class=\\\"row pb-3\\\">\\n                                <div class=\\\"col-lg-8\\\">\\n                                    <div class=\\\"card shadow\\\">\\n                                        <div class=\\\"card-header border-0\\\">\\n                                            <h3 class=\\\"mb-0\\\">Conceptos</h3>\\n                                        </div>\\n                                        <div class=\\\"table-responsive\\\">\\n                                            <table class=\\\"table align-items-center table-flush\\\">\\n                                                <thead class=\\\"thead-light\\\">\\n                                                    <tr>\\n                                                        <th scope=\\\"col\\\">#</th>\\n                                                        <th scope=\\\"col\\\">Descripción</th>\\n                                                        <th scope=\\\"col\\\">Valor</th>\\n                                                        <th scope=\\\"col\\\"></th>\\n                                                    </tr>\\n                                                </thead>\\n                                                <tbody>\\n                                                    <tr\\n                                                        *ngFor=\\\"let concepto of newComprobante.conceptos; let i = index\\\">\\n                                                        <td>{{i + 1}}</td>\\n                                                        <td>{{concepto.descripcion}}</td>\\n                                                        <td>\\n                                                            <input (input)=\\\"calcularTotalComprobante()\\\"\\n                                                                class=\\\"form-control form-control-alternative\\\"\\n                                                                id=\\\"valor{{i}}\\\" [(ngModel)]=\\\"concepto.valor\\\"\\n                                                                style=\\\"min-width: 120px;\\\" type=\\\"number\\\">\\n                                                        </td>\\n                                                        <td>\\n                                                            <button class=\\\"btn btn-icon btn-3 btn-sm btn-danger\\\"\\n                                                                type=\\\"button\\\" (click)=\\\"removeConcepto(i)\\\">\\n                                                                <span class=\\\"btn-inner--icon\\\">\\n                                                                    <i class=\\\"fa fa-trash\\\"></i>\\n                                                                </span>\\n                                                            </button>\\n                                                        </td>\\n                                                    </tr>\\n                                                    <tr>\\n                                                        <th colspan=\\\"4\\\" class=\\\"text-right\\\" scope=\\\"row\\\">\\n                                                            Total: {{newComprobante.total | currency}}\\n                                                        </th>\\n                                                    </tr>\\n                                                </tbody>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"observacionComprobante\\\">\\n                                            Observación\\n                                        </label>\\n                                        <textarea class=\\\"form-control form-control-alternative\\\"\\n                                            id=\\\"observacionComprobante\\\" [(ngModel)]=\\\"observacionComprobante\\\"\\n                                            placeholder=\\\"\\\"></textarea>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"seleccionarConcepto\\\">Medios de pago</label>\\n                                        <select id=\\\"seleccionarConcepto\\\" [(ngModel)]=\\\"metodoPagoComprobante\\\"\\n                                            class=\\\"form-control\\\">\\n                                            <option *ngFor=\\\"let medio of config.mediosPago\\\" [value]=\\\"medio\\\">\\n                                                {{medio}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\" for=\\\"fechaComprobante\\\">\\n                                            Fecha comprobante\\n                                        </label>\\n                                        <input [(ngModel)]=\\\"fechaComprobante\\\"\\n                                            class=\\\"form-control form-control-alternative\\\" id=\\\"fechaComprobante\\\"\\n                                            placeholder=\\\"\\\" type=\\\"date\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-12\\\">\\n                                    <button class=\\\"btn btn-success\\\" (click)=\\\"generateComprobante()\\\">Generar\\n                                        Comprobante</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"this.config && selectedBien && selectedBien.comprobantes.length>0\\\" class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <div class=\\\"card shadow\\\">\\n                                <div class=\\\"card-header border-0\\\">\\n                                    <h3 class=\\\"mb-0\\\">Comprobantes de pago</h3>\\n                                </div>\\n                                <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table align-items-center table-flush\\\">\\n                                        <thead class=\\\"thead-light\\\">\\n                                            <tr>\\n                                                <th scope=\\\"col\\\"></th>\\n                                                <th scope=\\\"col\\\">Fecha</th>\\n                                                <th scope=\\\"col\\\">Total</th>\\n                                                <th scope=\\\"col\\\">Observación</th>\\n                                                <th scope=\\\"col\\\">Metodo de pago</th>\\n                                                <th scope=\\\"col\\\"></th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let comprobante of selectedBien.comprobantes; let i = index\\\">\\n                                                <th scope=\\\"row\\\">\\n                                                    {{comprobante.id| slice:-4}}\\n                                                </th>\\n                                                <th>\\n                                                    {{comprobante.fechaGeneracion | date}}\\n                                                </th>\\n                                                <td>{{comprobante.total| number}}</td>\\n                                                <td>\\n                                                    <span\\n                                                        *ngIf=\\\"comprobante.observacion.length > 25; else shortObservacion\\\"\\n                                                        [ngbTooltip]=\\\"comprobante.observacion\\\"\\n                                                        [attr.aria-label]=\\\"comprobante.observacion\\\">\\n                                                        {{comprobante.observacion | slice:0:25}}...\\n                                                    </span>\\n                                                    <ng-template #shortObservacion>\\n                                                        {{comprobante.observacion}}\\n                                                    </ng-template>\\n                                                </td>\\n                                                <td>\\n                                                    {{comprobante.medioPago }}\\n                                                </td>\\n                                                <td>\\n                                                    <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                                                        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n                                                            <span\\n                                                                *ngIf=\\\"comprobante.generandoPdf || comprobante.compartiendoPdf || comprobante.compartiendoUrl\\\">\\n                                                                Cargando...\\n                                                            </span>\\n                                                        </div>\\n                                                    </div>\\n                                                    <button [disabled]=\\\"comprobante.generandoPdf\\\"\\n                                                        (click)=\\\"generatePDF(comprobante);\\\"\\n                                                        class=\\\"btn btn-icon btn-3 btn-sm btn-success\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-inner--icon\\\">\\n                                                            <i class=\\\"fa fa-download\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                    <button [disabled]=\\\"comprobante.compartiendoPdf\\\"\\n                                                        *ngIf=\\\"isWebShareSupported\\\" (click)=\\\"sharedPDF(comprobante)\\\"\\n                                                        class=\\\"btn btn-icon btn-3 btn-sm btn-primary\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-inner--icon\\\">\\n                                                            <i class=\\\"fas fa-share-alt\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                    <button [disabled]=\\\"comprobante.compartiendoUrl\\\"\\n                                                        *ngIf=\\\"isWebShareSupported && comprobante.urlCorta\\\"\\n                                                        (click)=\\\"sharedUrl(comprobante)\\\"\\n                                                        class=\\\"btn btn-icon btn-3 btn-sm btn-neutral\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-inner--icon\\\">\\n                                                            <i class=\\\"fas fa-share-square\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                    <button (click)=\\\"showComprobante(comprobante)\\\"\\n                                                        class=\\\"btn btn-icon btn-3 btn-sm btn-info\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-inner--icon\\\">\\n                                                            <i class=\\\"fas fa-eye\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <th colspan=\\\"6\\\" class=\\\"text-right\\\" scope=\\\"row\\\">\\n                                                    Total: {{selectedBien.totalIngresos | currency}}\\n                                                </th>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"comprobanteToPdf\\\" style=\\\"margin-left: -1000px; position: fixed;\\\">\\n                        <!-- <div *ngIf=\\\"comprobanteToPdf\\\"> -->\\n                        <div #pdfContent>\\n                            <app-business-control-voucher\\n                                [comprobante]=\\\"comprobanteToPdf\\\"></app-business-control-voucher>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-5\\\">\\n            <div class=\\\"card shadow\\\">\\n                <div class=\\\"card-header pb-0 pt-3 bg-transparent\\\">\\n                    <h6 class=\\\"text-uppercase text-muted ls-1 mb-1\\\">\\n                        <span *ngIf=\\\"selectedBien.tipo=='Arrendamiento'; else elseArrendamientoServiciosPublicos\\\">\\n                            Servicios públicos |\\n                        </span>\\n                        <ng-template #elseArrendamientoServiciosPublicos>\\n                            <span> </span>\\n                        </ng-template>\\n                        {{selectedBien.ciudad}}\\n                    </h6>\\n                    <h2 class=\\\"mb-0 text-primary\\\">{{selectedBien.direccion}}, {{selectedBien.barrio}}\\n\\n                    </h2>\\n                </div>\\n                <div class=\\\"card-body p-3\\\">\\n                    <div>\\n                        <h6 class=\\\"heading-small text-muted\\\">\\n                            <span *ngIf=\\\"selectedBien.tipo=='Arrendamiento'; else elseArrendamientoServiciosPublicos\\\">\\n                                Servicios públicos\\n                            </span>\\n                            <ng-template #elseArrendamientoServiciosPublicos>\\n                                <span>Comportamiento de ingresos</span>\\n                            </ng-template>\\n                        </h6>\\n                        <h6 class=\\\"text-muted mb-4\\\">\\n                            Aquí podra registrar los valores de los recibos de cada mes a modo\\n                            de\\n                            comparativa entre ingresos y gastos\\n                        </h6>\\n                        <div class=\\\"col-lg-12 mt-5\\\">\\n                            <div class=\\\"card card-stats h-100\\\">\\n                                <!-- Chart -->\\n                                <canvas id=\\\"canvas\\\" class=\\\"position-relative w-100 h-100\\\"></canvas>\\n\\n                            </div>\\n                        </div>\\n                        <form [formGroup]=\\\"servicioForm\\\" (ngSubmit)=\\\"registerServicio()\\\"\\n                            *ngIf=\\\"selectedBien.tipo=='Arrendamiento'\\\">\\n                            <div *ngIf=\\\"selectedBien\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-lg-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"form-control-label\\\" for=\\\"tipo\\\">Tipo de servicio</label>\\n                                            <select id=\\\"tipo\\\" formControlName=\\\"tipo\\\" class=\\\"form-control\\\">\\n                                                <option *ngFor=\\\"let tipo of ['Luz','Agua', 'Gas', 'Internet', 'Otro']\\\"\\n                                                    [value]=\\\"tipo\\\">\\n                                                    {{tipo}}</option>\\n                                            </select>\\n                                            <p class=\\\"text-warning\\\">\\n                                                <span\\n                                                    *ngIf=\\\"servicioForm.controls.submitted.value && servicioForm.controls.tipo.errors?.required\\\">Campo\\n                                                    Requerido</span>\\n                                            </p>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-lg-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"form-control-label\\\" for=\\\"valor\\\">\\n                                                Valor\\n                                            </label>\\n                                            <input class=\\\"form-control form-control-alternative\\\" id=\\\"valor\\\"\\n                                                formControlName=\\\"valor\\\" placeholder=\\\"0\\\" type=\\\"number\\\">\\n                                            <p class=\\\"text-warning\\\">\\n                                                <span\\n                                                    *ngIf=\\\"servicioForm.controls.submitted.value && servicioForm.controls.valor.errors?.required\\\">Campo\\n                                                    Requerido</span>\\n                                            </p>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-lg-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"form-control-label\\\" for=\\\"fechaGeneracion\\\">\\n                                                Fecha de Generación\\n                                            </label>\\n                                            <input class=\\\"form-control form-control-alternative\\\" id=\\\"fechaGeneracion\\\"\\n                                                formControlName=\\\"fechaGeneracion\\\" placeholder=\\\"0\\\" type=\\\"date\\\">\\n                                            <p class=\\\"text-warning\\\">\\n                                                <span\\n                                                    *ngIf=\\\"servicioForm.controls.submitted.value && servicioForm.controls.fechaGeneracion.errors?.required\\\">Campo\\n                                                    Requerido</span>\\n                                            </p>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-lg-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"form-control-label\\\" for=\\\"fechaPago\\\">\\n                                                Fecha de Pago\\n                                            </label>\\n                                            <input class=\\\"form-control form-control-alternative\\\" id=\\\"fechaPago\\\"\\n                                                formControlName=\\\"fechaPago\\\" placeholder=\\\"0\\\" type=\\\"date\\\">\\n                                            <p class=\\\"text-warning\\\">\\n                                                <span\\n                                                    *ngIf=\\\"servicioForm.controls.submitted.value && servicioForm.controls.fechaPago.errors?.required\\\">Campo\\n                                                    Requerido</span>\\n                                            </p>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Registrar Pago</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'argon-dashboard-angular';\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { AuthLayoutComponent } from './layouts/auth-layout/auth-layout.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app.routing';\nimport { ComponentsModule } from './components/components.module';\nimport { BriefcasesComponent } from './pages/briefcases/briefcases.component';\nimport { NgxImageGalleryModule } from 'ngx-image-gallery';\nimport { BusinessControlComponent } from './pages/business-control/business-control.component';\nimport { BusinessControlSettingsComponent } from './pages/business-control-settings/business-control-settings.component';\nimport { BusinessControlVoucherComponent } from './pages/business-control-voucher/business-control-voucher.component';\nimport { BusinessControlVerifyComponent } from './pages/business-control-verify/business-control-verify.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AccountControlComponent } from './pages/account-control/account-control.component';\nimport { AccountControlManagementAccountComponent } from './pages/account-control/account-control-management-account/account-control-management-account.component';\nimport { AccountControlManagementCategoriesComponent } from './pages/account-control/account-control-management-categories/account-control-management-categories.component';\nimport { AccountControlTransactionCardComponent } from './pages/account-control/account-control-transaction-card/account-control-transaction-card.component';\nimport { AccountControlListBudgetsComponent } from './pages/account-control/account-control-list-budgets/account-control-list-budgets.component';\nimport { AccountControlListTransactionsComponent } from './pages/account-control/account-control-list-transactions/account-control-list-transactions.component';\nimport { AccountControlManagementTransactionComponent } from './pages/account-control/account-control-management-transaction/account-control-management-transaction.component';\n\n\n@NgModule({\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    ComponentsModule,\n    NgbModule,\n    RouterModule,\n    AppRoutingModule,\n    NgxImageGalleryModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n\n    ToastrModule.forRoot({\n      // Configuración opcional de Toastr\n      timeOut: 10000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n    }), // Agrega el módulo Toastr\n  ],\n  declarations: [\n    AppComponent,\n    AdminLayoutComponent,\n    AuthLayoutComponent,\n    BriefcasesComponent,\n    BusinessControlComponent,\n    BusinessControlSettingsComponent,\n    BusinessControlVoucherComponent,\n    BusinessControlVerifyComponent,\n    AccountControlComponent,\n    AccountControlManagementAccountComponent,\n    AccountControlManagementCategoriesComponent,\n    AccountControlTransactionCardComponent,\n    AccountControlListBudgetsComponent,\n    AccountControlListTransactionsComponent,\n    AccountControlManagementTransactionComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { AuthLayoutComponent } from './layouts/auth-layout/auth-layout.component';\nimport { BriefcasesComponent } from './pages/briefcases/briefcases.component';\nimport { BusinessControlComponent } from './pages/business-control/business-control.component';\nimport { BusinessControlSettingsComponent } from './pages/business-control-settings/business-control-settings.component';\nimport { BusinessControlVerifyComponent } from './pages/business-control-verify/business-control-verify.component';\nimport { AccountControlComponent } from './pages/account-control/account-control.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'user-profile',\n    pathMatch: 'full',\n  }, {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(m => m.AdminLayoutModule)\n      },\n      { path: 'briefcases', component: BriefcasesComponent },\n    ]\n  }, {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(m => m.AdminLayoutModule)\n      },\n      { path: 'business-control', component: BusinessControlComponent },\n    ]\n  }, {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(m => m.AdminLayoutModule)\n      },\n      { path: 'business-control-settings', component: BusinessControlSettingsComponent },\n    ]\n  }, {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(m => m.AdminLayoutModule)\n      },\n      { path: 'business-control-verify', component: BusinessControlVerifyComponent },\n    ]\n  }, {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(m => m.AdminLayoutModule)\n      },\n      { path: 'account-control', component: AccountControlComponent },\n    ]\n  },\n  {\n    path: '',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./layouts/auth-layout/auth-layout.module').then(m => m.AuthLayoutModule)\n      }\n    ]\n  }, {\n    path: '**',\n    redirectTo: 'user-profile'\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    RouterModule.forRoot(routes, {\n      useHash: true\n    })\n  ],\n  exports: [\n  ],\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgbModule\n  ],\n  declarations: [\n    FooterComponent,\n    NavbarComponent,\n    SidebarComponent\n  ],\n  exports: [\n    FooterComponent,\n    NavbarComponent,\n    SidebarComponent\n  ]\n})\nexport class ComponentsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SummaryResumeService } from 'src/app/services/summary-resume/summary-resume.service';\nimport { Summary } from 'src/app/entities/summary';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  test: Date = new Date();\n\n  constructor(private _summaryResumeService: SummaryResumeService) { }\n  public Summary: Summary;\n  ngOnInit() {\n    this.getData();\n  }\n\n  private getData(): void {\n    this._summaryResumeService.GetProfile().subscribe(data => {\n      this.Summary = data;\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { ROUTES } from '../sidebar/sidebar.component';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Summary } from 'src/app/entities/summary';\nimport { SummaryResumeService } from 'src/app/services/summary-resume/summary-resume.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  public focus;\n  public listTitles: any[];\n  public location: Location;\n  public Summary: Summary;\n  \n  constructor(location: Location,  private element: ElementRef, private router: Router,private _summaryResumeService: SummaryResumeService) {\n    this.location = location;\n  }\n\n  ngOnInit() {\n    this.listTitles = ROUTES.filter(listTitle => listTitle);\n    this.getData();\n  }\n  getTitle(){\n    var titlee = this.location.prepareExternalUrl(this.location.path());\n    if(titlee.charAt(0) === '#'){\n        titlee = titlee.slice( 1 );\n    }\n\n    for(var item = 0; item < this.listTitles.length; item++){\n        if(this.listTitles[item].path === titlee){\n            return this.listTitles[item].title;\n        }\n    }\n    return 'Dashboard';\n  }\n\n  private getData(): void {\n    this._summaryResumeService.GetProfile().subscribe(data => {\n      this.Summary = data;\n    });\n  }\n\n\n}\n","export default \".hide {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL1N1bW1hcnlSZXN1bWUvU3VtbWFyeVJlc3VtZS9zcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59IiwiLmhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\ndeclare interface RouteInfo {\n  path: string;\n  title: string;\n  icon: string;\n  class: string;\n}\nexport const ROUTES: RouteInfo[] = [\n  // { path: '/dashboard', title: 'Dashboard',  icon: 'ni-tv-2 text-primary', class: '' },\n  // { path: '/icons', title: 'Icons',  icon:'ni-planet text-blue', class: '' },\n  // { path: '/maps', title: 'Maps',  icon:'ni-pin-3 text-orange', class: '' },\n  { path: '/user-profile', title: 'Perfil', icon: 'ni-single-02 text-yellow', class: '' },\n  { path: '/briefcases', title: 'Portafolio', icon: 'ni-tv-2 text-primary', class: '' },\n  { path: '/account-control', title: 'Cuentas', icon: 'ni-credit-card text-default', class: '' },\n  { path: '/account-control-settings', title: 'Configuracion de Cuentas', icon: 'ni-building text-success', class: 'hide' },\n  { path: '/business-control', title: 'Negocio', icon: 'ni-building text-success', class: '' },\n  { path: '/business-control-settings', title: 'Negocio', icon: 'ni-building text-success', class: 'hide' },\n  { path: '/business-control-verify', title: 'Verificacion', icon: 'ni ni-atom text-warn', class: 'hide' },\n\n  // { path: '/login', title: 'Login',  icon:'ni-key-25 text-info', class: '' },\n  // { path: '/register', title: 'Register',  icon:'ni-circle-08 text-pink', class: '' }\n];\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  public menuItems: any[];\n  public isCollapsed = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n    this.router.events.subscribe((event) => {\n      this.isCollapsed = true;\n    });\n  }\n}\n","export class AccountConstant {\n    static TRANSACTION_TYPE_INCOME: 'income' = 'income';\n    static TRANSACTION_TYPE_EXPENSE: 'expense' = 'expense';\n    static ACCOUNT_BILLETERA: 'Billetera' = 'Billetera';\n}\n\n/**\n * Son las cuentas que el usuario tiene, banco, billetera, inversión, crédito\n */\nexport interface Account {\n    id: string;  // Debe corresponder al número de cuenta que llegan en los correos, si queremos que de manera automática se creen transacciones con esta cuenta\n    name: string;\n    description: string;\n    balance: number;  // Saldo actual de la cuenta\n    lastBalance: number;  // Saldo inmediatamente anterior\n    balanceLastMonth: number;  // Saldo del mes anterior de la cuenta\n    isPrincipal: boolean;\n    lastTransaction?: Transaction;  // Saldo del mes anterior de la cuenta\n}\n\n/**\n * Transacciones realizadas en las cuentas del usuario\n */\nexport interface Transaction {\n    id: string;\n    accountId: string;  // Relación con la cuenta\n    originalAccount: string;  // Relación con la cuenta\n    amount: number;\n    date: Date;\n    categoryId: string;  // Id de la Categoría de la transacción\n    originalBody: string\n    canProcessed: boolean\n    description: string;\n    isProcessed: boolean;  // Indica si la transacción está en proceso de procesamiento\n    targetAccountId?: string;\n    transactionId?: string;\n    type: typeof AccountConstant.TRANSACTION_TYPE_INCOME | typeof AccountConstant.TRANSACTION_TYPE_EXPENSE;  // Tipo de transacción: ingreso o gasto\n}\n\n/**\n * Categorías de ingresos y gastos\n */\nexport interface Category {\n    id: string;//Compuesto de el type y name (type_name)\n    order: number;\n    name: string;\n    keyWords: string[];  // Palabra clave para buscar la categoría en el filtro de los correos \n    type: typeof AccountConstant.TRANSACTION_TYPE_INCOME | typeof AccountConstant.TRANSACTION_TYPE_EXPENSE;  // Tipo de transacción: ingreso o gasto\n    budget: number;  // Presupuesto asignado a la categoría\n    currentAmmount?: number;  // valor absoluto del monto actual en la categoría\n    accountId: string; //Cuenta de destinoa donde debe ir el dinero\n}\n\n/**\n * Configuración del usuario, incluyendo las cuentas y últimas sincronizaciones\n */\nexport interface SettingsData {\n    name: string;\n    email: string;\n    accounts: Account[];\n    transactions: Transaction[];  // Lista de transacciones asociadas a la cuenta\n    lastSync?: Date;\n    lastSyncTransactions?: Date;\n    budgetSettings: BudgetSettings;  // Configuración del presupuesto\n}\n\n/**\n * Configuración del presupuesto, incluyendo categorías y límites\n */\nexport interface BudgetSettings {\n    categories: Category[];  // Lista de categorías y sus presupuestos\n    totalIncome: number;  // Ingresos totales planificados\n    totalExpense: number;  // Gastos totales planificados\n    savingsGoal?: number;  // Objetivo de ahorro\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYWRtaW4tbGF5b3V0L2FkbWluLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvYXV0aC1sYXlvdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit, OnDestroy {\n  test: Date = new Date();\n  public isCollapsed = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    var html = document.getElementsByTagName(\"html\")[0];\n    html.classList.add(\"auth-layout\");\n    var body = document.getElementsByTagName(\"body\")[0];\n    body.classList.add(\"bg-default\");\n    this.router.events.subscribe((event) => {\n      this.isCollapsed = true;\n   });\n\n  }\n  ngOnDestroy() {\n    var html = document.getElementsByTagName(\"html\")[0];\n    html.classList.remove(\"auth-layout\");\n    var body = document.getElementsByTagName(\"body\")[0];\n    body.classList.remove(\"bg-default\");\n  }\n}\n","export default \".keywords-container {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 5px;\\n    padding: 5px 0;\\n}\\n\\n.keyword-badge {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    gap: 3px;\\n    margin-bottom: 5px;\\n}\\n\\n.is-invalid {\\n    border-color: red;\\n}\\n\\n.text-danger {\\n    color: red;\\n}\\n\\n.table-responsive {\\n    overflow-x: auto;\\n    /* Habilita el desplazamiento horizontal */\\n    -webkit-overflow-scrolling: touch;\\n    /* Mejora la experiencia de desplazamiento en iOS */\\n}\\n\\n.table-container {\\n    width: 100%;\\n    /* Asegura que el contenedor ocupe el 100% del espacio disponible */\\n}\\n\\n.keywords-container {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n    /* Coloca los badges en varias líneas */\\n    gap: 4px;\\n    max-width: 250px;\\n    /* Opcional: Ajusta el ancho máximo para las keywords */\\n}\\n\\n.btn-sm.bg-gradient-dark {\\n    margin-right: 4px;\\n    /* Espacio entre badges */\\n}\\n\\n.table-col-nombre {\\n    min-width: 150px;\\n    /* Define el ancho mínimo deseado */\\n}\\n\\n/* Estilo para filas pares */\\n\\ntable.table tbody tr:nth-child(even) {\\n    background-color: #f9f9f9;\\n    /* Color gris claro */\\n}\\n\\n.card-profile-stats {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 1rem;\\n    /* Añade espacio entre los elementos */\\n}\\n\\n.budget-item {\\n    min-width: 120px;\\n    /* Ancho mínimo para cada elemento */\\n    padding: 0.5rem;\\n    -webkit-box-flex: 1;\\n            flex: 1 1 30%;\\n    /* Los elementos ocupan 30% del ancho en pantallas grandes */\\n}\\n\\n/* En pantallas pequeñas, se organiza en columnas */\\n\\n@media (max-width: 576px) {\\n    .card-profile-stats {\\n        -webkit-box-orient: vertical;\\n        -webkit-box-direction: normal;\\n                flex-direction: column;\\n        -webkit-box-align: center;\\n                align-items: center;\\n    }\\n\\n    .budget-item {\\n        width: 100%;\\n        /* Cada elemento toma el 100% del ancho en pantallas pequeñas */\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC1jb250cm9sL2FjY291bnQtY29udHJvbC1saXN0LWJ1ZGdldHMvYWNjb3VudC1jb250cm9sLWxpc3QtYnVkZ2V0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IsZUFBZTtJQUNmLFFBQVE7SUFDUixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IseUJBQW1CO1lBQW5CLG1CQUFtQjtJQUNuQixRQUFRO0lBQ1Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLDBDQUEwQztJQUMxQyxpQ0FBaUM7SUFDakMsbURBQW1EO0FBQ3ZEOztBQUVBO0lBQ0ksV0FBVztJQUNYLG1FQUFtRTtBQUN2RTs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLGVBQWU7SUFDZix1Q0FBdUM7SUFDdkMsUUFBUTtJQUNSLGdCQUFnQjtJQUNoQix1REFBdUQ7QUFDM0Q7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1DQUFtQztBQUN2Qzs7QUFFQSw0QkFBNEI7O0FBQzVCO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLGVBQWU7SUFDZixTQUFTO0lBQ1Qsc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG9DQUFvQztJQUNwQyxlQUFlO0lBQ2YsbUJBQWE7WUFBYixhQUFhO0lBQ2IsNERBQTREO0FBQ2hFOztBQUVBLG1EQUFtRDs7QUFDbkQ7SUFDSTtRQUNJLDRCQUFzQjtRQUF0Qiw2QkFBc0I7Z0JBQXRCLHNCQUFzQjtRQUN0Qix5QkFBbUI7Z0JBQW5CLG1CQUFtQjtJQUN2Qjs7SUFFQTtRQUNJLFdBQVc7UUFDWCwrREFBK0Q7SUFDbkU7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wtbGlzdC1idWRnZXRzL2FjY291bnQtY29udHJvbC1saXN0LWJ1ZGdldHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5rZXl3b3Jkcy1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGdhcDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAwO1xufVxuXG4ua2V5d29yZC1iYWRnZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogM3B4O1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLmlzLWludmFsaWQge1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xufVxuXG4udGV4dC1kYW5nZXIge1xuICAgIGNvbG9yOiByZWQ7XG59XG5cbi50YWJsZS1yZXNwb25zaXZlIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIC8qIEhhYmlsaXRhIGVsIGRlc3BsYXphbWllbnRvIGhvcml6b250YWwgKi9cbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gICAgLyogTWVqb3JhIGxhIGV4cGVyaWVuY2lhIGRlIGRlc3BsYXphbWllbnRvIGVuIGlPUyAqL1xufVxuXG4udGFibGUtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAvKiBBc2VndXJhIHF1ZSBlbCBjb250ZW5lZG9yIG9jdXBlIGVsIDEwMCUgZGVsIGVzcGFjaW8gZGlzcG9uaWJsZSAqL1xufVxuXG4ua2V5d29yZHMtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAvKiBDb2xvY2EgbG9zIGJhZGdlcyBlbiB2YXJpYXMgbMOtbmVhcyAqL1xuICAgIGdhcDogNHB4O1xuICAgIG1heC13aWR0aDogMjUwcHg7XG4gICAgLyogT3BjaW9uYWw6IEFqdXN0YSBlbCBhbmNobyBtw6F4aW1vIHBhcmEgbGFzIGtleXdvcmRzICovXG59XG5cbi5idG4tc20uYmctZ3JhZGllbnQtZGFyayB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gICAgLyogRXNwYWNpbyBlbnRyZSBiYWRnZXMgKi9cbn1cblxuLnRhYmxlLWNvbC1ub21icmUge1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgLyogRGVmaW5lIGVsIGFuY2hvIG3DrW5pbW8gZGVzZWFkbyAqL1xufVxuXG4vKiBFc3RpbG8gcGFyYSBmaWxhcyBwYXJlcyAqL1xudGFibGUudGFibGUgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICAgIC8qIENvbG9yIGdyaXMgY2xhcm8gKi9cbn1cblxuLmNhcmQtcHJvZmlsZS1zdGF0cyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgZ2FwOiAxcmVtO1xuICAgIC8qIEHDsWFkZSBlc3BhY2lvIGVudHJlIGxvcyBlbGVtZW50b3MgKi9cbn1cblxuLmJ1ZGdldC1pdGVtIHtcbiAgICBtaW4td2lkdGg6IDEyMHB4O1xuICAgIC8qIEFuY2hvIG3DrW5pbW8gcGFyYSBjYWRhIGVsZW1lbnRvICovXG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGZsZXg6IDEgMSAzMCU7XG4gICAgLyogTG9zIGVsZW1lbnRvcyBvY3VwYW4gMzAlIGRlbCBhbmNobyBlbiBwYW50YWxsYXMgZ3JhbmRlcyAqL1xufVxuXG4vKiBFbiBwYW50YWxsYXMgcGVxdWXDsWFzLCBzZSBvcmdhbml6YSBlbiBjb2x1bW5hcyAqL1xuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gICAgLmNhcmQtcHJvZmlsZS1zdGF0cyB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmJ1ZGdldC1pdGVtIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIC8qIENhZGEgZWxlbWVudG8gdG9tYSBlbCAxMDAlIGRlbCBhbmNobyBlbiBwYW50YWxsYXMgcGVxdWXDsWFzICovXG4gICAgfVxufSJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { BudgetSettings, Category, SettingsData, AccountConstant } from 'src/app/entities/account-control';\n\n@Component({\n  selector: 'app-account-control-list-budgets',\n  templateUrl: './account-control-list-budgets.component.html',\n  styleUrls: ['./account-control-list-budgets.component.css']\n})\nexport class AccountControlListBudgetsComponent implements OnInit {\n\n  constructor() { }\n\n  activeTab: 'income' | 'expense' = 'income';\n  newKeyword: string = '';\n  categories: Category[] = [];\n  budgetSettings: BudgetSettings = {\n    categories: [],\n    totalIncome: 0,\n    totalExpense: 0,\n    savingsGoal: 0\n  };\n\n  ngOnInit(): void {\n  }\n\n  private _settionsData: SettingsData;\n  @Input()\n  set settionsData(value: SettingsData) {\n    if (value) {\n      this.onSettionsDataChange(value); // Llama a un método cuando el valor cambia\n    }\n  }\n\n  onSettionsDataChange(value: SettingsData) {\n    this._settionsData = JSON.parse(JSON.stringify(value));\n    if (value && value.budgetSettings) {\n      this.categories = value.budgetSettings.categories;\n      this.budgetSettings = value.budgetSettings;\n    }\n  }\n\n  get settionsData(): SettingsData {\n    return this._settionsData;\n  }\n\n  calculatePercentage(currentAmmount: number, budget: number): number {\n    if (budget === 0) return 0;\n    return Math.round((currentAmmount / budget) * 100);\n  }\n\n  getCategoriesByType(type: 'income' | 'expense') {\n    return this.categories.filter(category =>\n      category.type === (type === 'income' ? AccountConstant.TRANSACTION_TYPE_INCOME : AccountConstant.TRANSACTION_TYPE_EXPENSE)).sort((a, b) => a.order - b.order);\n  }\n\n  setActiveTab(type: 'income' | 'expense') {\n    this.activeTab = type;\n  }\n}\n","export default \"/* Personalizar el estilo de la barra de scroll en el contenedor de transacciones */\\n.card-body .scroll-container::-webkit-scrollbar {\\n    width: 8px;\\n}\\n.card-body .scroll-container::-webkit-scrollbar-thumb {\\n    background-color: #aaa;\\n    border-radius: 4px;\\n}\\n/* En pantallas pequeñas, se organiza en columnas */\\n@media (max-width: 576px) {\\n    .card-profile-stats {\\n        -webkit-box-orient: vertical;\\n        -webkit-box-direction: normal;\\n                flex-direction: column;\\n        -webkit-box-align: center;\\n                align-items: center;\\n    }\\n\\n    .budget-item {\\n        width: 100%;\\n        /* Cada elemento toma el 100% del ancho en pantallas pequeñas */\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC1jb250cm9sL2FjY291bnQtY29udHJvbC1saXN0LXRyYW5zYWN0aW9ucy9hY2NvdW50LWNvbnRyb2wtbGlzdC10cmFuc2FjdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtRkFBbUY7QUFDbkY7SUFDSSxVQUFVO0FBQ2Q7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixrQkFBa0I7QUFDdEI7QUFFQSxtREFBbUQ7QUFDbkQ7SUFDSTtRQUNJLDRCQUFzQjtRQUF0Qiw2QkFBc0I7Z0JBQXRCLHNCQUFzQjtRQUN0Qix5QkFBbUI7Z0JBQW5CLG1CQUFtQjtJQUN2Qjs7SUFFQTtRQUNJLFdBQVc7UUFDWCwrREFBK0Q7SUFDbkU7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wtbGlzdC10cmFuc2FjdGlvbnMvYWNjb3VudC1jb250cm9sLWxpc3QtdHJhbnNhY3Rpb25zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBQZXJzb25hbGl6YXIgZWwgZXN0aWxvIGRlIGxhIGJhcnJhIGRlIHNjcm9sbCBlbiBlbCBjb250ZW5lZG9yIGRlIHRyYW5zYWNjaW9uZXMgKi9cbi5jYXJkLWJvZHkgLnNjcm9sbC1jb250YWluZXI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICB3aWR0aDogOHB4O1xufVxuXG4uY2FyZC1ib2R5IC5zY3JvbGwtY29udGFpbmVyOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbi8qIEVuIHBhbnRhbGxhcyBwZXF1ZcOxYXMsIHNlIG9yZ2FuaXphIGVuIGNvbHVtbmFzICovXG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgICAuY2FyZC1wcm9maWxlLXN0YXRzIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAuYnVkZ2V0LWl0ZW0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgLyogQ2FkYSBlbGVtZW50byB0b21hIGVsIDEwMCUgZGVsIGFuY2hvIGVuIHBhbnRhbGxhcyBwZXF1ZcOxYXMgKi9cbiAgICB9XG59Il19 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AccountConstant, SettingsData } from 'src/app/entities/account-control';\nimport { TransactionFromGoogle } from 'src/app/services/google-services/google.service';\nimport { AccountControlManagementCategoriesComponent } from '../account-control-management-categories/account-control-management-categories.component';\nimport { AccountControlManagementAccountComponent } from '../account-control-management-account/account-control-management-account.component';\nimport { AccountControlManagementTransactionComponent } from '../account-control-management-transaction/account-control-management-transaction.component';\n\n@Component({\n  selector: 'app-account-control-list-transactions',\n  templateUrl: './account-control-list-transactions.component.html',\n  styleUrls: ['./account-control-list-transactions.component.css']\n})\nexport class AccountControlListTransactionsComponent implements OnInit {\n\n  visibleTransactions: TransactionFromGoogle[] = []; // Transacciones visibles en la vista\n  filteredTransactions: TransactionFromGoogle[] = []; // Transacciones filtradas con el input de búsqueda\n  pageSize = 10; // Número de transacciones por página\n  currentPage = 0; // Página actual\n\n  totalIncome = 0;\n  totalExpense = 0;\n  savingsGoal = 0;\n  isFiltering = false; // Variable para verificar si se está filtrando\n\n\n  private _transactions: TransactionFromGoogle[];\n  @Input()\n  set transactions(value: TransactionFromGoogle[]) {\n    if (value) {\n      this.onSettionsDataChange(value); // Llama a un método cuando el valor cambia\n    }\n  }\n\n  onSettionsDataChange(value: TransactionFromGoogle[]) {\n    this._transactions = JSON.parse(JSON.stringify(value));\n    if (value && value.length > 0) {\n      this.ngOnInit();\n    }\n  }\n\n  get transactions(): TransactionFromGoogle[] {\n    return this._transactions;\n  }\n\n  @Input()\n  settionsData: SettingsData;\n\n\n  @Output()\n  onFinish = new EventEmitter<void>();\n\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.filteredTransactions = [];\n    this.visibleTransactions = [];\n    this.currentPage = 0;\n    this.resetMetrics();\n    this.filteredTransactions = [...this.transactions]; // Inicialmente sin filtrar\n    this.loadMoreTransactions(); // Carga los primeros 30 registros\n  }\n\n  onScroll(event: any): void {\n    const element = event.target;\n    // Cambia a <= para asegurarte de activar el evento cerca del final\n    if (element.scrollHeight - element.scrollTop <= element.clientHeight + 1) {\n      this.loadMoreTransactions();\n    }\n  }\n\n\n  onSearch(event: Event): void {\n    const input = (event.target as HTMLInputElement).value;\n    this.isFiltering = input.length > 0;\n\n    if (this.isFiltering) {\n      this.filteredTransactions = this.transactions.filter(transaction =>\n        JSON.stringify(transaction).toLowerCase().includes(input.toLowerCase())\n      );\n      this.calculateMetrics(this.filteredTransactions); // Actualiza métricas\n      this.visibleTransactions = this.filteredTransactions.slice(0, 30); // Primera página de resultados\n    } else {\n      this.filteredTransactions = [...this.transactions];\n      this.visibleTransactions = this.transactions.slice(0, 30);\n      this.resetMetrics(); // Restaura métricas si no hay filtro\n    }\n  }\n\n  calculateMetrics(transactions: any[]): void {\n    this.totalIncome = transactions\n      .filter(transaction => transaction.type === AccountConstant.TRANSACTION_TYPE_INCOME)\n      .reduce((sum, transaction) => sum + transaction.amount, 0);\n    this.totalExpense = transactions\n      .filter(transaction => transaction.type === AccountConstant.TRANSACTION_TYPE_EXPENSE)\n      .reduce((sum, transaction) => sum + transaction.amount, 0);\n    this.savingsGoal = this.totalIncome - Math.abs(this.totalExpense);\n  }\n\n  resetMetrics(): void {\n    this.totalIncome = 0;\n    this.totalExpense = 0;\n    this.savingsGoal = 0;\n  }\n\n  // Carga la siguiente página de transacciones\n  loadMoreTransactions(): void {\n    const startIndex = this.currentPage * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    const newTransactions = this.filteredTransactions.slice(startIndex, endIndex);\n    this.visibleTransactions = [...this.visibleTransactions, ...newTransactions];\n    this.currentPage++;\n  }\n\n  openManagementCategories(transaction?: TransactionFromGoogle) {\n    const componentRef = this.modalService.open(AccountControlManagementCategoriesComponent, { size: 'xxl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementCategoriesComponent;\n    componentInstance.transaction = transaction;\n    componentInstance.settionsData = this.settionsData;\n    componentInstance.onFinish.subscribe((data) => {\n      this.onFinish.emit();\n      componentRef.close();\n    });\n  }\n\n  openCreateAccount(transaction?: TransactionFromGoogle) {\n    const componentRef = this.modalService.open(AccountControlManagementAccountComponent, { size: 'xl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementAccountComponent;\n    componentInstance.transaction = transaction;\n    componentInstance.onFinish.subscribe((data) => {\n      this.onFinish.emit();\n      componentRef.close();\n    });\n  }\n\n  openEditTransaction(transaction?: TransactionFromGoogle) {\n    const componentRef = this.modalService.open(AccountControlManagementTransactionComponent, { size: 'xl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementTransactionComponent;\n    componentInstance.transaction = transaction;\n    componentInstance.settingsData = this.settionsData;\n    componentInstance.onTransactionSave.subscribe((data) => {\n      this.onFinish.emit();\n      componentRef.close();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wtbWFuYWdlbWVudC1hY2NvdW50L2FjY291bnQtY29udHJvbC1tYW5hZ2VtZW50LWFjY291bnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Account } from 'src/app/entities/account-control';\nimport { AccountControlService } from 'src/app/services/account-control/account-control.service';\nimport { TransactionFromGoogle } from 'src/app/services/google-services/google.service';\n\n@Component({\n  selector: 'app-account-control-management-account',\n  templateUrl: './account-control-management-account.component.html',\n  styleUrls: ['./account-control-management-account.component.css']\n})\nexport class AccountControlManagementAccountComponent implements OnInit {\n  configuracionForm: FormGroup;\n\n  private _transaction: TransactionFromGoogle;\n\n  @Input()\n  set transaction(value: TransactionFromGoogle) {\n    this._transaction = value;\n    this.onTransactionChange(value); // Llama a un método cuando el valor cambia\n  }\n\n  get transaction(): TransactionFromGoogle {\n    return this._transaction;\n  }\n\n  public disableAccountId = false;\n\n  private _accountEdit: Account;\n\n  @Input()\n  set accountToEdit(value: Account) {\n    this._accountEdit = value;\n    this.onAccountChange(value); // Llama a un método cuando el valor cambia\n  }\n\n  get accountToEdit(): Account {\n    return this._accountEdit;\n  }\n\n  @Output()\n  onFinish = new EventEmitter<Account>();\n\n  constructor(private fb: FormBuilder, private accountService: AccountControlService) {\n    this.configuracionForm = this.fb.group({\n      accountId: ['', Validators.required],\n      accountName: ['', Validators.required],\n      accountDescription: ['', Validators.required],\n      accountBalance: [0, Validators.required],\n      accountIsPrincipal: [false],\n      submitted: [false]\n    });\n  }\n\n  onAccountChange(value: Account) {\n    if (value) {\n      this.disableAccountId = true;\n      this.configuracionForm.patchValue({ accountId: value.id });\n      this.configuracionForm.patchValue({ accountName: value.name });\n      this.configuracionForm.patchValue({ accountDescription: value.description });\n      this.configuracionForm.patchValue({ accountBalance: value.balance });\n      this.configuracionForm.patchValue({ accountIsPrincipal: value.isPrincipal });\n    }\n  }\n\n  onTransactionChange(value: TransactionFromGoogle) {\n    if (value) {\n      this._transaction.originalAccount = this._transaction.originalAccount.replace(\"*\", \"\");\n      this.configuracionForm.patchValue({ accountId: value.originalAccount });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmitInitial(): void {\n    this.configuracionForm.patchValue({ submitted: true });\n    if (this.configuracionForm.valid) {\n      const formValues = this.configuracionForm.value;\n      const account = {\n        id: formValues.accountId,\n        name: formValues.accountName,\n        description: formValues.accountDescription,\n        balance: formValues.accountBalance,\n        transactions: [],\n        lastBalance: 0,\n        balanceLastMonth: 0,\n        lastTransaction: null,\n        isPrincipal: formValues.accountIsPrincipal\n      };\n      this.accountService.saveAccount(account);\n      this.onFinish.emit(account);\n    }\n  }\n}\n","export default \".keywords-container {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 5px;\\n    padding: 5px 0;\\n}\\n\\n.keyword-badge {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    gap: 3px;\\n    margin-bottom: 5px;\\n}\\n\\n.is-invalid {\\n    border-color: red;\\n}\\n\\n.text-danger {\\n    color: red;\\n}\\n\\n.table-responsive {\\n    overflow-x: auto;\\n    /* Habilita el desplazamiento horizontal */\\n    -webkit-overflow-scrolling: touch;\\n    /* Mejora la experiencia de desplazamiento en iOS */\\n}\\n\\n.table-container {\\n    width: 100%;\\n    /* Asegura que el contenedor ocupe el 100% del espacio disponible */\\n}\\n\\n.keywords-container {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n    /* Coloca los badges en varias líneas */\\n    gap: 4px;\\n    max-width: 250px;\\n    /* Opcional: Ajusta el ancho máximo para las keywords */\\n}\\n\\n.btn-sm.bg-gradient-dark {\\n    margin-right: 4px;\\n    /* Espacio entre badges */\\n}\\n\\n.table-col-nombre {\\n    min-width: 150px;\\n    /* Define el ancho mínimo deseado */\\n}\\n\\n/* Estilo para filas pares */\\n\\ntable.table tbody tr:nth-child(even) {\\n    background-color: #f9f9f9;\\n    /* Color gris claro */\\n}\\n\\n.card-profile-stats {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 1rem;\\n    /* Añade espacio entre los elementos */\\n}\\n\\n.budget-item {\\n    min-width: 120px;\\n    /* Ancho mínimo para cada elemento */\\n    padding: 0.5rem;\\n    -webkit-box-flex: 1;\\n            flex: 1 1 30%;\\n    /* Los elementos ocupan 30% del ancho en pantallas grandes */\\n}\\n\\n/* En pantallas pequeñas, se organiza en columnas */\\n\\n@media (max-width: 576px) {\\n    .card-profile-stats {\\n        -webkit-box-orient: vertical;\\n        -webkit-box-direction: normal;\\n                flex-direction: column;\\n        -webkit-box-align: center;\\n                align-items: center;\\n    }\\n\\n    .budget-item {\\n        width: 100%;\\n        /* Cada elemento toma el 100% del ancho en pantallas pequeñas */\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC1jb250cm9sL2FjY291bnQtY29udHJvbC1tYW5hZ2VtZW50LWNhdGVnb3JpZXMvYWNjb3VudC1jb250cm9sLW1hbmFnZW1lbnQtY2F0ZWdvcmllcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IsZUFBZTtJQUNmLFFBQVE7SUFDUixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IseUJBQW1CO1lBQW5CLG1CQUFtQjtJQUNuQixRQUFRO0lBQ1Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLDBDQUEwQztJQUMxQyxpQ0FBaUM7SUFDakMsbURBQW1EO0FBQ3ZEOztBQUVBO0lBQ0ksV0FBVztJQUNYLG1FQUFtRTtBQUN2RTs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLGVBQWU7SUFDZix1Q0FBdUM7SUFDdkMsUUFBUTtJQUNSLGdCQUFnQjtJQUNoQix1REFBdUQ7QUFDM0Q7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1DQUFtQztBQUN2Qzs7QUFFQSw0QkFBNEI7O0FBQzVCO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLGVBQWU7SUFDZixTQUFTO0lBQ1Qsc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG9DQUFvQztJQUNwQyxlQUFlO0lBQ2YsbUJBQWE7WUFBYixhQUFhO0lBQ2IsNERBQTREO0FBQ2hFOztBQUVBLG1EQUFtRDs7QUFDbkQ7SUFDSTtRQUNJLDRCQUFzQjtRQUF0Qiw2QkFBc0I7Z0JBQXRCLHNCQUFzQjtRQUN0Qix5QkFBbUI7Z0JBQW5CLG1CQUFtQjtJQUN2Qjs7SUFFQTtRQUNJLFdBQVc7UUFDWCwrREFBK0Q7SUFDbkU7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wtbWFuYWdlbWVudC1jYXRlZ29yaWVzL2FjY291bnQtY29udHJvbC1tYW5hZ2VtZW50LWNhdGVnb3JpZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5rZXl3b3Jkcy1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGdhcDogNXB4O1xuICAgIHBhZGRpbmc6IDVweCAwO1xufVxuXG4ua2V5d29yZC1iYWRnZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogM3B4O1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLmlzLWludmFsaWQge1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xufVxuXG4udGV4dC1kYW5nZXIge1xuICAgIGNvbG9yOiByZWQ7XG59XG5cbi50YWJsZS1yZXNwb25zaXZlIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIC8qIEhhYmlsaXRhIGVsIGRlc3BsYXphbWllbnRvIGhvcml6b250YWwgKi9cbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gICAgLyogTWVqb3JhIGxhIGV4cGVyaWVuY2lhIGRlIGRlc3BsYXphbWllbnRvIGVuIGlPUyAqL1xufVxuXG4udGFibGUtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAvKiBBc2VndXJhIHF1ZSBlbCBjb250ZW5lZG9yIG9jdXBlIGVsIDEwMCUgZGVsIGVzcGFjaW8gZGlzcG9uaWJsZSAqL1xufVxuXG4ua2V5d29yZHMtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAvKiBDb2xvY2EgbG9zIGJhZGdlcyBlbiB2YXJpYXMgbMOtbmVhcyAqL1xuICAgIGdhcDogNHB4O1xuICAgIG1heC13aWR0aDogMjUwcHg7XG4gICAgLyogT3BjaW9uYWw6IEFqdXN0YSBlbCBhbmNobyBtw6F4aW1vIHBhcmEgbGFzIGtleXdvcmRzICovXG59XG5cbi5idG4tc20uYmctZ3JhZGllbnQtZGFyayB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gICAgLyogRXNwYWNpbyBlbnRyZSBiYWRnZXMgKi9cbn1cblxuLnRhYmxlLWNvbC1ub21icmUge1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgLyogRGVmaW5lIGVsIGFuY2hvIG3DrW5pbW8gZGVzZWFkbyAqL1xufVxuXG4vKiBFc3RpbG8gcGFyYSBmaWxhcyBwYXJlcyAqL1xudGFibGUudGFibGUgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICAgIC8qIENvbG9yIGdyaXMgY2xhcm8gKi9cbn1cblxuLmNhcmQtcHJvZmlsZS1zdGF0cyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgZ2FwOiAxcmVtO1xuICAgIC8qIEHDsWFkZSBlc3BhY2lvIGVudHJlIGxvcyBlbGVtZW50b3MgKi9cbn1cblxuLmJ1ZGdldC1pdGVtIHtcbiAgICBtaW4td2lkdGg6IDEyMHB4O1xuICAgIC8qIEFuY2hvIG3DrW5pbW8gcGFyYSBjYWRhIGVsZW1lbnRvICovXG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGZsZXg6IDEgMSAzMCU7XG4gICAgLyogTG9zIGVsZW1lbnRvcyBvY3VwYW4gMzAlIGRlbCBhbmNobyBlbiBwYW50YWxsYXMgZ3JhbmRlcyAqL1xufVxuXG4vKiBFbiBwYW50YWxsYXMgcGVxdWXDsWFzLCBzZSBvcmdhbml6YSBlbiBjb2x1bW5hcyAqL1xuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gICAgLmNhcmQtcHJvZmlsZS1zdGF0cyB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmJ1ZGdldC1pdGVtIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIC8qIENhZGEgZWxlbWVudG8gdG9tYSBlbCAxMDAlIGRlbCBhbmNobyBlbiBwYW50YWxsYXMgcGVxdWXDsWFzICovXG4gICAgfVxufSJdfQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BudgetSettings, Category, SettingsData, AccountConstant } from 'src/app/entities/account-control';\nimport { AccountControlService } from 'src/app/services/account-control/account-control.service';\nimport { TransactionFromGoogle } from 'src/app/services/google-services/google.service';\n\n@Component({\n  selector: 'app-account-control-management-categories',\n  templateUrl: './account-control-management-categories.component.html',\n  styleUrls: ['./account-control-management-categories.component.css']\n})\nexport class AccountControlManagementCategoriesComponent implements OnInit {\n\n  constructor(private accountService: AccountControlService) { }\n\n\n  private _transaction: TransactionFromGoogle;\n\n  @Input()\n  set transaction(value: TransactionFromGoogle) {\n    this._transaction = value;\n    this.onTransactionChange(value); // Llama a un método cuando el valor cambia\n  }\n\n  onTransactionChange(value: TransactionFromGoogle) {\n    if (value) {\n      if (value.type === AccountConstant.TRANSACTION_TYPE_INCOME || value.type === AccountConstant.TRANSACTION_TYPE_EXPENSE) {\n        this.activeTab = value.type;\n        this.addNewCategory();\n      }\n    }\n  }\n\n  get transaction(): TransactionFromGoogle {\n    return this._transaction;\n  }\n\n  private _settionsData: SettingsData;\n  @Input()\n  set settionsData(value: SettingsData) {\n    if (value) {\n      this._settionsData = JSON.parse(JSON.stringify(value));\n      this.onSettionsDataChange(value); // Llama a un método cuando el valor cambia\n    }\n  }\n\n  onSettionsDataChange(value: SettingsData) {\n    if (value && value.budgetSettings) {\n      this.categories = value.budgetSettings.categories.map(t => {\n        return { ...t, newKeyword: '' };\n      });\n      this.budgetSettings = value.budgetSettings;\n      if (this._transaction) {\n        this.onTransactionChange(this._transaction);\n      }\n    }\n  }\n\n  get settionsData(): SettingsData {\n    return this._settionsData;\n  }\n\n  accountsId(): string[] {\n    return this.settionsData?.accounts?.map(a => a.id) ?? [];\n  }\n\n  @Output()\n  onFinish = new EventEmitter<BudgetSettings>();\n\n  ngOnInit(): void {\n  }\n\n  activeTab: 'income' | 'expense' = 'income';\n  newKeyword: string = '';\n  categories: CategoryInComponent[] = [];\n  budgetSettings: BudgetSettings = {\n    categories: [],\n    totalIncome: 0,\n    totalExpense: 0,\n    savingsGoal: 0\n  };\n\n  setActiveTab(type: 'income' | 'expense') {\n    this.activeTab = type;\n  }\n\n  get categoriesOfCurrentTab(): Category[] {\n    return this.getCategoriesByType(this.activeTab);\n  }\n\n  getCategoriesByType(type: 'income' | 'expense') {\n    return this.categories.filter(category =>\n      category.type === (type === 'income' ? AccountConstant.TRANSACTION_TYPE_INCOME : AccountConstant.TRANSACTION_TYPE_EXPENSE)).sort((a, b) => a.order - b.order);\n  }\n\n  addNewCategory() {\n    let groupOfOrder = this.getGroupOfOrder(this.activeTab);\n    const newCategory: CategoryInComponent = {\n      id: `${this.activeTab}_${Date.now()}`,\n      name: '',\n      keyWords: [],\n      type: this.activeTab === 'income' ? AccountConstant.TRANSACTION_TYPE_INCOME : AccountConstant.TRANSACTION_TYPE_EXPENSE,\n      budget: 0,\n      accountId: '',\n      order: groupOfOrder + this.getCategoriesByType(this.activeTab).length,\n      newKeyword: ''  // Añade la propiedad temporal de entrada de keyword\n    };\n    this.categories.push(newCategory);\n    this.updateBudgetSummary();\n  }\n\n  private getGroupOfOrder(type: string) {\n    let groupOfOrder = 1000;\n    if (type === AccountConstant.TRANSACTION_TYPE_INCOME) {\n      groupOfOrder = 2000;\n    }\n    return groupOfOrder;\n  }\n\n  addKeyword(category: CategoryInComponent) {\n    if (category.newKeyword && !category.keyWords.includes(category.newKeyword)) {\n      category.keyWords.push(category.newKeyword.trim());\n      category.newKeyword = ''; // Limpiar el input de esta fila específica\n      this.updateBudgetSummary();\n    }\n  }\n\n  // Mover una categoría hacia arriba\n  moveCategoryUp(index: number): void {\n    if (index > 0) {\n      const indexReal = this.getIndexReal(index);\n      [this.categories[indexReal - 1], this.categories[indexReal]] = [this.categories[indexReal], this.categories[indexReal - 1]];\n      const groupOfOrder = this.getGroupOfOrder(this.categories[indexReal].type);\n      this.categories[indexReal].order = groupOfOrder + indexReal;\n      this.categories[indexReal - 1].order = groupOfOrder + indexReal - 1;\n    }\n  }\n\n\n\n  // Mover una categoría hacia abajo\n  moveCategoryDown(index: number): void {\n    if (index < this.getCategoriesByType(this.activeTab).length - 1) {\n      const indexReal = this.getIndexReal(index);\n      [this.categories[indexReal + 1], this.categories[indexReal]] = [this.categories[indexReal], this.categories[indexReal + 1]];\n      const groupOfOrder = this.getGroupOfOrder(this.categories[indexReal].type);\n      this.categories[indexReal].order = groupOfOrder + indexReal;\n      this.categories[indexReal + 1].order = groupOfOrder + indexReal + 1;\n    }\n  }\n\n  private getIndexReal(index: number): number {\n    if (this.activeTab === AccountConstant.TRANSACTION_TYPE_INCOME) {\n      return index + (this.getCategoriesByType(AccountConstant.TRANSACTION_TYPE_INCOME).length);\n    }\n    return index;\n  }\n\n  removeKeyword(category: CategoryInComponent, keyword: string) {\n    category.keyWords = category.keyWords.filter(k => k !== keyword);\n    this.updateBudgetSummary();\n  }\n\n  removeCategory(category: CategoryInComponent) {\n    this.categories = this.categories.filter(k => k.id !== category.id);\n    this.updateBudgetSummary();\n  }\n\n  saveAllCategories() {\n    // Lógica para guardar todas las categorías en la base de datos o backend\n    this.updateBudgetSummary();\n    this.accountService.saveBudgetSettings(this.budgetSettings);\n    this.onFinish.emit(this.budgetSettings);\n  }\n\n  updateBudgetSummary() {\n    this.categories.forEach(category => {\n      let groupOfOrder = this.getGroupOfOrder(category.type);\n      category.order = groupOfOrder + this.categories.indexOf(category);\n      category.id = `${category.type}_${category.name}`.replace(/ /g, \"\").toLowerCase();\n    });\n    this.budgetSettings.categories = this.categories;\n    this.budgetSettings.totalIncome = this.budgetSettings.categories\n      .filter(c => c.type === AccountConstant.TRANSACTION_TYPE_INCOME)\n      .reduce((sum, category) => sum + category.budget, 0);\n\n    this.budgetSettings.totalExpense = this.budgetSettings.categories\n      .filter(c => c.type === AccountConstant.TRANSACTION_TYPE_EXPENSE)\n      .reduce((sum, category) => sum + category.budget, 0);\n    this.budgetSettings.savingsGoal = this.budgetSettings.totalIncome - this.budgetSettings.totalExpense;\n  }\n\n  isFormValid() {\n    return this.categories.every(category =>\n      category.name &&\n      category.type &&\n      category.keyWords.length > 0\n    );\n  }\n\n  isFormValidForCurrentTab(type: 'income' | 'expense') {\n    return this.getCategoriesByType(type).every(category =>\n      category.name &&\n      category.type &&\n      category.keyWords.length > 0\n    );\n  }\n}\n\nexport interface CategoryInComponent extends Category {\n  newKeyword: string;\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wtbWFuYWdlbWVudC10cmFuc2FjdGlvbi9hY2NvdW50LWNvbnRyb2wtbWFuYWdlbWVudC10cmFuc2FjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountConstant, Category, SettingsData, Transaction } from 'src/app/entities/account-control';\nimport { AccountControlService } from 'src/app/services/account-control/account-control.service';\n\n@Component({\n  selector: 'app-account-control-management-transaction',\n  templateUrl: './account-control-management-transaction.component.html',\n  styleUrls: ['./account-control-management-transaction.component.css']\n})\nexport class AccountControlManagementTransactionComponent implements OnInit {\n  transactionForm: FormGroup;\n  isSubmitted = false;\n\n  @Input() transaction: Transaction;\n  @Input() settingsData: SettingsData;\n  @Output() onTransactionSave = new EventEmitter<Transaction>();\n\n  public get categories(): Category[] {\n    if (this.transactionForm.value) {\n      const typeTransaction = this.transactionForm.value.type;\n      return this.settingsData.budgetSettings.categories.filter(t => t.type === typeTransaction);\n    }\n    return this.settingsData?.budgetSettings?.categories ?? [];\n  }\n\n  incomeType = AccountConstant.TRANSACTION_TYPE_INCOME;\n  expenseType = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n\n  constructor(private fb: FormBuilder, private accountService: AccountControlService) {\n    this.transactionForm = this.fb.group({\n      originalAccount: ['', Validators.required],\n      amount: [0, [Validators.required, Validators.min(0.01)]],\n      date: [this.convertToColDate(new Date()).toISOString().substring(0, 10), Validators.required],\n      description: [''],\n      categoryId: [''],//no es requerido porque las transacciones no deberian tener categorias o bueno es a decision del usuario\n      type: [AccountConstant.TRANSACTION_TYPE_EXPENSE, Validators.required],\n      targetAccountId: [''],\n      isProcessed: [false],\n      originalBody: [''],\n      canProcessed: [true]\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.transaction) {\n      this.loadTransactionData();\n    }\n  }\n\n  loadTransactionData(): void {\n    console.log(new Date(this.transaction.date));\n    console.log(this.convertToColDate(new Date(this.transaction.date)));\n    console.log(this.convertToColDate(new Date(this.transaction.date)).toISOString());\n    console.log(this.convertToColDate(new Date(this.transaction.date)).toISOString().substring(0, 10));\n    this.transactionForm.patchValue({\n      originalAccount: this.transaction.originalAccount,\n      amount: this.transaction.type == AccountConstant.TRANSACTION_TYPE_EXPENSE ? -this.transaction.amount : this.transaction.amount,\n      date: this.convertToColDate(new Date(this.transaction.date)).toISOString().substring(0, 10),\n      description: this.transaction.description,\n      categoryId: this.transaction.categoryId,\n      type: this.transaction.type,\n      targetAccountId: this.transaction.targetAccountId,\n      isProcessed: this.transaction.isProcessed,\n      originalBody: this.transaction.originalBody,\n      canProcessed: this.transaction.canProcessed\n    });\n  }\n\n  private convertToColDate(date: Date): Date {\n    date.setHours(date.getHours() - 5);\n    return date;\n  }\n\n  private convertToUTCDate(date: Date): Date {\n    const newDate = new Date(date);\n    newDate.setHours(newDate.getHours() + 5);\n    return newDate;\n  }\n\n\n  onSubmit(): void {\n    this.isSubmitted = true;\n    if (this.transactionForm.valid) {\n      const formValues = this.transactionForm.value;\n      const transactionToSave: Transaction = {\n        id: this.transaction ? this.transaction.id : '',\n        ...formValues\n      };\n      if (this.transaction) {\n        this.transaction.date = new Date(this.transaction.date);\n      }\n      transactionToSave.date = this.convertToUTCDate(new Date(transactionToSave.date));\n      if (this.transaction && this.transaction.date && this.isSameDate(transactionToSave.date, this.transaction.date)) {\n        transactionToSave.date = this.transaction.date;\n      }\n      if (transactionToSave.categoryId) {\n        const category = this.settingsData.budgetSettings.categories.find(c => c.id == transactionToSave.categoryId);\n        if (category && !transactionToSave.description.toLowerCase().includes(category.name.toLowerCase())) {\n          if (!transactionToSave.id) {\n            transactionToSave.description = transactionToSave.description ? `${transactionToSave.description} = ${category.name}` : category.name;\n          } else {\n            transactionToSave.description = transactionToSave.description ? `${transactionToSave.description}` : category.name;\n          }\n        }\n      }\n      this.accountService.saveTransaction(transactionToSave);\n      this.onTransactionSave.emit(transactionToSave);\n    }\n  }\n\n  private isSameDate(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wtdHJhbnNhY3Rpb24tY2FyZC9hY2NvdW50LWNvbnRyb2wtdHJhbnNhY3Rpb24tY2FyZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TransactionFromGoogle } from 'src/app/services/google-services/google.service';\n\n@Component({\n  selector: 'app-account-control-transaction-card',\n  templateUrl: './account-control-transaction-card.component.html',\n  styleUrls: ['./account-control-transaction-card.component.css']\n})\nexport class AccountControlTransactionCardComponent implements OnInit {\n  @Input()\n  public transaction: TransactionFromGoogle;\n\n  @Input()\n  public showOriginalBody: boolean = false;\n\n  @Input()\n  public showButtons: boolean = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Output()\n  onRegisterCategory = new EventEmitter<TransactionFromGoogle>();\n\n  @Output()\n  onRegisterAccount = new EventEmitter<TransactionFromGoogle>();\n\n  @Output()\n  onEditTransaction = new EventEmitter<TransactionFromGoogle>();\n\n  openManagementCategories() {\n    this.onRegisterCategory.emit(this.transaction);\n  }\n\n  openCreateAccount() {\n    this.onRegisterAccount.emit(this.transaction);\n  }\n\n  openEditTransaction() {\n    this.onEditTransaction.emit(this.transaction);\n  }\n\n\n}\n","export default \"/* Personalizar el estilo de la barra de scroll en el contenedor de transacciones */\\n.card-body .scroll-container::-webkit-scrollbar {\\n    width: 8px;\\n}\\n.card-body .scroll-container::-webkit-scrollbar-thumb {\\n    background-color: #aaa;\\n    border-radius: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWNjb3VudC1jb250cm9sL2FjY291bnQtY29udHJvbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1GQUFtRjtBQUNuRjtJQUNJLFVBQVU7QUFDZDtBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQtY29udHJvbC9hY2NvdW50LWNvbnRyb2wuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFBlcnNvbmFsaXphciBlbCBlc3RpbG8gZGUgbGEgYmFycmEgZGUgc2Nyb2xsIGVuIGVsIGNvbnRlbmVkb3IgZGUgdHJhbnNhY2Npb25lcyAqL1xuLmNhcmQtYm9keSAuc2Nyb2xsLWNvbnRhaW5lcjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgIHdpZHRoOiA4cHg7XG59XG5cbi5jYXJkLWJvZHkgLnNjcm9sbC1jb250YWluZXI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbn0iXX0= */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { GoogleService, TransactionFromGoogle, UserGoogle } from 'src/app/services/google-services/google.service';\nimport { BaseComponent } from '../common/base-component';\nimport { AccountControlManagementCategoriesComponent } from './account-control-management-categories/account-control-management-categories.component';\nimport { AccountControlManagementAccountComponent } from './account-control-management-account/account-control-management-account.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AccountControlService } from 'src/app/services/account-control/account-control.service';\nimport { Account, SettingsData } from 'src/app/entities/account-control';\nimport { AccountControlManagementTransactionComponent } from './account-control-management-transaction/account-control-management-transaction.component';\n\n@Component({\n  selector: 'app-account-control',\n  templateUrl: './account-control.component.html',\n  styleUrls: ['./account-control.component.css']\n})\nexport class AccountControlComponent extends BaseComponent implements OnInit, OnDestroy {\n\n\n  public transactions: TransactionFromGoogle[] = [];\n  public accounts: Account[] = [];\n\n  public settionsData: SettingsData;\n  public showAllAccounts: boolean = false;\n  public heritage: number = 0;\n\n  constructor(googleService: GoogleService, private modalService: NgbModal, private accountService: AccountControlService) {\n    super(googleService)\n  }\n\n\n  async initialiceComponent(): Promise<void> {\n    console.log('Inicializando componente...');\n    this.settionsData = this.accountService.getTransactions(this.settionsData);\n    if (this.isLogged()) {\n      this.settionsData = await this.accountService.syncTransactions(this.configFromGoogle);\n    }\n    console.log('Componente inicializado...', this.settionsData);\n    this.transactions = this.settionsData.transactions;\n    this.filterAccounts();\n  }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.detroy();\n  }\n\n  openEditAccount(account: Account) {\n    const componentRef = this.modalService.open(AccountControlManagementAccountComponent, { size: 'xl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementAccountComponent;\n    componentInstance.accountToEdit = account;\n    componentInstance.onFinish.subscribe((data) => {\n      this.initialiceComponent();\n      componentRef.close();\n    });\n  }\n\n  openCreateAccount(transaction?: TransactionFromGoogle) {\n    const componentRef = this.modalService.open(AccountControlManagementAccountComponent, { size: 'xl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementAccountComponent;\n    componentInstance.transaction = transaction;\n    componentInstance.onFinish.subscribe((data) => {\n      this.initialiceComponent();\n      componentRef.close();\n    });\n  }\n\n  openManagementCategories(transaction?: TransactionFromGoogle) {\n    const componentRef = this.modalService.open(AccountControlManagementCategoriesComponent, { size: 'xxl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementCategoriesComponent;\n    componentInstance.transaction = transaction;\n    componentInstance.settionsData = this.settionsData;\n    componentInstance.onFinish.subscribe((data) => {\n      this.initialiceComponent();\n      componentRef.close();\n    });\n  }\n\n  openCreateTransaction(transaction?: TransactionFromGoogle) {\n    const componentRef = this.modalService.open(AccountControlManagementTransactionComponent, { size: 'xl' });\n    const componentInstance = componentRef.componentInstance as AccountControlManagementTransactionComponent;\n    componentInstance.transaction = transaction;\n    componentInstance.settingsData = this.settionsData;\n    componentInstance.onTransactionSave.subscribe((data) => {\n      this.settionsData = null;\n      this.transactions = [];\n      this.initialiceComponent();\n      componentRef.close();\n    });\n  }\n\n  public filterAccounts(): void {\n    if (this.showAllAccounts) {\n      this.accounts = this.settionsData.accounts;\n    } else {\n      this.accounts = this.settionsData.accounts.filter(a => a.isPrincipal);\n    }\n    this.heritage = this.accounts.reduce((sum, acc) => sum + acc.balance, 0);\n  }\n\n  public getPercentageChange(account: Account): number {\n    if (account.lastBalance === 0) {\n      // Evita la división por cero, devuelve 0 o alguna otra indicación\n      return 0;\n    }\n    const change = ((account.balance - account.lastBalance) / account.lastBalance) * 100;\n    return change;\n  }\n\n  public deleteData(): void {\n    this.accountService.deleteData();\n    window.location.reload();\n  }\n\n  async syncGoogleDrive(): Promise<void> {\n    await this.accountService.syncWithGoogleDrive(this.settionsData, true);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JyaWVmY2FzZXMvYnJpZWZjYXNlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GALLERY_CONF, GALLERY_IMAGE, NgxImageGalleryComponent } from 'ngx-image-gallery';\nimport { Summary } from 'src/app/entities/summary';\nimport { SummaryResumeService } from 'src/app/services/summary-resume/summary-resume.service';\n\n@Component({\n  selector: 'app-briefcases',\n  templateUrl: './briefcases.component.html',\n  styleUrls: ['./briefcases.component.css']\n})\nexport class BriefcasesComponent implements OnInit {\n\n  constructor(private _summaryResumeService: SummaryResumeService) { }\n  public Summary: Summary;\n  ngOnInit() {\n    this.getData();\n  }\n\n  private getData(): void {\n    this._summaryResumeService.GetProfile().subscribe(data => {\n      this.Summary = data;\n      let contador=0;\n      this.images=[];\n      this.Summary.Briefcases.forEach(Briefcase=> {\n        Briefcase.Images.forEach(image=> {\n          image.Index=++contador;\n          this.images.push({\n            url: \"config/\"+image.Path, \n            altText: 'image.Path', \n            title: 'image.Path',\n            thumbnailUrl: \"config/\"+image.Path\n          })\n        });\n      });\n    });\n  }\n\n  @ViewChild(NgxImageGalleryComponent) ngxImageGallery: NgxImageGalleryComponent;\n  \n  // gallery configuration\n  conf: GALLERY_CONF = {\n    imageOffset: '0px',\n    showDeleteControl: false,\n    showImageTitle: false,\n  };\n    \n  // gallery images\n  images: GALLERY_IMAGE[] = [\n    {\n      url: \"https://images.pexels.com/photos/669013/pexels-photo-669013.jpeg?w=1260\", \n      altText: 'woman-in-black-blazer-holding-blue-cup', \n      title: 'woman-in-black-blazer-holding-blue-cup',\n      thumbnailUrl: \"https://images.pexels.com/photos/669013/pexels-photo-669013.jpeg?w=60\"\n    },\n    {\n      url: \"https://images.pexels.com/photos/669006/pexels-photo-669006.jpeg?w=1260\", \n      altText: 'two-woman-standing-on-the-ground-and-staring-at-the-mountain', \n      extUrl: 'https://www.pexels.com/photo/two-woman-standing-on-the-ground-and-staring-at-the-mountain-669006/',\n      thumbnailUrl: \"https://images.pexels.com/photos/669006/pexels-photo-669006.jpeg?w=60\"\n    },\n  ];\n \n  // METHODS\n  // open gallery\n  openGallery(index: number = 0) {\n    this.ngxImageGallery.open(index);\n  }\n    \n  // close gallery\n  closeGallery() {\n    this.ngxImageGallery.close();\n  }\n    \n  // set new active(visible) image in gallery\n  newImage(index: number = 0) {\n    this.ngxImageGallery.setActiveImage(index);\n  }\n    \n  // next image in gallery\n  nextImage(index: number = 0) {\n    this.ngxImageGallery.next();\n  }\n    \n  // prev image in gallery\n  prevImage(index: number = 0) {\n    this.ngxImageGallery.prev();\n  }\n    \n  /**************************************************/\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2J1c2luZXNzLWNvbnRyb2wtc2V0dGluZ3MvYnVzaW5lc3MtY29udHJvbC1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Summary } from 'src/app/entities/summary';\nimport { SummaryResumeService } from 'src/app/services/summary-resume/summary-resume.service';\nimport { Router } from '@angular/router';\nimport { Contratante, Contrato, Configuracion, Bien, Concepto, Comprobante } from 'src/app/entities/business-control';\nimport { BusinessControlService } from 'src/app/services/business-control/business-control.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { GoogleService, UserGoogle } from 'src/app/services/google-services/google.service';\nimport { toJSDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\nimport { Amortizacion, CreditService, ResponseAmortizacion } from 'src/app/services/credit/credit.service';\n@Component({\n  selector: 'app-business-control-settings',\n  templateUrl: './business-control-settings.component.html',\n  styleUrls: ['./business-control-settings.component.css']\n})\nexport class BusinessControlSettingsComponent implements OnInit {\n  configuracionForm: FormGroup;\n  config: Configuracion | null = null;\n  bienform: FormGroup;\n  contratoForm: FormGroup;\n  isConfigured = false;\n  bienes: Bien[] = [];\n  selectedBien: Bien | null = null;\n  selectedBienId: string;\n  registrarNuevaBien = false;\n  registrarNuevoContrato = false;\n  tipoBien: 'Arrendamiento' | 'Credito' = 'Arrendamiento';\n  @ViewChild('fileInput') fileInput: ElementRef<HTMLInputElement>;\n  userLogger: UserGoogle;\n  responseAmortizacion: ResponseAmortizacion;\n\n  constructor(private creditService: CreditService, private toastr: ToastrService, private googleService: GoogleService, private fb: FormBuilder, private bussinessServices: BusinessControlService) {\n    this.configuracionForm = this.fb.group({\n      contratanteCedula: ['', Validators.required],\n      contratanteNombre: ['', Validators.required],\n      contratanteTelefono: ['', Validators.required],\n      contratanteDireccion: ['', Validators.required],\n      contratanteEmail: ['', Validators.required],\n      contratanteMostrarDatosPersonales: [false],\n      submitted: [false]\n    });\n    this.bienform = this.fb.group({\n      direccion: ['', Validators.required],\n      barrio: ['', Validators.required],\n      ciudad: ['', Validators.required],\n      submitted: [false]\n    });\n    this.contratoForm = this.fb.group({\n      contratoNombre: ['', Validators.required],\n      contratoCedula: ['', Validators.required],\n      contratoTelefono: ['', Validators.required],\n      contratoMensualidad: [0],\n      contratoValorDeposito: [0],\n      contratoTasaEM: [0],\n      contratoValorCredito: [0],\n      contratoPlazoMeses: [0],\n      contratoTarifaFija: [0],\n      contratoFechaInicio: ['', Validators.required],\n      contratoObservacion: [''],\n      submitted: [false]\n    });\n  }\n\n  ngOnInit(): void {\n    this.initialiceComponent();\n    setTimeout(() => {\n      this.getUserLogget();\n    }, 300);\n    this.getUserLogget();\n  }\n\n  private initialiceComponent() {\n    this.isConfigured = false;\n    this.selectedBien = null;\n    this.responseAmortizacion = null;\n    this.config = this.bussinessServices.getConfiguracion();\n    if (this.config) {\n      this.isConfigured = true;\n      this.bienes = this.config.bienes;\n      const bienId = this.bussinessServices.getSelectedId() ?? this.bienes[0]?.id;\n      this.tipoBien = 'Arrendamiento';\n      this.onBienSelect(bienId);\n      if (!this.selectedBien || !this.selectedBien.contratoActivo) {\n        this.registrarNuevoContrato = true;\n        return;\n      }\n    }\n    this.configuracionForm.reset();\n    this.bienform.reset();\n    this.contratoForm.reset();\n  }\n\n  Login(): void {\n    this.googleService.signIn().then(config => {\n      this.userLogger = config?.user;\n      if (config.data) {\n        this.ngOnInit();\n      }\n    })\n  }\n\n  Logout(): void {\n    this.googleService.signOut();\n    this.userLogger = null;\n  }\n\n\n  getUserLogget(): void {\n    this.googleService.getUser().then(async config => {\n      this.userLogger = config?.user;\n    })\n  }\n\n  onSubmitInitial(): void {\n    this.configuracionForm.patchValue({ submitted: true });\n    if (this.configuracionForm.valid) {\n      const formValues = this.configuracionForm.value;\n\n      const newContratante: Contratante = {\n        nombre: formValues.contratanteNombre,\n        identificacion: formValues.contratanteCedula,\n        telefono: formValues.contratanteTelefono,\n        direccion: formValues.contratanteDireccion,\n        email: formValues.contratanteEmail,\n        mostrarDatosPersonales: formValues.contratanteMostrarDatosPersonales,\n        firmaDigital: ''\n      };\n\n      if (!this.isConfigured) {\n        this.isConfigured = true;\n        this.registrarNuevaBien = true;\n        this.bussinessServices.setContratante(newContratante);\n        this.ngOnInit();\n      } else {\n        this.toastr.info(\"Ya configuraste el sistema!\", \"Business Control\");\n      }\n    }\n  }\n\n  onSubmitBien(): void {\n    this.bienform.patchValue({ submitted: true });\n    if (this.bienform.valid) {\n      const formValues = this.bienform.value;\n      const newBien: Bien = {\n        id: '',\n        direccion: formValues.direccion,\n        barrio: formValues.barrio,\n        ciudad: formValues.ciudad,\n        tipo: this.tipoBien,\n        contratos: [],\n        comprobantes: [],\n        serviciosPublicos: []\n      };\n      this.registrarNuevaBien = false;\n      this.registrarNuevoContrato = true;\n      this.bussinessServices.addBien(newBien);\n      this.ngOnInit();\n    }\n  }\n\n  onSubmitContrato(): void {\n    this.contratoForm.patchValue({ submitted: true });\n    if (this.contratoForm.valid) {\n      const formValues = this.contratoForm.value;\n\n      const newContrato: Contrato = {\n        tipoDocumento: 'CC',\n        id: formValues.contratoCedula,\n        nombre: formValues.contratoNombre,\n        identificacion: formValues.contratoCedula,\n        telefono: formValues.contratoTelefono,\n        observacion: formValues.contratoObservacion,\n        mensualidad: formValues.contratoMensualidad,\n        valorDeposito: formValues.contratoValorDeposito,\n        inicio: formValues.contratoFechaInicio,\n        tipo: this.selectedBien.tipo,\n        activo: true,\n        plazoMeses: formValues.contratoPlazoMeses,\n        tasaEM: formValues.contratoTasaEM,\n        valorCredito: formValues.contratoValorCredito,\n        tarifaFija: formValues.contratoTarifaFija,\n      };\n      this.config.conceptos = this.getConceptos(newContrato);\n      this.bussinessServices.saveConfiguracion(this.config);\n      this.bussinessServices.addContrato(this.selectedBien.id, newContrato);\n      this.ngOnInit();\n    }\n  }\n\n  private getConceptos(contrato: Contrato): Concepto[] {\n    const conceptoCreditos: Concepto[] = [\n      {\n        descripcion: BusinessControlService.CONCEPTO_INTERESES,\n        valor: 0,\n        tipo: BusinessControlService.TIPO_BIEN_CREDITO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_CAPITAL,\n        valor: 0,\n        tipo: BusinessControlService.TIPO_BIEN_CREDITO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_TARIFA_FIJA,\n        valor: contrato.valorDeposito,\n        tipo: BusinessControlService.TIPO_BIEN_CREDITO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_ABONO_CAPITAL,\n        valor: 0,\n        tipo: BusinessControlService.TIPO_BIEN_CREDITO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_OTRO,\n        valor: 0,\n        tipo: BusinessControlService.TIPO_BIEN_CREDITO\n      },\n    ];\n\n    const conceptosArrendamiento: Concepto[] = [\n      {\n        descripcion: BusinessControlService.CONCEPTO_MENSUALIDAD,\n        valor: contrato.mensualidad,\n        tipo: BusinessControlService.TIPO_BIEN_ARRIENDO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_DEPOSITO,\n        valor: contrato.valorDeposito,\n        tipo: BusinessControlService.TIPO_BIEN_ARRIENDO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_DEPOSITO_50,\n        valor: Math.round(contrato.valorDeposito / 2),\n        tipo: BusinessControlService.TIPO_BIEN_ARRIENDO\n      },\n      {\n        descripcion: BusinessControlService.CONCEPTO_OTRO,\n        valor: 0,\n        tipo: BusinessControlService.TIPO_BIEN_ARRIENDO\n      },\n    ];\n    if (this.config.conceptos.length > 0) {\n      return [...conceptoCreditos, ...conceptosArrendamiento]\n    }\n    if (contrato.tipo == BusinessControlService.TIPO_BIEN_ARRIENDO) {\n      return conceptosArrendamiento;\n    }\n    return conceptoCreditos;\n  }\n\n  onBienSelect(bienId: string): void {\n    this.selectedBienId = bienId;\n    this.bussinessServices.setSelectedId(bienId);\n    this.selectedBien = this.bussinessServices.getBienById(bienId);\n    this.tipoBien = this.selectedBien.tipo;\n    if (this.selectedBien && this.selectedBien.contratoActivo && this.selectedBien.contratoActivo.tipo == 'Credito') {\n      this.responseAmortizacion = this.creditService.calcularAmortizacion(this.selectedBien);\n    }\n  }\n\n  redireccionarAlComprobante(cuota: Amortizacion): void {\n    const url = this.bussinessServices.generateUrlFirmada(cuota.comprobante);\n    window.open(url, '_blank');\n  }\n\n  redireccionarGeneracionComprobante(cuota: Amortizacion): void {\n    const comprobante: Comprobante = {\n      id: cuota?.fechaCuota?.toLocaleDateString('en-CA').replace(/-/g, '') ?? cuota.index.toString(),\n      conceptos: [\n        {\n          valor: cuota.interes,\n          descripcion: BusinessControlService.CONCEPTO_INTERESES\n        },\n        {\n          valor: cuota.abonoCapital,\n          descripcion: BusinessControlService.CONCEPTO_CAPITAL\n        },\n        {\n          valor: 0,\n          descripcion: BusinessControlService.CONCEPTO_ABONO_CAPITAL\n        }\n      ],\n      total: 0,\n      fechaGeneracion: cuota.fechaCuota,\n      periodo: {\n        inicio: cuota.fechaCuota,\n        fin: cuota.fechaCuota,\n      },\n      observacion: `Cuota ${cuota.index}`,\n      contratoId: this.selectedBien.contratoActivo.id,\n      medioPago: 'Efectivo',\n    };\n    if (cuota.tarifaFija > 0) {\n      comprobante.conceptos.push({\n        valor: cuota.tarifaFija,\n        descripcion: BusinessControlService.CONCEPTO_TARIFA_FIJA\n      });\n    }\n    window.location.href = this.bussinessServices.generateUrlFirmada(comprobante, \"business-control\");\n  }\n\n  async setContratoActivo(contrato: Contrato) {\n    await this.bussinessServices.setContratoActivo(this.selectedBienId, contrato.id);\n    this.ngOnInit();\n  }\n\n  downloadConfig(): void {\n    this.bussinessServices.downloadConfig();\n  }\n\n  isProcessingFile = false;\n\n  // Método para manejar el cambio de archivo\n  onFileChange(event: Event) {\n    if (this.isProcessingFile) {\n      return;  // Si ya se está procesando un archivo, salir\n    }\n    this.isProcessingFile = true;\n\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length) {\n      const file = input.files[0];\n      this.readAndValidateFile(file);\n      input.value = ''; // Restablecer el valor del input\n    } else {\n      this.isProcessingFile = false;\n    }\n  }\n\n\n  // Método para leer el archivo y validarlo\n  readAndValidateFile(file: File) {\n    if (file.size === 0) {\n      this.toastr.info(\"Archivo vacio\", \"Business Control\");\n      this.isProcessingFile = false;\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = async (e: ProgressEvent<FileReader>) => {\n      try {\n        this.isProcessingFile = false;\n        const json = JSON.parse(reader.result as string);\n        if (json) {\n          this.config = await this.bussinessServices.saveConfiguracion(json);\n          this.toastr.success(\"Datos importados correctamente\", \"Business Control\");\n          this.ngOnInit();\n        }\n      } catch (error) {\n        this.toastr.error('Error al procesar el archivo JSON - ' + JSON.stringify(error) + ' | ' + JSON.stringify(reader.result), \"Business Control\");\n        alert();\n      } finally {\n        reader.onload = null;\n      }\n    };\n    reader.readAsText(file);\n  }\n\n  deleteData(): void {\n    const result = confirm('¿Estás seguro de que deseas continuar?');\n    if (result) {\n      this.bussinessServices.deleteData();\n      this.ngOnInit();\n    } else {\n      this.toastr.info(\"Operación de eliminación cancelada\", \"Business Control\");\n    }\n  }\n\n}\n","export default \".container {\\n    /* font-family: Arial, sans-serif; */\\n    margin: 0;\\n    padding: 20px;\\n    box-sizing: border-box;\\n    background-color: #f4f4f4;\\n    max-width: 800px;\\n    margin: 0 auto;\\n    background: #fff;\\n    color: #000;\\n    padding: 20px;\\n    border-radius: 10px;\\n    font-size: 80%;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYnVzaW5lc3MtY29udHJvbC12ZXJpZnkvYnVzaW5lc3MtY29udHJvbC12ZXJpZnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9DQUFvQztJQUNwQyxTQUFTO0lBQ1QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLHVDQUF1QztBQUMzQyIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2J1c2luZXNzLWNvbnRyb2wtdmVyaWZ5L2J1c2luZXNzLWNvbnRyb2wtdmVyaWZ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICAvKiBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7ICovXG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBjb2xvcjogIzAwMDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgZm9udC1zaXplOiA4MCU7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Comprobante } from 'src/app/entities/business-control';\nimport { CryptService } from 'src/app/services/crypt/crypt.service';\n\n@Component({\n  selector: 'app-business-control-verify',\n  templateUrl: './business-control-verify.component.html',\n  styleUrls: ['./business-control-verify.component.css']\n})\nexport class BusinessControlVerifyComponent implements OnInit {\n  comprobante: Comprobante;\n\n  constructor(private cryptService: CryptService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    // Obtener el valor del query param \"comprobante\"\n    this.route.queryParamMap.subscribe(params => {\n      try {\n        const comprobanteCrypted = params.get('comprobante');\n        const aux = this.cryptService.decrypt(comprobanteCrypted);\n        this.comprobante = JSON.parse(aux);\n        this.comprobante.fechaGeneracion = new Date(this.comprobante.fechaGeneracion);\n        if (!this.comprobante.contratante) {\n          this.comprobante.bien.comprobantes.forEach(t => {\n            if (t && t.contratante && t.contratoId == this.comprobante.contratoId) {\n              this.comprobante.contratante = t.contratante;\n              return;\n            }\n          })\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n}\n","export default \".container {\\n    /* font-family: Arial, sans-serif; */\\n    margin: 0;\\n    padding: 20px;\\n    box-sizing: border-box;\\n    background-color: #f4f4f4;\\n    max-width: 800px;\\n    margin: 0 auto;\\n    background: #fff;\\n    color: #000;\\n    padding: 20px;\\n    border-radius: 10px;\\n    font-size: 80%;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYnVzaW5lc3MtY29udHJvbC12b3VjaGVyL2J1c2luZXNzLWNvbnRyb2wtdm91Y2hlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0NBQW9DO0lBQ3BDLFNBQVM7SUFDVCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsdUNBQXVDO0FBQzNDIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYnVzaW5lc3MtY29udHJvbC12b3VjaGVyL2J1c2luZXNzLWNvbnRyb2wtdm91Y2hlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgLyogZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyAqL1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogODAlO1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn0iXX0= */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Comprobante, Contrato, ContratoID } from 'src/app/entities/business-control';\nimport { BusinessControlService } from 'src/app/services/business-control/business-control.service';\nimport { CryptService } from 'src/app/services/crypt/crypt.service';\nimport { PdfService } from 'src/app/services/pdf/pdf.service';\nimport { QrCodeService } from 'src/app/services/qr-code/qr-code.service';\n\n@Component({\n  selector: 'app-business-control-voucher',\n  templateUrl: './business-control-voucher.component.html',\n  styleUrls: ['./business-control-voucher.component.css']\n})\nexport class BusinessControlVoucherComponent implements OnInit {\n  @Input() comprobante: Comprobante;\n  @Input() isVerify: boolean;\n  host: string = window.location.origin;\n  qrCodeDataUrl: string | undefined;\n  comprobanteUrl: string = '';\n  date: Date = new Date();\n  contrato: Contrato;\n  contratoID: ContratoID | null;\n\n  constructor(private qrCodeService: QrCodeService, private service: BusinessControlService, private cryptService: CryptService) {\n  }\n\n  ngOnInit(): void {\n    this.contrato = this.comprobante.bien.contratos.find(t => t.id == this.comprobante.contratoId);\n    this.host = window.location.origin;\n    this.replaceData();\n    try {\n      const dencriptado = this.cryptService.decrypt(this.contrato.id);\n      this.contratoID = JSON.parse(dencriptado) as ContratoID;\n    } catch (error) {\n      this.contratoID = null;\n    }\n  }\n\n  darFormatoCol(date: Date): string {\n    return this.service.formatoInternacional(date);\n  }\n\n  replaceData() {\n    this.comprobanteUrl = this.service.generateUrlFirmada(this.comprobante);\n    if (this.comprobante.urlCorta) {\n      this.generateQRCode(this.comprobante.urlCorta);\n    } else {\n      this.generateQRCode(JSON.stringify({\n        codigo: this.comprobante.id,\n        total: this.comprobante.total,\n        numeroContrato: this.comprobante.contratoId\n      }));\n    }\n  }\n  generateQRCode(text: string) {\n    this.qrCodeService.generateQRCode(text).then(qr => {\n      this.qrCodeDataUrl = qr;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2J1c2luZXNzLWNvbnRyb2wvYnVzaW5lc3MtY29udHJvbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comprobante, Concepto, Configuracion, ReciboServicio, Bien, ConceptoComprobante } from 'src/app/entities/business-control';\nimport { BusinessControlService } from 'src/app/services/business-control/business-control.service';\nimport { Chart } from 'chart.js';\nimport { PdfService } from 'src/app/services/pdf/pdf.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { GoogleService, UserGoogle } from 'src/app/services/google-services/google.service';\nimport { CryptService } from 'src/app/services/crypt/crypt.service';\n\n@Component({\n  selector: 'app-business-control',\n  templateUrl: './business-control.component.html',\n  styleUrls: ['./business-control.component.css']\n})\nexport class BusinessControlComponent implements OnInit {\n  comprobanteForm: FormGroup;\n  selectedBien: Bien | null = null;\n  selectedBienId: string;\n  config: Configuracion | null = null;\n  servicioForm: FormGroup;\n  newComprobante: Comprobante = null;\n  chart: any;\n  observacionComprobante: string = '';\n  metodoPagoComprobante: string = '';\n  fechaComprobante: string = new Date().toISOString().substring(0, 10);\n\n  @ViewChild('pdfContent', { static: false }) pdfContent: ElementRef;\n  comprobanteToPdf: Comprobante | null = null;\n  firmaDigital: string = '';\n  isWebShareSupported: boolean = false;\n  conceptosByContrato: Concepto[] = [];\n  userLogger: UserGoogle;\n\n  constructor(private googleService: GoogleService, private cryptService: CryptService, private toastr: ToastrService, private fb: FormBuilder, private businessService: BusinessControlService, private router: Router, private pdfService: PdfService, private route: ActivatedRoute) {\n    this.comprobanteForm = this.fb.group({\n      descripcion: ['', Validators.required],\n      descripcionTemp: [''],\n      valor: ['', Validators.required],\n      submitted: [false]\n    });\n    this.servicioForm = this.fb.group({\n      tipo: ['', Validators.required],\n      valor: ['', Validators.required],\n      fechaGeneracion: ['', Validators.required],\n      fechaPago: ['', Validators.required],\n      submitted: [false]\n    });\n    this.isWebShareSupported = !!navigator.share;\n  }\n\n  private InicializarComprobante() {\n    console.log(\"inicializando\")\n    if (!this.newComprobante || (this.newComprobante && !this.newComprobante.id)) {\n      this.observacionComprobante = \"\";\n      this.newComprobante = {\n        id: '',\n        conceptos: [],\n        total: 0,\n        fechaGeneracion: this.businessService.instanceDateFromString(this.fechaComprobante),\n        periodo: {\n          inicio: new Date(),\n          fin: new Date(),\n        },\n        observacion: '',\n        contratoId: '',\n        medioPago: 'Efectivo',\n      };\n    }\n  }\n\n  ngOnInit(): void {\n    // Obtener el valor del query param \"comprobante\"\n    this.route.queryParamMap.subscribe(params => {\n      try {\n        const comprobanteCrypted = params.get('comprobante');\n        if (comprobanteCrypted) {\n          console.log(\"asignando\")\n          const aux = this.cryptService.decrypt(comprobanteCrypted);\n          console.log(this.newComprobante);\n          console.log(JSON.parse(aux));\n          this.newComprobante = JSON.parse(aux);\n          this.newComprobante.fechaGeneracion = new Date(this.newComprobante.fechaGeneracion);\n          this.calcularTotalComprobante();\n          this.observacionComprobante = this.newComprobante.observacion;\n          this.comprobanteForm.patchValue({ descripcion: this.newComprobante.observacion });\n          this.comprobanteForm.patchValue({ descripcionTemp: this.newComprobante.observacion });\n          this.fechaComprobante = this.newComprobante.fechaGeneracion.toISOString().substring(0, 10);\n        }\n      } catch (error) {\n        this.toastr.error(\"Error al obtener el comprobante en la url: \" + JSON.stringify(error), 'Business Control!');\n      }\n    });\n    this.initialiceComponent();\n    this.getUserLogget();\n  }\n\n  calcularTotalComprobante(): void {\n    console.log(\"calculando\")\n    this.newComprobante.total = 0;\n    this.newComprobante.conceptos.forEach(t => this.newComprobante.total += t.valor);\n  }\n\n  private initialiceComponent() {\n    this.config = this.businessService.getConfiguracion();\n    if (!this.config || this.config.bienes.length == 0) {\n      this.router.navigate(['/business-control-settings']);\n      return;\n    }\n    if (this.config.bienes.length > 0) {\n      const bienId = this.businessService.getSelectedId() ?? this.config.bienes[0]?.id;\n      this.onBienSelect(bienId);\n    }\n    this.firmaDigital = this.config.contratante.firmaDigital;\n    this.InicializarComprobante();\n    this.metodoPagoComprobante = this.config.mediosPago[0];\n  }\n\n  Login(): void {\n    this.googleService.signIn().then(config => {\n      this.userLogger = config.user;\n      if (config.data) {\n        this.ngOnInit();\n      }\n    })\n  }\n\n  Logout(): void {\n    this.googleService.signOut();\n    this.userLogger = null;\n  }\n\n\n  getUserLogget(): void {\n    this.googleService.getUser().then(config => {\n      this.userLogger = config?.user;\n    })\n  }\n\n\n  onBienSelect(bienId: string): void {\n    this.selectedBienId = bienId;\n    this.businessService.setSelectedId(bienId);\n    this.selectedBien = this.config.bienes.find(v => v.id === bienId) || null;\n    if (this.selectedBien) {\n      this.conceptosByContrato = this.config.conceptos.filter(t => t.tipo == this.selectedBien.contratoActivo.tipo);\n      this.onConceptoSelected(this.conceptosByContrato[0].descripcion);\n    }\n    this.comprobanteToPdf = null;\n    setTimeout(() => {\n      this.comprobanteToPdf = this.selectedBien.comprobantes[0];\n      this.renderizarGraficos();\n    }, 100);\n  }\n\n  onConceptoSelected(descripcion: string): void {\n    const concepto = this.config.conceptos.find(v => v.descripcion === descripcion);\n    if (concepto) {\n      this.comprobanteForm.patchValue({ valor: concepto.valor });\n      this.comprobanteForm.patchValue({ descripcionTemp: concepto.descripcion });\n      this.comprobanteForm.patchValue({ descripcion: concepto.descripcion });\n    }\n  }\n\n\n  addConcepto(): void {\n    this.comprobanteForm.patchValue({ submitted: true });\n    if (this.comprobanteForm.valid) {\n      const formValues = this.comprobanteForm.value;\n      const newConcepto: ConceptoComprobante = {\n        descripcion: formValues.descripcion,\n        valor: formValues.valor\n      };\n      this.newComprobante.conceptos.push(newConcepto);\n      this.comprobanteForm.reset();\n    }\n  }\n\n  removeConcepto(index: number): void {\n    this.newComprobante.conceptos.splice(index, 1);\n    this.calcularTotalComprobante();\n  }\n\n  async generateComprobante(): Promise<void> {\n    if (this.selectedBien) {\n      if (!this.fechaComprobante) {\n        this.toastr.warning(\"Debes seleccionar la fecha del comprobante\", 'Business Control!');\n        return\n      }\n      if (this.newComprobante.total <= 0) {\n        this.toastr.warning(\"El valor del comprobante debe ser mayor a cero\", 'Business Control!');\n        return\n      }\n      this.newComprobante.observacion = this.observacionComprobante;\n      this.newComprobante.medioPago = this.metodoPagoComprobante;\n      this.newComprobante.fechaGeneracion = this.businessService.instanceDateFromString(this.fechaComprobante);\n      await this.businessService.addComprobante(this.selectedBien.id, this.newComprobante);\n      this.ngOnInit();\n      this.toastr.success('Comprobante generado correctamente', 'Business Control!');\n    }\n  }\n\n  registerServicio(): void {\n    this.servicioForm.patchValue({ submitted: true });\n    if (this.selectedBien && this.servicioForm.valid) {\n      const newServicio: ReciboServicio = {\n        tipo: this.servicioForm.value.tipo,\n        valor: this.servicioForm.value.valor,\n        fechaGeneracion: this.servicioForm.value.fechaGeneracion,\n        fechaPago: this.servicioForm.value.fechaPago\n      };\n      this.businessService.addServicioPublico(this.selectedBien.id, newServicio);\n      this.servicioForm.reset();\n      this.ngOnInit();\n      this.toastr.success('Servicio registrado correctamente', 'Business Control!');\n    }\n  }\n\n  renderizarGraficos(): void {\n    this.generarGraficaIngresosVsGastos();\n  }\n\n  generarGraficaIngresosVsGastos(): void {\n    const selectedBien = this.selectedBien;\n\n    // Crear un mapa para agrupar los datos por mes\n    const labelsMap = new Map<string, { ingresos: number, aguagastos: number, luzgastos: number, gasgastos: number, internetgastos: number, otrosgastos: number }>();\n\n    // Procesar comprobantes para agrupar ingresos por mes\n    selectedBien.comprobantes.forEach(comprobante => {\n      const monthYear = new Date(comprobante.fechaGeneracion).toLocaleString('default', { month: 'short', year: 'numeric' });\n      if (!labelsMap.has(monthYear)) {\n        labelsMap.set(monthYear, { ingresos: 0, aguagastos: 0, luzgastos: 0, gasgastos: 0, internetgastos: 0, otrosgastos: 0 });\n      }\n      const data = labelsMap.get(monthYear);\n      data.ingresos += comprobante.total;\n    });\n\n    // Procesar servicios públicos para agrupar gastos por tipo y mes\n    selectedBien.serviciosPublicos.forEach(servicio => {\n      const monthYear = new Date(servicio.fechaGeneracion).toLocaleString('default', { month: 'short', year: 'numeric' });\n      if (!labelsMap.has(monthYear)) {\n        labelsMap.set(monthYear, { ingresos: 0, aguagastos: 0, luzgastos: 0, gasgastos: 0, internetgastos: 0, otrosgastos: 0 });\n      }\n      const data = labelsMap.get(monthYear);\n      switch (servicio.tipo) {\n        case 'Agua':\n          data.aguagastos += servicio.valor;\n          break;\n        case 'Luz':\n          data.luzgastos += servicio.valor;\n          break;\n        case 'Gas':\n          data.gasgastos += servicio.valor;\n          break;\n        case 'Internet':\n          data.internetgastos += servicio.valor;\n          break;\n        case 'Otro':\n          data.otrosgastos += servicio.valor;\n          break;\n      }\n    });\n\n\n    this.updateChart(labelsMap);\n\n  }\n\n  updateChart(labelsMap: Map<string, { ingresos: number, aguagastos: number, luzgastos: number, gasgastos: number, internetgastos: number, otrosgastos: number }>): void {\n    // Convertir el mapa a arrays para labels y datasets\n    const labels = Array.from(labelsMap.keys());\n    const ingresos = labels.map(label => labelsMap.get(label).ingresos);\n    const aguagastos = labels.map(label => labelsMap.get(label).aguagastos);\n    const luzgastos = labels.map(label => labelsMap.get(label).luzgastos);\n    const gasgastos = labels.map(label => labelsMap.get(label).gasgastos);\n    const internetgastos = labels.map(label => labelsMap.get(label).internetgastos);\n    const otrosgastos = labels.map(label => labelsMap.get(label).otrosgastos);\n\n    const data = {\n      labels: labels,\n      datasets: [\n        { label: 'Arriendo', data: ingresos, backgroundColor: '#4caf50', fill: false }\n      ]\n    }\n\n    if (this.selectedBien.tipo == 'Arrendamiento') {\n      data.datasets.push({ label: 'Agua', data: aguagastos, backgroundColor: '#2196f3', fill: false },\n        { label: 'Luz', data: luzgastos, backgroundColor: '#ffeb3b', fill: false },\n        { label: 'Gas', data: gasgastos, backgroundColor: '#f44336', fill: false },\n        { label: 'Internet', data: internetgastos, backgroundColor: '#9c27b0', fill: false },\n        { label: 'Otros', data: otrosgastos, backgroundColor: '#ff9800', fill: false })\n    }\n\n    if (!this.chart) {\n      // Generar el gráfico\n      this.chart = new Chart('canvas', {\n        type: 'line',\n        data: data,\n        options: {\n          responsive: true,\n          scales: {\n            // xAxes: [{\n            //   display: false // Oculta los labels en el eje X\n            // }],\n            yAxes: [{\n              display: false, // Oculta los labels en el eje Y\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          legend: {\n            // display: false // Opcional: Oculta la leyenda si solo quieres ver las líneas\n          }\n        }\n      });\n    }\n    this.chart.data = data;\n\n    // Actualiza el gráfico\n    this.chart.update();\n  }\n\n  generatePDF(comprobante: ComprobanteComponent) {\n    this.comprobanteToPdf = null;\n    comprobante.generandoPdf = true;\n    setTimeout(() => {\n      this._generatePdf(comprobante);\n    }, 100);\n  }\n\n  sharedPDF(comprobante: ComprobanteComponent) {\n    this.comprobanteToPdf = null;\n    comprobante.compartiendoPdf = true;\n    setTimeout(() => {\n      this._shareByAppsFromSO(comprobante);\n    }, 100);\n  }\n\n  sharedUrl(comprobante: ComprobanteComponent) {\n    this.comprobanteToPdf = null;\n    comprobante.compartiendoUrl = true;\n    setTimeout(() => {\n      this._sharedUrlCorta(comprobante);\n    }, 100);\n  }\n\n  showComprobante(comprobante: ComprobanteComponent) {\n    const url = this.businessService.generateUrlFirmada(comprobante);\n    window.open(url, '_blank');\n  }\n\n  private _generatePdf(comprobante: ComprobanteComponent) {\n    this.comprobanteToPdf = comprobante;\n    setTimeout(async () => {\n      if (this.pdfContent) {\n        await this.pdfService.generatePDF(`Comprobante Nro ${comprobante.id}`, this.pdfContent.nativeElement);\n        comprobante.generandoPdf = false;\n        this.toastr.info('Pdf generado con exíto', 'Business Control!');\n      } else {\n        this.toastr.error('El contenido del PDF no está disponible.', 'Business Control!');\n      }\n    }, 0);\n  }\n\n  private _shareByAppsFromSO(comprobante: ComprobanteComponent) {\n    try {\n      this.comprobanteToPdf = comprobante;\n      setTimeout(() => {\n        this._compartirPdf(comprobante);\n      }, 0);\n    } catch (error) {\n      this.toastr.error('Error al intentar compartir el archivo : ' + JSON.stringify(error), 'Business Control!');\n    }\n  }\n\n  private _compartirPdf(comprobante: ComprobanteComponent) {\n    try {\n      if (this.pdfContent) {\n        // this.pdfService.generatePDF(comprobante.id, this.pdfContent.nativeElement);\n        this.pdfService.getPdfInBlob(comprobante.id, this.pdfContent.nativeElement).then((pdfBlob: Blob) => {\n          this._sharedPdf(pdfBlob, comprobante);\n          comprobante.compartiendoPdf = false;\n        });\n      } else {\n        this.toastr.error('El contenido del PDF no está disponible.', 'Business Control!');\n      }\n    } catch (error) {\n      this.toastr.error('Error al compartir el archivo : ' + JSON.stringify(error), 'Business Control!');\n    }\n  }\n\n  private _sharedUrlCorta(comprobante: ComprobanteComponent) {\n    if (navigator.share) {\n      navigator.share({\n        title: `Comprobante Nro ${comprobante.id}.pdf`,\n        text: `Hola ${comprobante.bien.contratoActivo.nombre},\\n\\nEspero que te encuentres bien.\\n\\nTe comparto con gusto el comprobante de pago correspondiente al periodo del ${this.businessService.formatoInternacional(comprobante.periodo.inicio)} al ${this.businessService.formatoInternacional(comprobante.periodo.fin)}.\\n${comprobante.urlCorta}\\n\\nEste comprobante verifica el cumplimiento de nuestras obligaciones y proporciona detalles completos sobre la transacción realizada.\\n\\nSi tienes alguna pregunta o necesitas información adicional, no dudes en contactarme.\\n\\nSaludos cordiales,\\n${comprobante.contratante.nombre}`,\n      }).then(() => {\n        comprobante.compartiendoUrl = false;\n        this.toastr.info('Se compartio correctamente la url!', 'Business Control!');\n      }).catch((error) => {\n        this.toastr.error('Error compartiendo la url: ' + JSON.stringify(error), 'Business Control!');\n      });\n    } else {\n      this.toastr.error('La función de compartir no está disponible en este navegador (URL).', 'Business Control!');\n    }\n  }\n\n  private _sharedPdf(pdfBlob: Blob, comprobante: Comprobante) {\n    const file = new File([pdfBlob], `Comprobante Nro ${comprobante.id}.pdf`, { type: 'application/pdf' });\n    if (navigator.share) {\n      navigator.share({\n        title: `Comprobante Nro ${comprobante.id}.pdf`,\n        text: `Hola ${comprobante.bien.contratoActivo.nombre},\\n\\nEspero que te encuentres bien.\\n\\nTe comparto con gusto el comprobante de pago correspondiente al periodo del ${this.businessService.formatoInternacional(comprobante.periodo.inicio)} al ${this.businessService.formatoInternacional(comprobante.periodo.fin)}. Este comprobante verifica el cumplimiento de nuestras obligaciones y proporciona detalles completos sobre la transacción realizada.\\n\\nSi tienes alguna pregunta o necesitas información adicional, no dudes en contactarme.\\n\\nSaludos cordiales,\\n${comprobante.contratante.nombre}`,\n        files: [file]\n      }).then(() => {\n        this.toastr.info('Pdf generado con exíto, compartelo!', 'Business Control!');\n      }).catch((error) => {\n        this.toastr.error('Error compartiendo el archivo: ' + JSON.stringify(error), 'Business Control!');\n      });\n    } else {\n      this.toastr.error('La función de compartir no está disponible en este navegador.', 'Business Control!');\n    }\n  }\n\n}\n\ninterface ComprobanteComponent extends Comprobante {\n  generandoPdf: boolean;\n  compartiendoPdf: boolean;\n  compartiendoUrl: boolean;\n}","import { OnInit } from '@angular/core';\nimport { GoogleService, UserGoogle, UserLoggedWithSettingsData } from 'src/app/services/google-services/google.service';\n\nexport abstract class BaseComponent {\n  static contador = 0;\n  public configFromGoogle: UserLoggedWithSettingsData;\n\n  constructor(protected googleService: GoogleService) { }\n\n  protected init(): void {\n    this._init();\n  };\n\n  private _init() {\n    console.log(\"ENTRO AQUIIIIII...\", BaseComponent.contador++);\n    this.initialiceComponent();\n    this.getUserLogget();\n  }\n\n  protected detroy(): void {\n  }\n\n  protected hasDataInGoogle(): boolean {\n    if (this.configFromGoogle && this.configFromGoogle.data) {\n      return true\n    }\n    return false;\n  };\n\n  protected isLogged(): boolean {\n    if (this.configFromGoogle && this.configFromGoogle.user) {\n      return true\n    }\n    return false;\n  };\n\n  abstract initialiceComponent(): void;\n\n  abstract syncGoogleDrive(): Promise<void>;\n\n  Login(): void {\n    this.googleService.signInForAccountControl().then(async config => {\n      this.configFromGoogle = config;\n      if (config) {\n        await this.syncGoogleDrive();\n      }\n      this.initialiceComponent();\n    })\n  }\n\n  Logout(): void {\n    this.googleService.signOut();\n    this.configFromGoogle = null;\n  }\n\n  contador = 0;\n  getUserLogget(): void {\n    this.contador++;\n    this.googleService.getUserForAccountControl().then(async config => {\n      console.log('Usuario encontrado...', this.contador, config);\n      this.configFromGoogle = config;\n      if (config) {\n        await this.syncGoogleDrive();\n      }\n      this.initialiceComponent();\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CryptService } from '../crypt/crypt.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GoogleService, TransactionFromGoogle, UserLoggedWithSettingsData } from '../google-services/google.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Account, AccountConstant, BudgetSettings, Category, SettingsData, Transaction } from 'src/app/entities/account-control';\nimport { TransactionOperation } from '../utils/transaction-operation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountControlService {\n\n  public get storageKey(): string {\n    if (window.location.hostname == 'localhost')\n      return 'accountDataLocal';\n    return 'accountData';\n  }\n  private storageSelectedBienKey = 'selectedAccountId';\n\n  static isSync = false;\n\n  constructor(private toastr: ToastrService, private googleService: GoogleService, private cryptService: CryptService, private _httpService: HttpClient) { }\n\n  getSettingsData(): SettingsData {\n    const data = this._getConfigFromLocalStorage();\n    if (data) {\n      data.accounts = data.accounts as Account[];\n    }\n    this.syncWithGoogleDrive(data);\n    return data;\n  }\n\n  public setSelectedId(bienId: string): void {\n    localStorage.setItem(this.storageSelectedBienKey, bienId);\n  }\n\n  public getSelectedId(): string {\n    return localStorage.getItem(this.storageSelectedBienKey);\n  }\n\n  saveAccount(account: Account, userName?: string, email?: string): void {\n    let data = this._getConfigFromLocalStorage();\n    if (!data) {\n      data = this.instanceNewConfig(userName, email);\n    }\n    const oldAccount = data.accounts.find(t => t.id === account.id);\n    if (oldAccount) {\n      oldAccount.name = account.name;\n      oldAccount.description = account.description;\n      oldAccount.balance = account.balance;\n      oldAccount.isPrincipal = account.isPrincipal;\n    } else {\n      data.accounts.push(account);\n    }\n    this.saveSettingsData(data);\n  }\n\n  saveTransaction(transaction: Transaction): void {\n    let data = this._getConfigFromLocalStorage();\n    if (!data) {\n      this.toastr.error(\"Debe existir al menos una cuenta para poder crear una transacción\", 'Account Control!');\n      return;\n    }\n    if (transaction.type === AccountConstant.TRANSACTION_TYPE_EXPENSE && transaction.amount > 0) {\n      transaction.amount = -transaction.amount\n    }\n    if (!transaction.id) {\n      transaction.id = this._generateRandomString(20);\n    }\n    const oldTransaction = data.transactions.find(t => t.id === transaction.id);\n    if (oldTransaction) {\n      oldTransaction.description = transaction.description;\n      oldTransaction.amount = transaction.amount;\n      oldTransaction.originalAccount = transaction.originalAccount;\n      oldTransaction.categoryId = transaction.categoryId;\n      oldTransaction.date = transaction.date;\n      oldTransaction.targetAccountId = transaction.targetAccountId;\n      oldTransaction.transactionId = transaction.transactionId;\n    } else {\n      data.transactions.push(transaction);\n    }\n    this.saveSettingsData(data);\n  }\n\n  private instanceNewConfig(name?: string, email?: string): SettingsData {\n    let data: SettingsData;\n    data = {\n      name: name ?? this._generateRandomString(25),\n      accounts: [\n        {\n          id: AccountConstant.ACCOUNT_BILLETERA,\n          name: AccountConstant.ACCOUNT_BILLETERA,\n          description: 'Esta cuenta es por default, no la elimine',\n          balance: 0,\n          balanceLastMonth: 0,\n          lastBalance: 0,\n          isPrincipal: true,\n        }\n      ],\n      budgetSettings: null,\n      transactions: [],\n      email: email,\n    };\n    return data;\n  }\n\n  saveBudgetSettings(budgetSettings: BudgetSettings): void {\n    let data = this._getConfigFromLocalStorage();\n    if (!data) {\n      this.toastr.error('Debe existir al menos una cuenta registrada, no se deberia poder configurar presupuesto sin al menos una cuenta creada!!!', 'Account Control!');\n      return;\n    }\n    data.budgetSettings = budgetSettings;\n    this.saveSettingsData(data);\n  }\n\n  private _generateRandomString(length: number): string {\n    return Math.random().toString(36).substring(2, 2 + length);\n  }\n\n  public async syncWithGoogleDrive(configLocalStorage: SettingsData, bypass: boolean = false): Promise<void> {\n    if (!AccountControlService.isSync || AccountControlService.isSync && !configLocalStorage || bypass) {\n      AccountControlService.isSync = true;\n      const userLogged = await this.googleService.getUserForAccountControl();\n      if (userLogged && userLogged.data) {\n        let uploadConfigInGoogle = false;\n        if (userLogged.data && !userLogged.data.lastSync) {\n          userLogged.data.lastSync = new Date();\n          //se manda a subir la data nuevamente a google drive ya que en google drive no hay fecha de modificacion en el json\n          uploadConfigInGoogle = true;\n        }\n        //existe data en google y no hay fecha de modificacion o la fecha de modificacion de localstorage es menor a la de google entonces bajo y almaceno los datos en local\n        if (userLogged.data && (!configLocalStorage || !configLocalStorage.lastSync || configLocalStorage.lastSync < userLogged.data.lastSync)) {\n          await this.saveSettingsData(userLogged.data, uploadConfigInGoogle);\n          this.toastr.success('Información syncronizada correctamente desde google drive', 'Account Control!');\n          setTimeout(() => {\n            window.location.reload();\n          }, 1500);\n        }\n      }\n      //si no hay data en google entonces subimos la que esta en localstorage\n      if (userLogged && !userLogged.data) {\n        await this.uploadConfigWithGoogleDrive();\n      }\n    }\n  }\n\n  private _getConfigFromLocalStorage(): SettingsData {\n    const data = this._readConfig();\n    const response = data ? JSON.parse(data) as SettingsData : null;\n    if (response) {\n      if (response.lastSync) {\n        response.lastSync = new Date(response.lastSync);\n      }\n      if (response.lastSyncTransactions) {\n        response.lastSyncTransactions = new Date(response.lastSyncTransactions);\n      }\n      response.transactions.forEach(t => {\n        t.date = new Date(t.date);\n      })\n      response.accounts.forEach(account => {\n        if (account.lastTransaction) {\n          account.lastTransaction.date = new Date(account.lastTransaction.date);\n        }\n      });\n    }\n    return response;\n  }\n\n  private _readConfig() {\n    return localStorage.getItem(this.storageKey);\n  }\n\n  async saveSettingsData(config: SettingsData, syncWithGoogle: boolean = true): Promise<SettingsData> {\n    config.lastSync = new Date();\n    localStorage.setItem(this.storageKey, JSON.stringify(config));\n    const isLogged = await this.googleService.isUserLogged()\n    if (isLogged && syncWithGoogle) {\n      await this.uploadConfigWithGoogleDrive();\n    }\n    return config;\n  }\n  /**\n   * Este metodo se utiliza debido a que desde el front los input date arrojan un string como valor y en tiempo de ejecucion este string en formato \"2024-07-18\" toca convertirlo a date\n   * @param dateString fecha en formato string (\"2024-07-18\")\n   * @returns fecha\n   */\n  instanceDateFromString(dateString: string): Date {\n    // Extraer año, mes y día del string\n    const [year, month, day] = dateString.split('-').map(Number);\n\n    // Crear la fecha manualmente usando el constructor de Date con los componentes individuales\n    // El mes en el constructor Date es 0-indexed, por eso restamos 1\n    return new Date(year, month - 1, day);\n  }\n\n  downloadConfig(): void {\n    const config = this._getConfigFromLocalStorage();\n    if (config) {\n      // Crea un blob con el contenido JSON\n      const blob = new Blob([JSON.stringify(config, null, 2)], { type: 'application/json' });\n\n      // Crea un enlace para la descarga\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `Account-Control${config.name}.json`;\n\n      // Simula un clic en el enlace para iniciar la descarga\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  private async uploadConfigWithGoogleDrive(): Promise<void> {\n    const config = this._getConfigFromLocalStorage();\n    if (config) {\n      // Crea un blob con el contenido JSON\n      const blob = new Blob([JSON.stringify(config, null, 2)], { type: 'application/json' });\n      const fileName = `AC-Main-${config.name}.json`;\n\n      // Llama al método para subir el archivo a Google Drive\n      await this.googleService.uploadFileWithFolderDetection(blob, fileName, true);\n    }\n  }\n\n  deleteData(): void {\n    localStorage.removeItem(this.storageKey);\n  }\n\n  // Define el formato internacional deseado\n  formatoInternacional(date: Date): string {\n\n    // Si date es una cadena, conviértelo a un objeto Date\n    date = typeof date === 'string' ? new Date(date) : date;\n    // Define el formato internacional deseado\n    const _formatoInternacional = new Intl.DateTimeFormat('es-CO', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    return _formatoInternacional.format(date);\n  }\n\n  async syncTransactions(userLogged: UserLoggedWithSettingsData): Promise<SettingsData> {\n    console.log('Sincronizando transacciones...', userLogged.user.username);\n    let config = this._getConfigFromLocalStorage();\n    let defaultStartDate = new Date();\n    // Resta 3 meses a la fecha de inicio para buscar transacciones de hace tres meses\n    defaultStartDate.setMonth(defaultStartDate.getMonth() - 3);\n    const newTransactions = await this.googleService.getTransactionsSince(config?.lastSyncTransactions ?? defaultStartDate);\n    if (newTransactions.length > 0) {\n      config = await this._syncTransactions(config, userLogged, newTransactions);\n    }\n    return this.getTransactions(config);\n  }\n\n  private async _syncTransactions(config: SettingsData, userLogged: UserLoggedWithSettingsData, newTransactions: TransactionFromGoogle[]) {\n    if (!config) {\n      config = this.instanceNewConfig(userLogged.user.username, userLogged.user.email);\n    }\n    if (!config.transactions) {\n      config.transactions = [];\n    }\n    config.transactions.push(...newTransactions);\n\n    config.lastSyncTransactions = new Date();\n    config.transactions = config.transactions.sort((a, b) => b.date.getTime() - a.date.getTime());\n\n    await this.saveSettingsData(config);\n    this.toastr.success('[' + (newTransactions.length) + '] Transacciones sincronizadas correctamente', 'Account Control!');\n\n    return config;\n  }\n\n  private getCategory(config: SettingsData, t: TransactionFromGoogle, showToastr = false): Category {\n    const category = config?.budgetSettings?.categories?.find(cat => cat.keyWords.some(key => t.description.toLowerCase().includes(key.toLowerCase())))\n    if ((!category || (category && !category.accountId)) && !t.originalAccount) {\n      if (showToastr && config.budgetSettings) {\n        this.toastr.warning(`No se encontro categoría para la transacción \"${t.description}\" por un monto de ${t.amount}`, 'Account Control!');\n      }\n      return;\n    }\n    return category;\n  }\n\n  getTransactions(config?: SettingsData): SettingsData {\n    if (!config) {\n      config = this.getSettingsData();\n      if (!config) {\n        config = this.instanceNewConfig();\n      }\n    }\n    const helper = new TransactionOperation();\n    let transactionsProcessed = 0;\n    config?.budgetSettings?.categories?.forEach(cat => {\n      cat.currentAmmount = 0;\n    });\n    config?.transactions?.forEach(t => {\n      const canContinue = this.processTransaction(config, t);\n      if (!canContinue) {\n        return;\n      }\n      transactionsProcessed++;\n      if (t.targetAccountId) {\n        //si tiene una cuenta configurada para el targetAccountId, crea una nueva transacción de lo contrario no porque si no crearia muchas transferencias de cuentas que no son mias\n        //esto lo hice solo para mi tarjeta de crédito o cuando cree alguna cuenta cuando le preste a amigos etc.\n        const auxaccount = this.getAccount(config, t.targetAccountId);\n        if (!auxaccount) {\n          return;\n        }\n        const newTransaction = helper.createTransactionIfIsTranfer(t);\n        if (newTransaction) {\n          this.processTransaction(config, newTransaction);\n          config.transactions.push(newTransaction);\n          transactionsProcessed++;\n        }\n      }\n    });\n    if (transactionsProcessed > 0) {\n      config.transactions = config.transactions.sort((a, b) => b.date.getTime() - a.date.getTime());\n      this.saveSettingsData(config);\n      this.toastr.info('[' + (transactionsProcessed) + '] Transacciones procesadas correctamente', 'Account Control!');\n    }\n    return config;\n  }\n\n  private processTransaction(config: SettingsData, t: Transaction): boolean {\n    if (!t.canProcessed) {\n      // Transacción no puede ser procesada\n      const anotherTransaction = new TransactionOperation().getTransaction(t.originalBody, t.id);\n      if (!anotherTransaction.canProcessed)\n        return;\n      // Asignar campos de anotherTransaction a t\n      Object.assign(t, anotherTransaction);\n    }\n    const category = this.getCategory(config, t, false);\n    if (category) {\n      t.categoryId = category.id;\n      const currentDate = new Date().getFullYear() + '-' + (new Date().getMonth() + 1);\n      const dateOfTransaction = t.date.getFullYear() + '-' + (t.date.getMonth() + 1);\n      if (currentDate == dateOfTransaction) {\n        category.currentAmmount += Math.abs(t.amount);\n      }\n    }\n    if (!t.originalAccount && category) {\n      t.originalAccount = category.accountId;\n    }\n    if (t.isProcessed) {\n      // Transacción ya procesada\n      return;\n    }\n    const accountId = t.originalAccount ?? category?.accountId;\n    if (!accountId) {\n      return;\n    }\n    const account = this.getAccount(config, accountId);\n    if (!account) {\n      if (config.budgetSettings) {\n        // this.toastr.warning(`No se encontro cuenta para la transacción \"${t.description}\" por un monto de ${t.amount}`, 'Account Control!');\n      }\n      return;\n    }\n\n    if (account.lastTransaction) {\n      const dateAccount = account.lastTransaction.date.getFullYear() + account.lastTransaction.date.getMonth();\n      const dateTransaction = t.date.getFullYear() + t.date.getMonth();\n      if (dateTransaction > dateAccount) {\n        account.balanceLastMonth = account.balance;\n      }\n    }\n    t.accountId = account.id;\n    account.lastBalance = account.balance;\n    account.balance += t.amount;\n    account.lastTransaction = t;\n    t.isProcessed = true;\n\n    return true;\n  }\n\n  private getAccount(config: SettingsData, accountId: string) {\n    return config.accounts.find(acc => acc.id.toLowerCase().includes(accountId.toLowerCase()));\n  }\n}","import { Injectable } from '@angular/core';\nimport { Contrato, Comprobante, Configuracion, ReciboServicio, Bien, ContratoID, Contratante } from 'src/app/entities/business-control';\nimport { CryptService } from '../crypt/crypt.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GoogleService } from '../google-services/google.service';\nimport { config } from 'process';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessControlService {\n  public get storageKey(): string {\n    if (window.location.hostname == 'localhost')\n      return 'configuracionLocal';\n    return 'configuracion';\n  }\n  private storageSelectedBienKey = 'selectedBienId';\n  static isSync = false;\n  static readonly TIPO_BIEN_CREDITO = 'Credito';\n  static readonly TIPO_BIEN_ARRIENDO = 'Arrendamiento';\n\n  static readonly CONCEPTO_ABONO_CAPITAL = 'Abono capital';\n  static readonly CONCEPTO_INTERESES = 'Interéses';\n  static readonly CONCEPTO_CAPITAL = 'Capital';\n  static readonly CONCEPTO_TARIFA_FIJA = 'Tarifa fija';\n  static readonly CONCEPTO_OTRO = 'Otro';\n\n  static readonly CONCEPTO_MENSUALIDAD = 'Mensualidad';\n  static readonly CONCEPTO_DEPOSITO = 'Depósito';\n  static readonly CONCEPTO_DEPOSITO_50 = 'Depósito (50%)';\n\n\n  constructor(private toastr: ToastrService, private googleService: GoogleService, private cryptService: CryptService, private _httpService: HttpClient) { }\n\n  getConfiguracion(): Configuracion | null {\n    const data = this._getConfigFromLocalStorage();\n    if (data) {\n      data.bienes = data.bienes as Bien[];\n      data.bienes.forEach(bien => {\n        let totalIngresos = 0;\n        let totalIngrByArrendaMap = new Map();\n        let countComprByArrendaMap = new Map();\n        if (!bien.comprobantes) bien.comprobantes = [];\n        if (!bien.serviciosPublicos) bien.serviciosPublicos = [];\n        if (!bien.contratos) bien.contratos = [];\n        bien?.comprobantes?.forEach(comprobante => {\n          const tempTotalIdContrato = totalIngrByArrendaMap.get(comprobante.contratoId) ?? 0;\n          const tempCountIdContrato = countComprByArrendaMap.get(comprobante.contratoId) ?? 0;\n          totalIngrByArrendaMap.set(comprobante.contratoId, tempTotalIdContrato as number + comprobante.total);\n          countComprByArrendaMap.set(comprobante.contratoId, tempCountIdContrato as number + 1);\n          comprobante.fechaGeneracion = new Date(comprobante.fechaGeneracion);\n          comprobante.periodo.inicio = new Date(comprobante.periodo.inicio);\n          comprobante.periodo.fin = new Date(comprobante.periodo.fin);\n          totalIngresos += comprobante.total;\n          comprobante.contratante = data.contratante;\n          comprobante.bien = bien;\n        });\n        bien?.serviciosPublicos?.forEach(servicio => {\n          servicio.fechaGeneracion = new Date(servicio.fechaGeneracion);\n          servicio.fechaPago = servicio.fechaPago ? new Date(servicio.fechaPago) : null;\n        });\n        bien.totalIngresos = totalIngresos;\n        bien?.contratos?.forEach(contrato => {\n          contrato.inicio = new Date(contrato.inicio);\n          contrato.totalIngresos = totalIngrByArrendaMap.get(contrato.id) as number ?? 0;\n          contrato.porcentajeIngresos = bien.totalIngresos > 0 ? Math.round(contrato.totalIngresos * 100 / bien.totalIngresos) : 0;\n          contrato.comprobantesGenerados = countComprByArrendaMap.get(contrato.id) as number ?? 0\n          if (contrato.activo) {\n            bien.contratoActivo = contrato;\n          }\n        });\n        bien.contratos.sort((a, b) => a.activo > b.activo ? -1 : 1);\n        bien.comprobantes.sort((a, b) => a.fechaGeneracion > b.fechaGeneracion ? -1 : 1);\n        if (data.ultimaModificacion) {\n          data.ultimaModificacion = new Date(data.ultimaModificacion);\n        } else {\n          data.ultimaModificacion = new Date();\n        }\n      });\n    }\n    this.syncWithGoogleDrive(data);\n    return data;\n  }\n\n  public setSelectedId(bienId: string): void {\n    localStorage.setItem(this.storageSelectedBienKey, bienId);\n  }\n\n  public getSelectedId(): string {\n    return localStorage.getItem(this.storageSelectedBienKey);\n  }\n\n  private async syncWithGoogleDrive(configLocalStorage: Configuracion) {\n    if (!BusinessControlService.isSync || BusinessControlService.isSync && !configLocalStorage) {\n      BusinessControlService.isSync = true;\n      const userLogged = await this.googleService.getUser();\n      if (userLogged && userLogged.data) {\n        let uploadConfigInGoogle = false;\n        if (userLogged.data && !userLogged.data.ultimaModificacion) {\n          userLogged.data.ultimaModificacion = new Date();\n          //se manda a subir la data nuevamente a google drive ya que en google drive no hay fecha de modificacion en el json\n          uploadConfigInGoogle = true;\n        }\n        //existe data en google y no hay fecha de modificacion o la fecha de modificacion de localstorage es menor a la de google entonces bajo y almaceno los datos en local\n        if (userLogged.data && (!configLocalStorage || !configLocalStorage.ultimaModificacion || configLocalStorage.ultimaModificacion < userLogged.data.ultimaModificacion)) {\n          this.saveConfiguracion(userLogged.data, uploadConfigInGoogle);\n          this.toastr.success('Información syncronizada correctamente desde google drive', 'Business Control!');\n          setTimeout(() => {\n            window.location.reload();\n          }, 1500);\n        }\n      }\n      //si no hay data en google entonces subimos la que esta en localstorage\n      if (userLogged && !userLogged.data) {\n        this.uploadConfigWithGoogleDrive();\n      }\n    }\n  }\n\n  private _getConfigFromLocalStorage() {\n    const data = this._readConfig();\n    return data ? JSON.parse(data) as Configuracion : null;\n  }\n\n  private _readConfig() {\n    return localStorage.getItem(this.storageKey);\n  }\n\n  async saveConfiguracion(config: Configuracion, syncWithGoogle: boolean = true): Promise<Configuracion> {\n    config.bienes.forEach(bien => {\n      bien.contratoActivo = null;\n      bien.comprobantes.forEach(comprobante => {\n        comprobante.contratante = null;\n        comprobante.bien = null;\n      });\n    });\n    config.ultimaModificacion = new Date();\n    localStorage.setItem(this.storageKey, JSON.stringify(config));\n    const isLogged = await this.googleService.isUserLogged()\n    if (isLogged && syncWithGoogle) {\n      this.uploadConfigWithGoogleDrive();\n    }\n    return config;\n  }\n\n  setContratante(contratante: Contratante): void {\n    contratante.firmaDigital = this._generateRandomString(25);\n    const config: Configuracion = {\n      bienes: [],\n      contratante: contratante,\n      conceptos: [],\n      mediosPago: ['Efectivo', 'Transferencia', 'Cheque', 'Otro']\n    };\n    this.saveConfiguracion(config);\n  }\n\n  private _generateRandomString(length: number): string {\n    return Math.random().toString(36).substring(2, 2 + length);\n  }\n\n  /**\n   * Este metodo se utiliza debido a que desde el front los input date arrojan un string como valor y en tiempo de ejecucion este string en formato \"2024-07-18\" toca convertirlo a date\n   * @param dateString fecha en formato string (\"2024-07-18\")\n   * @returns fecha\n   */\n  instanceDateFromString(dateString: string): Date {\n    // Extraer año, mes y día del string\n    const [year, month, day] = dateString.split('-').map(Number);\n\n    // Crear la fecha manualmente usando el constructor de Date con los componentes individuales\n    // El mes en el constructor Date es 0-indexed, por eso restamos 1\n    return new Date(year, month - 1, day);\n  }\n\n\n  async addComprobante(bienId: string, comprobante: Comprobante): Promise<void> {\n    const config = this.getConfiguracion();\n    if (config) {\n      const bien = config.bienes.find(v => v.id === bienId);\n      if (bien) {\n        if (!comprobante.id) { comprobante.id = new Date().getTime().toString(); }\n        comprobante.contratoId = bien.contratoActivo.id;\n        comprobante.bien = bien;\n        //Aquí la seteamos manualmente para que en el encriptado quede la url corta y el QR se vea igual\n        comprobante.urlCorta = `https://${this._getDomainForShortUrl()}/${this._getAliasForShortUrl(comprobante)}`;\n        let startDate = new Date(comprobante.fechaGeneracion.getFullYear(), comprobante.fechaGeneracion.getMonth(), bien.contratoActivo.inicio.getDate());\n        let endDate = new Date(comprobante.fechaGeneracion.getFullYear(), comprobante.fechaGeneracion.getMonth(), bien.contratoActivo.inicio.getDate());\n        endDate.setMonth(endDate.getMonth() + 1);\n        comprobante.periodo = {\n          inicio: startDate,\n          fin: endDate\n        };\n        bien.comprobantes.push(comprobante);\n        this.saveConfiguracion(config);\n        this._updateShortUrl(bienId, comprobante.id);\n      }\n    }\n  }\n  private async _updateShortUrl(bienId: string, comprobanteId: string) {\n    let tempConfig = this.getConfiguracion();\n    if (tempConfig) {\n      const bienTemp = tempConfig.bienes.find(v => v.id === bienId);\n      const comprobanteTemp = bienTemp.comprobantes.find(t => t.id = comprobanteId);\n      //Aquí se llama directamente al servicio de shorturl para crear la url y en caso tal que funcione correctamente deberian coincidir los valores, de haber un error quedaria en el json en blanco y no abria problema ya que si no hay una url corta el sistema seguira funcionando normal\n      const urlCorta = await this.shortUrl(this.generateUrlFirmada(comprobanteTemp), comprobanteTemp);\n      //Es necesario volver a consultar la configuracion ya que el metodo \"generateUrlFirmada\" elimina la firma del contratante\n      //TODO: tiene oportunidad de mejora este codigo pero aja, son las 12:51 AM y tengo sueño\n      let Config = this.getConfiguracion();\n      if (Config) {\n        const bien = tempConfig.bienes.find(v => v.id === bienId);\n        const comprobante = bienTemp.comprobantes.find(t => t.id = comprobanteId);\n        comprobante.urlCorta = urlCorta;\n        this.saveConfiguracion(Config);\n      }\n    }\n  }\n\n  addServicioPublico(bienId: string, servicio: ReciboServicio): void {\n    const config = this.getConfiguracion();\n    if (config) {\n      const bien = config.bienes.find(v => v.id === bienId);\n      if (bien) {\n        servicio.fechaGeneracion = this.instanceDateFromString(servicio.fechaGeneracion.toString());\n        servicio.fechaPago = this.instanceDateFromString(servicio.fechaPago.toString());\n        bien.serviciosPublicos.push(servicio);\n        this.saveConfiguracion(config);\n      }\n    }\n  }\n\n  addBien(bien: Bien): void {\n    const config = this.getConfiguracion();\n    if (config) {\n      bien.id = bien.tipo + this.generateBienId(bien.direccion);\n      config.bienes.push(bien);\n      this.saveConfiguracion(config);\n    }\n  }\n\n\n  addContrato(bienId: string, contrato: Contrato): void {\n    const config = this.getConfiguracion();\n    if (config) {\n      const bien = config.bienes.find(v => v.id === bienId);\n      if (bien) {\n        this._setContratoActivo(bien, contrato);\n        contrato.inicio = this.instanceDateFromString(contrato.inicio.toString());\n        contrato.id = contrato.tipo.substring(0, 3) + contrato.identificacion.toString() + new Date().getFullYear() + new Date().getMonth() + new Date().getDay() + new Date().getMinutes();\n        const contratoId: ContratoID = {\n          id: contrato.id,\n          fecha: contrato.inicio.toLocaleDateString(),\n          tipo: contrato.tipo,\n          firmaDigital: config.contratante.firmaDigital\n        }\n        contrato.id = this.cryptService.encrypt(JSON.stringify(contratoId));\n        bien.contratos.push(contrato);\n        this.saveConfiguracion(config);\n      }\n    }\n  }\n\n  public async setContratoActivo(bienId: string, contratoId: string) {\n    const config = this.getConfiguracion();\n    if (config) {\n      const bien = config.bienes.find(v => v.id === bienId);\n      if (bien) {\n        const contrato = bien.contratos.find(c => c.id == contratoId);\n        if (contrato) {\n          this._setContratoActivo(bien, contrato);\n          await this.saveConfiguracion(config);\n        }\n      }\n    }\n  }\n\n  private _setContratoActivo(bien: Bien, contrato: Contrato) {\n    bien.contratos.forEach(t => {\n      t.activo = false;\n    });\n    contrato.activo = true;\n  }\n\n  getBienById(bienId: string): Bien | null {\n    const config = this.getConfiguracion();\n    if (config) {\n      return config.bienes.find(v => v.id === bienId);\n    }\n    return null;\n  }\n\n  private generateBienId(direccion: string): string {\n    return direccion.replace(/\\s+/g, '').toLowerCase();\n  }\n\n  getTotalIngresosPorBien(bienId: string): number {\n    let total = 0;\n    const config = this.getConfiguracion();\n    if (config) {\n      const bien = config.bienes.find(v => v.id === bienId);\n      if (bien) {\n        bien.comprobantes.forEach(t => {\n          total += t.total;\n        });\n      }\n    }\n    return total;\n  }\n\n  private cryptComprobante(comprobante: Comprobante): string {\n    // Clonar el objeto usando el operador de propagación\n    const comprobanteClon = { ...comprobante };\n\n    if (comprobanteClon.contratante) comprobanteClon.contratante = { ...comprobante.contratante, firmaDigital: null };\n    if (comprobanteClon.bien) comprobanteClon.bien = { ...comprobante.bien, comprobantes: [] };\n\n    return this._cryptObject(comprobanteClon);\n  }\n\n  private _cryptObject(object: any) {\n    const cache = new Set();\n    const jsonString = JSON.stringify(object, (key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.has(value)) {\n          // Si ya hemos visitado este objeto, devolver undefined para omitirlo\n          return;\n        }\n        // Añadir el objeto al conjunto\n        cache.add(value);\n      }\n      return value;\n    });\n    return this.cryptService.encrypt(jsonString);\n  }\n\n  generateUrlFirmada(comprobante: Comprobante, path: string = 'business-control-verify'): string {\n    return `${window.location.origin}/#/${path}?comprobante=${encodeURIComponent(this.cryptComprobante(comprobante))}`;\n  }\n\n  decryptComprobante(comprobanteString: string): Comprobante {\n    const temp = this.cryptService.decrypt(comprobanteString);\n    return JSON.parse(temp) as Comprobante;\n  }\n\n  downloadConfig(): void {\n    const config = this._getConfigFromLocalStorage();\n    if (config) {\n      // Crea un blob con el contenido JSON\n      const blob = new Blob([JSON.stringify(config, null, 2)], { type: 'application/json' });\n\n      // Crea un enlace para la descarga\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = config.contratante.identificacion + '-' + config.contratante.firmaDigital + '.json';\n\n      // Simula un clic en el enlace para iniciar la descarga\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  private uploadConfigWithGoogleDrive(): void {\n    const config = this._getConfigFromLocalStorage();\n    if (config) {\n      // Crea un blob con el contenido JSON\n      const blob = new Blob([JSON.stringify(config, null, 2)], { type: 'application/json' });\n      const fileName = `${config.contratante.identificacion}-${config.contratante.firmaDigital}.json`;\n\n      // Llama al método para subir el archivo a Google Drive\n      this.googleService.uploadFileWithFolderDetection(blob, fileName);\n    }\n  }\n\n  deleteData(): void {\n    localStorage.removeItem(this.storageKey);\n  }\n\n  // Define el formato internacional deseado\n  formatoInternacional(date: Date): string {\n\n    // Si date es una cadena, conviértelo a un objeto Date\n    date = typeof date === 'string' ? new Date(date) : date;\n    // Define el formato internacional deseado\n    const _formatoInternacional = new Intl.DateTimeFormat('es-CO', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    return _formatoInternacional.format(date);\n  }\n\n  /**\n   * Documentacion: https://tinyurl.com/app/dev\n   * @param url url larga\n   * @returns url corta\n   */\n  async shortUrl(url: string, comprobante: Comprobante): Promise<string> {\n    try {\n      const body: RequestTinyUrl = {\n        alias: this._getAliasForShortUrl(comprobante),\n        description: `CP del periodo ${this.formatoInternacional(comprobante.periodo.inicio)} al ${this.formatoInternacional(comprobante.periodo.fin)}`,\n        domain: this._getDomainForShortUrl(),\n        url: url\n      }\n      const response = await this._httpService.post<ResponseTinyUrl>('https://api.tinyurl.com/create', body, {\n        headers: {\n          'Authorization': 'Bearer Vj3AWgQXdbqfUWmkCiGAYSlfvyHygfDpk7lYbxeu0ptFlMvETd0kgMzmsO8z'\n        }\n      }).toPromise();\n      if (response.code == 0) {\n        return response.data.tiny_url\n      }\n      return null;\n    } catch (error) {\n      this.toastr.error(\"Error generando url corta: \" + JSON.stringify(error), 'Business Control!');\n      return null;\n    }\n  }\n\n  private _getDomainForShortUrl(): string {\n    return 'tinyurl.com';\n  }\n\n  private _getAliasForShortUrl(comprobante: Comprobante): string {\n    return `C${comprobante.bien.contratoActivo.identificacion}CP${comprobante.id}`;\n  }\n}\n\ninterface RequestTinyUrl {\n  url: string\n  domain: string\n  alias: string\n  description: string\n}\n\n\ninterface ResponseTinyUrl {\n  data: Data\n  code: number\n  errors: any[]\n}\n\ninterface Data {\n  domain: string\n  alias: string\n  deleted: boolean\n  archived: boolean\n  tags: string[]\n  analytics: Analytic[]\n  tiny_url: string\n  created_at: string\n  expires_at: any\n  url: string\n}\n\ninterface Analytic {\n  enabled: boolean\n  public: boolean\n}\n","import { Injectable } from '@angular/core';\nimport { Bien, Comprobante } from 'src/app/entities/business-control';\nimport { BusinessControlService } from '../business-control/business-control.service';\n\nexport class Amortizacion {\n  index: number;\n  cuota: number;\n  interes: number;\n  tarifaFija: number;\n  abonoCapital: number;\n  abonoAdicionalCapital: number;\n  soloInteres: boolean;\n  saldoRestante: number;\n  fechaCuota: Date; // Nuevo campo para la fecha de la cuota\n  comprobante?: Comprobante;\n  // Getter para obtener el total\n  get total(): number {\n    return this.interes + this.tarifaFija + this.abonoCapital + this.abonoAdicionalCapital;\n  }\n}\n\n\nexport interface ResponseAmortizacion {\n  amortizaciones: Amortizacion[];\n  ahorroIntereses: number;\n  plazoReducido: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreditService {\n  constructor() { }\n\n  private redondear(valor: number): number {\n    return Math.round(valor);\n  }\n\n  private sumarMeses(fecha: Date, meses: number): Date {\n    const nuevaFecha = new Date(fecha);\n    nuevaFecha.setMonth(nuevaFecha.getMonth() + meses);\n    return nuevaFecha;\n  }\n\n  private recalcularTablaAmortizacion(\n    saldoInicial: number,\n    tasaMensual: number,\n    numCuotas: number,\n    fechaInicio: Date,// Nuevo parámetro para la fecha de inicio\n    tarifaFija: number = 0,\n    soloInteres: Record<number, { comprobante: Comprobante, valorInteres: number }> = {},\n    abonosCapital: Record<number, { comprobante: Comprobante, valorAbono: number }> = {},\n  ): Amortizacion[] {\n    let tablaAmortizacion: Amortizacion[] = [];\n    let cuotaFija;\n\n    cuotaFija = this.calcularCuotaFija(tasaMensual, saldoInicial, numCuotas, tarifaFija);\n\n    // Crear la tabla de amortización\n    let saldo = saldoInicial;\n\n    // Generar la tabla de amortización\n    for (let index = 1; index <= numCuotas; index++) {\n      let interes = 0;\n      let abonoCapital = 0;\n      let cuotaFijaTemp = cuotaFija;\n\n      // Verificar si hay un abono adicional para este mes\n      let comprobanteCapital = abonosCapital[index] || null;\n      let comprobanteIntereses = soloInteres[index] || null;\n      let abonoAdicionalCapital = comprobanteCapital?.valorAbono ?? 0;\n      let interesesComprobante = comprobanteIntereses?.valorInteres ?? 0;\n      let comprobante = comprobanteCapital?.comprobante ?? comprobanteIntereses?.comprobante ?? null\n\n      if (tasaMensual === 0) {\n        // Crédito sin interés\n        abonoCapital = this.redondear(cuotaFija);\n      } else {\n        // Crédito con interés\n        interes = this.redondear(saldo * tasaMensual);  // Calcular interés redondeado\n        abonoCapital = this.redondear(cuotaFija - interes);  // Cuota menos interés y seguro\n      }\n      let cuotaSoloInteres = interesesComprobante == interes && interes > 0;\n\n      if (cuotaSoloInteres) {\n        abonoCapital = 0;\n        cuotaFijaTemp = 0;\n        cuotaFija = this.calcularCuotaFija(tasaMensual, saldo, numCuotas - index, tarifaFija);\n      }\n\n      // Verificar si estamos en la última cuota o Si el saldo es menor que la cuota fija antes de la última cuota, ajusta la cuota a igualar al saldo\n      if (abonoCapital > saldo || index === numCuotas) {\n        abonoCapital = saldo; // Ajusta abono capital al saldo restante\n      }\n\n      saldo = this.redondear(saldo - abonoCapital - abonoAdicionalCapital);  // Actualizar el saldo restante\n\n      const amortizacion = new Amortizacion();\n      amortizacion.index = index;\n      amortizacion.cuota = cuotaFijaTemp;\n      amortizacion.interes = interes;\n      amortizacion.tarifaFija = tarifaFija;\n      amortizacion.abonoCapital = abonoCapital;\n      amortizacion.saldoRestante = saldo;\n      amortizacion.comprobante = comprobante;\n      amortizacion.abonoAdicionalCapital = abonoAdicionalCapital;\n      amortizacion.soloInteres = cuotaSoloInteres;\n\n      // Asignar la fecha correspondiente sumando meses a la fecha de inicio\n      amortizacion.fechaCuota = this.sumarMeses(fechaInicio, index - 1);\n\n      // Agregar los valores a la tabla\n      tablaAmortizacion.push(amortizacion);\n\n      // Si el saldo se vuelve 0 antes del final, no es necesario continuar\n      if (saldo <= 0) {\n        break;\n      }\n    }\n\n    return tablaAmortizacion;\n  }\n\n  public calcularAmortizacion(bien: Bien): ResponseAmortizacion {\n    let amortizaciones = this.recalcularTablaAmortizacion(\n      bien.contratoActivo.valorCredito,\n      bien.contratoActivo.tasaEM / 100,\n      bien.contratoActivo.plazoMeses,\n      bien.contratoActivo.inicio,\n      bien.contratoActivo.tarifaFija,\n    )\n    const totalIntereses = this.totalIntereses(amortizaciones);\n    let abonosCapital: Record<number, { comprobante: Comprobante, valorAbono: number }> = {};\n    let soloIntereses: Record<number, { comprobante: Comprobante, valorInteres: number }> = {};\n    amortizaciones.forEach((am, i) => {\n      bien.comprobantes.forEach((com, j) => {\n        if (am.fechaCuota.toLocaleDateString('en-CA').replace(/-/g, '') == com.periodo.inicio.toLocaleDateString('en-CA').replace(/-/g, '')) {\n          const conceptoAbono = com.conceptos.find(t => t.descripcion == BusinessControlService.CONCEPTO_ABONO_CAPITAL);\n          if (conceptoAbono) {\n            abonosCapital[i + 1] = {\n              comprobante: com,\n              valorAbono: conceptoAbono.valor\n            };\n          }\n          const conceptoIntereses = com.conceptos.find(t => t.descripcion == BusinessControlService.CONCEPTO_INTERESES);\n          if (conceptoIntereses && com.conceptos.length == 1) {\n            soloIntereses[i + 1] = {\n              comprobante: com,\n              valorInteres: conceptoIntereses.valor\n            };\n          }\n        }\n      });\n    });\n    amortizaciones = this.recalcularTablaAmortizacion(\n      bien.contratoActivo.valorCredito,\n      bien.contratoActivo.tasaEM / 100,\n      bien.contratoActivo.plazoMeses,\n      bien.contratoActivo.inicio,\n      bien.contratoActivo.tarifaFija,\n      soloIntereses,\n      abonosCapital\n    );\n    let ahorroIntereses = 0;\n    if (amortizaciones.length < bien.contratoActivo.plazoMeses) {\n      ahorroIntereses = this.totalIntereses(amortizaciones);\n      ahorroIntereses = totalIntereses - ahorroIntereses;\n    }\n    return {\n      amortizaciones: amortizaciones,\n      ahorroIntereses: ahorroIntereses,\n      plazoReducido: bien?.contratoActivo?.plazoMeses - amortizaciones.length\n    }\n  }\n\n  private totalIntereses(amortizaciones: Amortizacion[]) {\n    let ahorroIntereses: number = 0;\n    amortizaciones.forEach(t => {\n      ahorroIntereses += t.interes;\n    });\n    return ahorroIntereses;\n  }\n\n  private calcularCuotaFija(tasaMensual: number, saldoInicial: number, numCuotas: number, tarifaFija: number) {\n    let cuotaFija: number;\n    if (tasaMensual === 0) {\n      // Crédito sin interés\n      cuotaFija = this.redondear(saldoInicial / numCuotas) + tarifaFija;\n    } else {\n      // Crédito con interés\n      let cuotaMensualSinSeguro = this.redondear((saldoInicial * tasaMensual) / (1 - Math.pow(1 + tasaMensual, -numCuotas)));\n      cuotaFija = this.redondear(cuotaMensualSinSeguro);\n    }\n    return cuotaFija;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CryptService {\n  private secretKey = \"PedroPerez#JuanaLaLoca#Malparido#SiEncuentrasEsto\";\n  constructor() { }\n\n  // Método para cifrar un texto\n  public encrypt(text: string): string {\n    return CryptoJS.AES.encrypt(text, this.secretKey).toString();\n  }\n\n  // Método para descifrar un texto\n  public decrypt(cipherText: string): string {\n    const bytes = CryptoJS.AES.decrypt(cipherText, this.secretKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gapi } from 'gapi-script';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { SettingsData, Transaction, AccountConstant } from 'src/app/entities/account-control';\nimport { Configuracion } from 'src/app/entities/business-control';\nimport { TransactionOperation } from '../utils/transaction-operation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleService {\n  static isGettingEmail = false;\n  static gettingEmailPromise: Promise<TransactionFromGoogle[]> = null;\n  private CLIENT_ID = '746365364970-d423bo7481d242h1hrbs31p2q3tbsusd.apps.googleusercontent.com';\n  private API_KEY = 'TU_API_KEY'; // Opcional si solo usas OAuth\n  private SCOPES = \"https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/gmail.readonly\";\n  private DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\n    \"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"\n  ];\n\n  private get FOLDER_NAME(): string {\n    if (window.location.hostname == 'localhost')\n      return 'business-control-test';\n    return 'business-control';\n  };\n\n  private get FOLDER_NAME_ACCOUNT_CONTROL(): string {\n    if (window.location.hostname == 'localhost')\n      return 'account-control-test';\n    return 'account-control';\n  };\n\n  private config: Configuracion;\n  private configData: SettingsData;\n  private countGetConfig: number = 0;\n  private countGetSettingData: number = 0;\n\n\n  constructor(private toastr: ToastrService) {\n    this.loadGapiClient();\n  }\n\n\n  signOut() {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  private gapiLoaded$ = new BehaviorSubject<boolean>(false);\n\n\n  private loadGapiClient(): Promise<void> {\n    try {\n      return new Promise((resolve, reject) => {\n        gapi.load('client:auth2', async () => {\n          await gapi.client.load('gmail', 'v1');\n          gapi.client.init({\n            // apiKey: this.API_KEY,\n            clientId: this.CLIENT_ID,\n            discoveryDocs: this.DISCOVERY_DOCS,\n            scope: this.SCOPES\n          }).then(() => {\n            this.gapiLoaded$.next(true);\n            resolve();\n          }).catch((error) => {\n            this.toastr.error(\"Error al inicializar Google Drive\" + JSON.stringify(error), 'Business Control!');\n            this.gapiLoaded$.next(false);\n            reject(error);\n          });\n        });\n      });\n    } catch (error) {\n      this.toastr.error(\"Control de error al inicializar Google Drive: \" + JSON.stringify(error), 'Business Control!');\n    }\n  }\n\n  async signIn(): Promise<UserLoggedWithData | undefined> {\n    try {\n      if (!this.gapiLoaded$.getValue()) {\n        await this.loadGapiClient();\n      }\n      if (!this.gapiLoaded$.getValue()) {\n        return undefined;\n      }\n      const user = await gapi.auth2.getAuthInstance().signIn();\n      await this.getConfigFromUser();\n      return {\n        data: this.config,\n        user: {\n          email: user.getBasicProfile().getEmail(),\n          username: user.getBasicProfile().getName(),\n        }\n      };\n\n\n    } catch (error) {\n      this.toastr.error(\"Control de error en login: \" + JSON.stringify(error), 'Business Control!');\n    }\n  }\n\n  async signInForAccountControl(): Promise<UserLoggedWithSettingsData | undefined> {\n    try {\n      if (!this.gapiLoaded$.getValue()) {\n        await this.loadGapiClient();\n      }\n      if (!this.gapiLoaded$.getValue()) {\n        return undefined;\n      }\n      const user = await gapi.auth2.getAuthInstance().signIn();\n      await this.getSettingDataFromUser();\n      return {\n        data: this.configData,\n        user: {\n          email: user.getBasicProfile().getEmail(),\n          username: user.getBasicProfile().getName(),\n        }\n      };\n\n    } catch (error) {\n      this.toastr.error(\"Control de error en login: \" + JSON.stringify(error), 'Business Control!');\n    }\n  }\n\n  private async getConfigFromUser() {\n    if (!this.config && this.countGetConfig == 0) {\n      const data = await this.downloadFirstJsonFileFromBusinessControlFolder(this.FOLDER_NAME);\n      this.config = data ? JSON.parse(data as string) : undefined;\n      if (this.config) {\n        if (this.config.ultimaModificacion) {\n          this.config.ultimaModificacion = new Date(this.config.ultimaModificacion);\n        }\n      }\n    }\n    this.countGetConfig++;\n  }\n\n  private async getSettingDataFromUser() {\n    console.log('getSettingDataFromUser', this.countGetSettingData);\n    if (!this.configData && this.countGetSettingData == 0) {\n      const data = await this.downloadFirstJsonFileFromBusinessControlFolder(this.FOLDER_NAME_ACCOUNT_CONTROL);\n      this.configData = data ? JSON.parse(data as string) : undefined;\n      if (this.configData) {\n        if (this.configData.lastSync) {\n          this.configData.lastSync = new Date(this.configData.lastSync);\n        }\n      }\n    }\n    this.countGetSettingData++;\n  }\n\n  async getUser(): Promise<UserLoggedWithData | undefined> {\n    if (!this.gapiLoaded$.getValue()) {\n      await this.loadGapiClient();\n    }\n    if (this.gapiLoaded$.getValue()) {\n      const userGoogle = gapi.auth2.getAuthInstance().currentUser.get();\n      if (userGoogle.isSignedIn()) {\n        await this.getConfigFromUser();\n        return {\n          data: this.config,\n          user: {\n            email: userGoogle.getBasicProfile().getEmail(),\n            username: userGoogle.getBasicProfile().getName(),\n          }\n        };\n      }\n    }\n    return undefined;\n  }\n\n  async getUserForAccountControl(): Promise<UserLoggedWithSettingsData | undefined> {\n    if (!this.gapiLoaded$.getValue()) {\n      await this.loadGapiClient();\n    }\n    if (this.gapiLoaded$.getValue()) {\n      const userGoogle = gapi.auth2.getAuthInstance().currentUser.get();\n      if (userGoogle.isSignedIn()) {\n        await this.getSettingDataFromUser();\n        return {\n          data: this.configData,\n          user: {\n            email: userGoogle.getBasicProfile().getEmail(),\n            username: userGoogle.getBasicProfile().getName(),\n          }\n        };\n      }\n    }\n    return undefined;\n  }\n\n  async isUserLogged(): Promise<boolean> {\n    if (!this.gapiLoaded$.getValue()) {\n      await this.loadGapiClient();\n    }\n    if (!this.gapiLoaded$.getValue()) {\n      return false;\n    }\n    const userGoogle = gapi.auth2.getAuthInstance().currentUser.get();\n    return userGoogle.isSignedIn();\n  }\n\n  private uploadBlobToFolder(blob: Blob, fileName: string, folderId: string, accessToken: string): Promise<any> {\n    const metadata = {\n      'name': fileName,\n      'mimeType': blob.type,\n      'parents': [folderId]  // Subir el archivo a la carpeta especificada\n    };\n\n    const formData = new FormData();\n    formData.append('metadata', new Blob([JSON.stringify(metadata)], { type: 'application/json' }));\n    formData.append('file', blob);\n\n    return fetch('https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.toastr.success('Información creada exitosamente:' + JSON.stringify(data), 'Business Control!');\n      })\n      .catch(error => {\n        this.toastr.error('Error al subir el archivo:' + JSON.stringify(error), 'Business Control!');\n      });\n  }\n\n\n  private findFileInFolder(fileName: string, folderId: string, accessToken: string): Promise<string | null> {\n    return fetch(`https://www.googleapis.com/drive/v3/files?q='${folderId}' in parents and name='${fileName}' and trashed=false`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Accept': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        const files = data.files;\n        if (files && files.length > 0) {\n          return files[0].id;  // Retorna el ID del archivo si existe\n        }\n        return null;  // Retorna null si no encuentra el archivo\n      });\n  }\n\n\n  private updateFile(fileId: string, blob: Blob, accessToken: string): Promise<any> {\n    const metadata = {\n      'mimeType': blob.type\n    };\n\n    const formData = new FormData();\n    formData.append('metadata', new Blob([JSON.stringify(metadata)], { type: 'application/json' }));\n    formData.append('file', blob);\n\n    return fetch(`https://www.googleapis.com/upload/drive/v3/files/${fileId}?uploadType=multipart`, {\n      method: 'PATCH',  // Utilizamos PATCH para actualizar el archivo\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.toastr.success('Información actualizada exitosamente:' + JSON.stringify(data), 'Business Control!');\n      })\n      .catch(error => {\n        this.toastr.error('Error al actualizar el archivo:' + JSON.stringify(error), 'Business Control!');\n      });\n  }\n\n\n  async uploadFileWithFolderDetection(blob: Blob, filename: string, isAccountControl: boolean = false) {\n    const folderName: string = !isAccountControl ? this.FOLDER_NAME : this.FOLDER_NAME_ACCOUNT_CONTROL;\n    const accessToken = gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n\n    await this.findFolderByName(folderName, accessToken)\n      .then(folderId => {\n        if (folderId) {\n          this.toastr.info('Carpeta encontrada, ID:' + folderId, 'Business Control!');\n\n          // Verificamos si el archivo ya existe en la carpeta\n          return this.findFileInFolder(filename, folderId, accessToken)\n            .then(fileId => {\n              if (fileId) {\n                // El archivo ya existe, lo actualizamos\n                this.toastr.info('Archivo encontrado, actualizando...', 'Business Control!');\n                return this.updateFile(fileId, blob, accessToken);\n              } else {\n                // El archivo no existe, lo subimos\n                this.toastr.warning('Archivo no encontrado, subiendo nuevo archivo...', 'Business Control!');\n                return this.uploadBlobToFolder(blob, filename, folderId, accessToken);\n              }\n            });\n        } else {\n          // La carpeta no existe, la creamos\n          this.toastr.warning('Carpeta no encontrada, creando nueva carpeta...', 'Business Control!');\n          return this.createFolder(folderName, accessToken)\n            .then(newFolderId => {\n              this.toastr.info('Nueva carpeta creada, ID:' + newFolderId, 'Business Control!');\n              return this.uploadBlobToFolder(blob, filename, newFolderId, accessToken);\n            });\n        }\n      })\n      .catch(error => {\n        this.toastr.error('Error al manejar el archivo:' + JSON.stringify(error), 'Business Control!');\n      });\n  }\n\n\n  private findFolderByName(folderName: string, accessToken: string): Promise<string | null> {\n    return fetch(`https://www.googleapis.com/drive/v3/files?q=mimeType='application/vnd.google-apps.folder' and name='${folderName}' and trashed=false`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Accept': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        const files = data.files;\n        if (files && files.length > 0) {\n          return files[0].id;  // Retorna el ID de la carpeta si existe\n        }\n        return null;  // Retorna null si no encuentra la carpeta\n      });\n  }\n\n\n  private createFolder(folderName: string, accessToken: string): Promise<string> {\n    const metadata = {\n      'name': folderName,\n      'mimeType': 'application/vnd.google-apps.folder'\n    };\n\n    return fetch('https://www.googleapis.com/drive/v3/files', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(metadata)\n    })\n      .then(response => response.json())\n      .then(data => data.id);  // Retorna el ID de la carpeta creada\n  }\n\n  private async downloadFirstJsonFileFromBusinessControlFolder(folderName: string): Promise<string | null> {\n    const accessToken = gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n\n    try {\n      // Buscar la carpeta por nombre\n      const folderId = await this.findFolderByName(folderName, accessToken);\n      if (!folderId) {\n        this.toastr.warning('Carpeta no encontrada', 'Business Control!');\n        return null;\n      }\n\n      // Buscar el primer archivo .json en la carpeta\n      const fileId = await this.findFirstJsonFileInFolder(folderId, accessToken);\n      if (!fileId) {\n        this.toastr.warning('Archivo .json no encontrado en la carpeta', 'Business Control!');\n        return null;\n      }\n\n      // Descargar el contenido del archivo\n      return this.downloadFileContent(fileId, accessToken);\n    } catch (error) {\n      this.toastr.info('Error al descargar el archivo:' + JSON.stringify(error), 'Business Control!');\n      return null;\n    }\n  }\n\n  private findFirstJsonFileInFolder(folderId: string, accessToken: string): Promise<string | null> {\n    return fetch(`https://www.googleapis.com/drive/v3/files?q='${folderId}' in parents and trashed=false`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Accept': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        const files = data.files;\n        if (files && files.length > 0) {\n          // Filtrar archivos con extensión .json\n          const jsonFiles = files.filter(file => file.name.endsWith('.json'));\n          if (jsonFiles.length > 0) {\n            return jsonFiles[0].id;  // Retorna el ID del primer archivo .json\n          }\n        }\n        return null;  // Retorna null si no encuentra ningún archivo .json\n      });\n  }\n\n\n  private downloadFileContent(fileId: string, accessToken: string): Promise<string> {\n    return fetch(`https://www.googleapis.com/drive/v3/files/${fileId}?alt=media`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    })\n      .then(response => response.text());  // Retorna el contenido del archivo como string\n  }\n\n  // Obtener correos electrónicos nuevos a partir de una fecha dada y de varios remitentes\n  async getNewEmailsSince(date: Date, senders: string[] = ['alertasynotificaciones@notificacionesbancolombia.com', 'alertasynotificaciones@bancolombia.com.co']): Promise<any[]> {\n    console.log(\"Consultando emails\", date, senders);\n    const accessToken = gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n\n    // Convertir la fecha a formato RFC 3339\n    const rfc3339Date = date.toISOString();\n    const gmail: any = gapi.client['gmail'];\n\n    // Crear una promesa para cada remitente en el arreglo\n    const promises = senders.map(sender => {\n      const query = `from:${sender} after:${Math.floor(new Date(rfc3339Date).getTime() / 1000)}`;\n      return gmail.users.messages.list({\n        'userId': 'me',\n        'q': query,\n      });\n    });\n\n    try {\n      // Ejecutar todas las promesas en paralelo y esperar los resultados\n      const responses = await Promise.all(promises);\n\n      // Extraer y combinar los IDs de los correos electrónicos de cada respuesta sin flatMap\n      const emailIds = responses.reduce((acc: any[], response) => {\n        const messages = response.result.messages || [];\n        return acc.concat(messages.map((message: any) => message.id));\n      }, []);\n\n      // Obtener detalles de todos los correos electrónicos combinados\n      if (emailIds.length > 0) {\n        return await this.fetchEmailDetails(emailIds);\n      } else {\n        this.toastr.info('No se encontraron correos electrónicos nuevos desde la fecha especificada.', 'Business Control!');\n        return [];\n      }\n    } catch (error) {\n      this.toastr.info('Error al consultar los correos electrónicos:' + JSON.stringify(error), 'Business Control!');\n      return [];\n    }\n  }\n\n\n\n  // Obtener detalles de cada correo a partir de sus IDs\n  private async fetchEmailDetails(emailIds: string[]): Promise<any[]> {\n    const emails = [];\n    const gmail: any = gapi.client['gmail'];\n\n    for (const emailId of emailIds) {\n      const email = await gmail.users.messages.get({\n        'userId': 'me',\n        'id': emailId\n      });\n\n      emails.push(email.result);\n    }\n\n    return emails;\n  }\n\n  // Procesar correos electrónicos para extraer transacciones\n  processEmailsForTransactions(emails: any[]): TransactionFromGoogle[] {\n    const transactions: TransactionFromGoogle[] = [];\n    const helper = new TransactionOperation();\n    emails.forEach(email => {\n      const body = this.getEmailBody(email);\n      const idEmail = this.getIdEmail(email);\n\n      // Buscar patrones para detectar compras, transferencias e ingresos\n      const transaction = helper.getTransaction(body, idEmail);\n      transactions.push(transaction);\n    });\n\n    return transactions;\n  }\n\n  private getIdEmail(email: any): string {\n    return email.id;\n  }\n\n  // Obtener el cuerpo del correo electrónico\n  private getEmailBody(email: any): string {\n    return email.snippet;\n    // const bodyData = email.payload.parts.filter((part: any) => part.mimeType === 'text/html' || part.mimeType === 'text/plain')[0].body.data;\n    // return atob(bodyData.replace(/-/g, '+').replace(/_/g, '/'));\n  }\n\n\n  async getTransactionsSince(date: Date): Promise<TransactionFromGoogle[]> {\n    try {\n      console.log(\"getTransactionsSince\", date);\n      if (!GoogleService.isGettingEmail)\n        GoogleService.gettingEmailPromise = this.getNewEmailsSince(date);;\n      GoogleService.isGettingEmail = true;\n      const emails = await GoogleService.gettingEmailPromise;\n      GoogleService.isGettingEmail = false;\n      if (emails.length === 0) {\n        return [];\n      }\n\n      const transactions = this.processEmailsForTransactions(emails);\n      if (transactions.length === 0) {\n        this.toastr.warning('No se encontraron transacciones en los correos.', 'Business Control!');\n      }\n      return transactions;\n\n    } catch (error) {\n      console.error(error);\n      this.toastr.error('Error al obtener transacciones: ' + JSON.stringify(error), 'Business Control!');\n      return [];\n    }\n  }\n\n}\n\nexport interface TransactionFromGoogle extends Transaction {\n\n}\n\nexport interface UserLoggedWithSettingsData {\n  user: UserGoogle\n  data: SettingsData | null\n}\n\nexport interface UserLoggedWithData {\n  user: UserGoogle\n  data: Configuracion | undefined\n}\n\nexport interface UserGoogle {\n  username: string;\n  email: string;\n}","import { Injectable, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Summary } from 'src/app/entities/summary';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadDataService {\n\n  constructor(private _httpService: HttpClient) { }\n\n  public GetData(): Observable<Summary> {\n    const observableResponse = new Observable<Summary>(observer => {\n      if (!HelperSummaryService.Summary) {\n        this._httpService.get<Summary>('./config/data.json').subscribe(datos => {\n          HelperSummaryService.Summary = datos;\n          observer.next(HelperSummaryService.Summary);\n        });\n      } else {\n        observer.next(HelperSummaryService.Summary);\n      }\n    });\n    return observableResponse;\n  }\n}\n\nexport class HelperSummaryService {\n  public static Summary: Summary;\n}","import { Injectable } from '@angular/core';\nimport html2pdf from 'html2pdf.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfService {\n\n  constructor() { }\n  private options = {\n    filename: '',\n    image: { type: 'png', quality: 0.98 },\n    html2canvas: { scale: 4 },  // Ajusta la escala para mejorar la resolución\n    jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait', compress: true },\n    margin: 10 // margen de 10mm alrededor\n  };\n  public async generatePDF(namefile: string, content: HTMLElement) {\n    this.options.filename = namefile + '.pdf';\n\n    await html2pdf().from(content).set(this.options).save();\n  }\n\n  public getPdfInBlob(namefile: string, content: HTMLElement): Promise<Blob> {\n    this.options.filename = namefile + '.pdf';\n    return html2pdf().from(content).set(this.options).outputPdf('blob');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as QRCode from 'qrcode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QrCodeService {\n\n  constructor() { }\n\n  // Método para generar un código QR en formato de Data URL\n  public generateQRCode(text: string): Promise<string> {\n    return QRCode.toDataURL(text, {\n      errorCorrectionLevel: 'H', // Nivel de corrección de errores: L, M, Q, H\n      type: 'image/png',\n      width: 400, // Ancho del código QR\n      margin: 2 // Margen alrededor del código QR\n    });\n  }\n\n  // Método para generar un código QR en formato de imagen SVG\n  public generateQRCodeSVG(text: string): Promise<string> {\n    return QRCode.toString(text, {\n      type: 'svg',\n      errorCorrectionLevel: 'H'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadDataService } from '../load-data/load-data.service';\nimport { Summary } from 'src/app/entities/summary';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SummaryResumeService {\n\n  constructor(private _dataService: LoadDataService) { }\n\n  public GetProfile(): Observable<Summary> {\n    return this._dataService.GetData();\n  }\n}\n","import { Transaction, AccountConstant } from \"src/app/entities/account-control\";\nimport { TransactionFromGoogle } from \"../google-services/google.service\";\n\nexport class TransactionOperation {\n\n    public getTransaction(body: string, id: string): TransactionFromGoogle {\n        const purchasePattern = /[Cc]ompraste\\s+COP([\\d,.]+)\\s+en\\s+([\\w\\s*]+)\\s+con\\s+tu\\s+T\\.Cred\\s+\\*{1,2}([\\d]{4}),\\s+el\\s+(([\\d/]+)\\s+a\\s+las\\s+([\\d:]+)|([\\d:]+)\\s+a\\s+las\\s+([\\d/]+))/i;\n        const purchasePatternSimple = /[Cc]ompra\\s+por\\s+COP([\\d,.]+)\\s+en\\s+([\\w\\s*]+)\\s+(\\d{2}:\\d{2})\\.\\s+([\\d/]+)\\s+T\\.Cred\\s+\\*([\\d]{4})/i;\n        const purchasePatternSimpl2 = /[Cc]ompra\\s+por\\s+\\$([\\d,.]+)\\s+en\\s+([\\w\\s*]+)\\s+(\\d{2}:\\d{2})\\.\\s+([\\d/]+)\\s+T\\.Cred\\s+\\*([\\d]{4})/i;\n        const transferPattern = /[Tt]ransferiste\\s+\\$([\\d,.]+)\\s+desde\\s+tu\\s+cuenta\\s+\\*(\\d+)\\s+a\\s+la\\s+cuenta\\s+(\\*\\d+)\\s+el\\s+([\\d/]+)\\s+a\\s+las\\s+([\\d:]+)/i;\n        const transferPatter2 = /[Tt]ransferiste\\s+\\$([\\d,.]+)\\s+de\\s+tu\\s+cuenta\\s+\\*\\*(\\d+)\\s+la\\s+cuenta\\s+\\*(\\d+),\\s+el\\s+([\\d\\/]+)\\s+([\\d:]+)/i\n        const transferPatter3 = /[Tt]ransferencia\\s+por\\s+\\$([\\d,.]+)\\s+desde\\s+cta\\s+\\*(\\d+)\\s+a\\s+cta\\s+(\\d+)\\.\\s+([\\d\\/]+)\\s+(\\d{2}:\\d{2})/i;\n\n        const providerPaymentPattern = /[Pp]ago\\s+[Pp]ROVEEDOR\\s+de\\s+([\\w\\s]+)\\s+por\\s+\\$([\\d,.]+)\\s+en\\s+su\\s+[Cc]uenta\\s+[Aa]horros.\\s+(\\d{2}:\\d{2})\\s+([\\d\\/]+)/i;\n\n\n        const qrTransferPattern = /[Rr]ealizaste\\s+una\\s+transferencia\\s+con\\s+QR\\s+por\\s+\\$([\\d,.]+),\\s+desde\\s+cta\\s+(\\d+)\\s+a\\s+cta\\s+(\\d+).\\s+([\\d\\/]+)\\s+(\\d{2}:\\d{2})/i;\n        const receivedTransferPattern = /[Rr]ecepcion\\s+transferencia\\s+de\\s+([\\w\\sÑñÁÉÍÓÚáéíóú]+)\\s+por\\s+\\$([\\d,.]+)\\s+en\\s+la\\s+cuenta\\s+(\\*\\d+)\\.\\s*(\\d{2}\\/\\d{2}\\/\\d{4})\\s+(\\d{2}:\\d{2})/i;\n        const incomePattern = /[Pp]ago\\s+de\\s+Nomina\\s+de\\s+([\\w\\s]+)\\s+por\\s+\\$([\\d,.]+)\\s+en\\s+su\\s+Cuenta\\s+Ahorros.\\s+([\\d:]+)\\s+([\\d/]+)/i;\n        const withdrawalPattern = /[Rr]etiraste\\s+\\$([\\d,.]+)\\s+en\\s+([\\w\\s*]+)\\s+de\\s+tu\\s+T\\.Deb\\s+\\*\\*([\\d]{4})\\s+el\\s+([\\d/]+)\\s+a\\s+las\\s+([\\d:]+)/i;\n        const retiroPattern = /[Rr]etiro\\s+por\\s+\\$([\\d,.]+)\\s+en\\s+([\\w_]+)\\.\\s+Hora\\s+(\\d{2}:\\d{2})\\s+([\\d\\/]+)\\s+T\\.Deb\\s+\\*(\\d{4})/i;\n        const paymentPattern = /[Pp]agaste\\s+\\$([\\d,.]+)\\s+a\\s+([\\w\\s]+)\\s+desde\\s+tu\\s+producto\\s+(\\*\\d+)\\s+el\\s+([\\d\\/]+)\\s+(\\d{2}:\\d{2})/i;\n        const affiliatePurchasePattern = /[Cc]ompra por COP([\\d,.]+)\\s+en\\s+([\\w\\/.]+)\\s+(\\d{2}:\\d{2})\\.\\s+([\\d\\/]+)\\s+compra\\s+afiliada\\s+a\\s+T\\.Cred\\s+\\*([\\d]{4})/i;\n        const affiliatePurchasePatter2 = /[Cc]ompra\\s+por\\s+\\$([\\d,.]+)\\s+en\\s+([\\w\\/.]+)\\s+(\\d{2}:\\d{2})\\.\\s+([\\d\\/]+)\\s+compra\\s+afiliada\\s+a\\s+T\\.Cred\\s+\\*(\\d{4})/i;\n        const notificationPattern = /[Rr]ecibiras \\$(\\d{1,3}(?:\\.\\d{3})*,\\d{2}) en (\\d+) dias habiles en tu Tarjeta Credito \\*\\*(\\d{4}) por parte de ([\\w\\s]+?)\\. (\\d{2}):(\\d{2}) (\\d{2})\\/(\\d{2})\\/(\\d{4})/;\n        const paymentCreditCardPattern = /[Nn]otificación [Tt]ransaccional.*Pago\\s+de\\s+Tarjeta\\s+de\\s+Credito\\s+por\\s+\\$([\\d,.]+)\\s+desde\\s+cta\\s+\\*(\\d+)\\s+a\\s+la\\s+tarjeta\\s+\\*(\\d+).\\s+([\\d/]+)\\s+(\\d{2}:\\d{2})/i;\n\n        // Patrón para las notificaciones de compras de Bancolombia\n\n\n        let type: 'income' | 'expense' | 'transfer' = 'expense';\n        let accountId = '';\n        let amount = 0;\n        let date: Date | string = new Date();\n        let description = '';\n        let categoryId = '';\n        let targetAccountId = '';\n\n        if (purchasePattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(purchasePattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                description = `Compra en ${matches[2]}`;\n                accountId = `*${matches[3]}`;\n                if (!matches[5]) {\n                    date = this.parseDateTime(matches[8], matches[7]);\n                } else {\n                    date = this.parseDateTime(matches[5], matches[6]);\n                }\n            }\n        } else if (purchasePatternSimple.test(body)) {\n            const matches = body.match(purchasePatternSimple);\n            if (matches) {\n                type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n                amount = this.parseAmount(matches[1]);\n                description = `Compra en ${matches[2]}`;\n                date = this.parseDateTime(matches[4], matches[3]);\n                accountId = `*${matches[5]}`;\n            }\n        } else if (purchasePatternSimpl2.test(body)) {\n            const matches = body.match(purchasePatternSimpl2);\n            if (matches) {\n                type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n                amount = this.parseAmount(matches[1]);\n                description = `Compra en ${matches[2]}`;\n                date = this.parseDateTime(matches[4], matches[3]);\n                accountId = `*${matches[5]}`;\n            }\n        } else if (transferPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(transferPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1], 1);\n                accountId = `*${matches[2]}`;\n                targetAccountId = matches[3];\n                description = `Transferencia a la cuenta ${targetAccountId}`;\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        } else if (transferPatter2.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(transferPatter2);\n            if (matches) {\n                amount = this.parseAmount(matches[1], 1);\n                accountId = `*${matches[2]}`;\n                targetAccountId = matches[3];\n                description = `Transferencia a la cuenta ${targetAccountId}`;\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        } else if (qrTransferPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(qrTransferPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                accountId = `*${matches[2]}`;\n                targetAccountId = matches[3];\n                description = `Transferencia con QR a la cuenta ${targetAccountId}`;\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        } else if (receivedTransferPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_INCOME;\n            const matches = body.match(receivedTransferPattern);\n            if (matches) {\n                description = `transferencia de ${matches[1].trim()}`;\n                amount = this.parseAmount(matches[2], 1);\n                accountId = matches[3];\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        } else if (incomePattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_INCOME;\n            const matches = body.match(incomePattern);\n            if (matches) {\n                description = `Pago de nómina de ${matches[1]}`;\n                amount = this.parseAmount(matches[2]);\n                date = this.parseDateTime(matches[4], matches[3]);\n            }\n        } else if (withdrawalPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(withdrawalPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                description = `Retiraste en ${matches[2]}`;\n                accountId = `*${matches[3]}`;\n                date = this.parseDateTime(matches[4], matches[5]);\n                targetAccountId = AccountConstant.ACCOUNT_BILLETERA;\n            }\n        } else if (paymentPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(paymentPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                description = `Pago a ${matches[2]}`;\n                accountId = matches[3];\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        } else if (affiliatePurchasePattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(affiliatePurchasePattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                description = `Compra en ${matches[2]}`;\n                accountId = `*${matches[5]}`;\n                date = this.parseDateTime(matches[4], matches[3]);\n            }\n        } else if (affiliatePurchasePatter2.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(affiliatePurchasePatter2);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                description = `Compra en ${matches[2]}`;\n                accountId = `*${matches[5]}`;\n                date = this.parseDateTime(matches[4], matches[3]);\n            }\n        } else if (notificationPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_INCOME;\n            const matches = body.match(notificationPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                accountId = `*${matches[3]}`;\n                description = `Recibirás en tu Tarjeta de Crédito por parte de ${matches[4].trim()}`;\n                date = this.parseDateTime(`${matches[7]}/${matches[8]}/${matches[9]}`, `${matches[5]}:${matches[6]}`);\n            }\n        } else if (paymentCreditCardPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(paymentCreditCardPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                accountId = `*${matches[2]}`;\n                targetAccountId = `*${matches[3]}`;\n                description = `Pago de T.Cred Nro ${targetAccountId}`;\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        }\n        else if (retiroPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(retiroPattern);\n            if (matches) {\n                amount = this.parseAmount(matches[1]);\n                description = `Retiro en ${matches[2]}`;\n                date = this.parseDateTime(matches[4], matches[3]);\n                accountId = `*${matches[5]}`;\n                targetAccountId = AccountConstant.ACCOUNT_BILLETERA;\n            }\n        } else if (transferPatter3.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_EXPENSE;\n            const matches = body.match(transferPatter3);\n            if (matches) {\n                amount = this.parseAmount(matches[1], 1);\n                accountId = `*${matches[2]}`;\n                targetAccountId = `*${matches[3]}`;\n                description = `Transferencia a la cuenta ${targetAccountId}`;\n                date = this.parseDateTime(matches[4], matches[5]);\n            }\n        } else if (providerPaymentPattern.test(body)) {\n            type = AccountConstant.TRANSACTION_TYPE_INCOME;\n            const matches = body.match(providerPaymentPattern);\n            if (matches) {\n                description = `Pago PROVEEDOR de ${matches[1]}`;\n                amount = this.parseAmount(matches[2]);\n                accountId = ''; // Si hay un accountId específico, añádelo aquí\n                date = this.parseDateTime(matches[4], matches[3]);\n            }\n        }\n\n\n\n\n        if (type === AccountConstant.TRANSACTION_TYPE_EXPENSE && amount > 0) {\n            amount = -amount;\n        }\n        accountId = accountId.replace(/\\*/g, '');\n        targetAccountId = targetAccountId.replace(/\\*/g, '');\n\n        return { id, accountId: '', originalAccount: accountId, amount, date, categoryId, description, type, originalBody: body, targetAccountId: targetAccountId, canProcessed: (description ? true : false), isProcessed: false };\n    }\n\n    public createTransactionIfIsTranfer(transaction: Transaction): Transaction {\n        if (transaction.targetAccountId) {\n            transaction.transactionId = transaction.id;\n            const cloneTransaction = { ...transaction };\n            transaction.id = this.generateUniqueId();\n            cloneTransaction.id = this.generateUniqueId();\n            cloneTransaction.accountId = (transaction.accountId ? transaction.targetAccountId : null);\n            cloneTransaction.originalAccount = transaction.targetAccountId;\n            cloneTransaction.targetAccountId = transaction.originalAccount;\n            cloneTransaction.isProcessed = false;\n            cloneTransaction.description = `Transf. Automatica: ${cloneTransaction.description}`;\n            cloneTransaction.type = AccountConstant.TRANSACTION_TYPE_INCOME;\n            cloneTransaction.amount = cloneTransaction.amount * -1;\n            return cloneTransaction;\n        }\n        return null;\n    }\n\n    private parseAmount(amountStr: string, rounded = 100): number {\n        if (amountStr.includes(\".\") && amountStr.includes(\",\"))\n            return parseFloat(amountStr.replace(/[,.]/g, '')) / rounded;\n        return parseFloat(amountStr.split(\".\")[0]);\n    }\n\n    public parseDateTime(dateStr: string, timeStr: string = '00:00'): Date {\n        let day: number, month: number, year: number;\n        const [hour, minute] = timeStr.split(':').map(Number);\n\n        // Detect format and parse accordingly\n        if (dateStr.includes('/')) {\n            const parts = dateStr.split('/');\n\n            if (parts[0].length === 4) {\n                // yyyy/mm/dd format\n                [year, month, day] = parts.map(Number);\n            } else {\n                // dd/mm/yyyy format\n                [day, month, year] = parts.map(Number);\n            }\n        } else {\n            // throw new Error(\"Unrecognized date format\");\n            return new Date();\n        }\n\n        // Create date in UTC, then adjust to Colombia time\n        const date = new Date(Date.UTC(year, month - 1, day, hour + 5, minute)); // UTC + 5 for Colombia\n        date.setUTCHours(date.getUTCHours()); // Final adjustment for Colombia Time\n        return date;\n    }\n\n\n    private generateUniqueId(): string {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*!\n\n=========================================================\n* Argon Dashboard Angular - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-angular\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-angular/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    platformBrowserDynamic().bootstrapModule(AppModule)\n        .catch(err => console.log(err));\n});","/* (ignored) */"],"sourceRoot":"webpack:///"}